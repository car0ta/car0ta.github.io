<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>car0ta</title>
  
  <subtitle>car0ta&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://car0ta.github.io/"/>
  <updated>2023-04-25T08:44:42.585Z</updated>
  <id>https://car0ta.github.io/</id>
  
  <author>
    <name>car0ta</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android 安全学习之路</title>
    <link href="https://car0ta.github.io/2023/04/23/Android-Security-Learning-Road/"/>
    <id>https://car0ta.github.io/2023/04/23/Android-Security-Learning-Road/</id>
    <published>2023-04-23T09:17:53.000Z</published>
    <updated>2023-04-25T08:44:42.585Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下 Android 安全的学习路线及相关资料。</p><p>网上也有一些 Android 安全的学习路线可以参考：</p><p><a href="https://www.52pojie.cn/thread-1065039-1-1.html">https://www.52pojie.cn/thread-1065039-1-1.html</a></p><p><a href="https://sec-wiki.com/skill/8">https://sec-wiki.com/skill/8</a></p><h2 id="Android-应用开发">Android 应用开发</h2><p>《第一行代码——Android》</p><h2 id="Android-应用安全">Android 应用安全</h2><p>Android 应用审计（细节内容挂了但是可以参考下 checklist）</p><p><a href="https://github.com/guanchao/AndroidChecklist">https://github.com/guanchao/AndroidChecklist</a></p><p>Android App 常见安全漏洞</p><p><a href="https://ayesawyer.github.io/2019/08/21/Android-App%E5%B8%B8%E8%A7%81%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/">https://ayesawyer.github.io/2019/08/21/Android-App常见安全漏洞/</a></p><p>Android App 漏洞之战系列</p><p><a href="https://github.com/WindXaa/Android-Vulnerability-Mining">https://github.com/WindXaa/Android-Vulnerability-Mining</a></p><h2 id="Android-操作系统">Android 操作系统</h2><p>Gityuan - Android 操作系统架构开篇</p><p><a href="http://gityuan.com/android/">http://gityuan.com/android/</a></p><h2 id="Android-系统安全">Android 系统安全</h2><p>安卓内核漏洞</p><p><a href="https://github.com/tangsilian/android-vuln">https://github.com/tangsilian/android-vuln</a></p><h2 id="Android-逆向">Android 逆向</h2><p>Android 逆向相关的实例</p><p><a href="https://gtoad.github.io/2019/10/29/Android-APP-Analyse-Base/">https://gtoad.github.io/2019/10/29/Android-APP-Analyse-Base/</a></p><h2 id="Android-Hook">Android Hook</h2><p>Android Hook 技术学习</p><p><a href="https://bbs.kanxue.com/thread-272870.htm">https://bbs.kanxue.com/thread-272870.htm</a></p><h2 id="Android-安全对抗">Android 安全对抗</h2><h3 id="反调试与反反调试">反调试与反反调试</h3><p>Android 反调试技术整理与实践</p><p><a href="https://gtoad.github.io/2017/06/25/Android-Anti-Debug/">https://gtoad.github.io/2017/06/25/Android-Anti-Debug/</a></p><h3 id="运行环境检测">运行环境检测</h3><h3 id="加固与脱壳">加固与脱壳</h3><p>常见脱壳工具：</p><p>FART</p><p><a href="https://github.com/hanbinglengyue/fart">https://github.com/hanbinglengyue/fart</a></p><p>FRIDA-DEXDump</p><p><a href="https://github.com/hluwa/FRIDA-DEXDump">https://github.com/hluwa/FRIDA-DEXDump</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录一下 Android 安全的学习路线及相关资料。&lt;/p&gt;
&lt;p&gt;网上也有一些 Android 安全的学习路线可以参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.52pojie.cn/thread-1065039-1-1.html&quot;&gt;https://www
      
    
    </summary>
    
    
      <category term="Android Security" scheme="https://car0ta.github.io/categories/Android-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>Static Program Analysis (IFDS)</title>
    <link href="https://car0ta.github.io/2023/04/11/Static-Program-Analysis-IFDS/"/>
    <id>https://car0ta.github.io/2023/04/11/Static-Program-Analysis-IFDS/</id>
    <published>2023-04-11T03:07:26.000Z</published>
    <updated>2023-05-07T15:48:49.940Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Feasible-and-Realizable-Paths">Feasible and Realizable Paths</h2><p>Infeasible Paths: Path in CFG that do not correspond to actual executions.</p><p>对于程序分析而言，不希望分析结果被实际不可执行的路径所污染（误报）；但一条路径是否可执行通常是无法判断的。</p><p>例如下面代码中参数 age 一定是个正整数，因此 <code>r=-1</code> 这条路径动态实际不会执行到（infeasible path）。</p><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">foo(int age) {</span><br><span class="line">if (age &gt;=0) {</span><br><span class="line">r = age;</span><br><span class="line">}</span><br><span class="line">else {</span><br><span class="line">r = -1;</span><br><span class="line">}</span><br><span class="line">return r;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>对于下图中的代码，实际运行的结果应该是 <code>x=18; y=30</code>，但是如果采用上下文不敏感的静态分析，结果是 <code>x=18,30,-1; y=18,30,-1</code>。其中，<code>x=-1; y=-1</code> 是不可避免的，但是 foo(18) 的 return 应该回到相应的 call 处，即 <code>call foo(18) -&gt; exit(foo) -&gt; x=return foo</code> 是可以分析出来的，因此 <code>x=30; y=18</code> 是可以避免的。</p><img src="Realizable-Paths.png" alt="Realizable-Paths" style="zoom:33%;"><p>Realizable Paths: The paths in which “returns” are matched with corresponding “calls”.</p><p>Realizable paths 可能不会被实际执行（可能某个 call-site 是 infeasible path），但是 unrealizable paths 是一定不会被执行的。因此我们的目标是识别 Realizable paths，从而避免分析结果被 unrealizable paths 所污染。</p><p>那么如何识别出 Realizable paths 呢？一个简单的方法就是括号匹配。但是如果调用栈很大的话匹配的情况就会很复杂，因此需要一种系统的识别方法，即 CFL-Reachability。</p><h2 id="CFL-Reachability">CFL-Reachability</h2><blockquote><p>CFL-Reachability: A path is considered to connect two nodes A and B, or B is reachable from A, only if the concatenation of the labels on the edges of the path is a word in a specified context-free language.</p></blockquote><p>简单来说，一条路径是 Realizable path 当且仅当路径上每条边相关的 label 能够组成一个合法的单词，且单词满足上下文无关语言（CFL）的定义。</p><ul><li>上下文无关语言是由上下文无关文法（context-free grammar, CFG）生成的。</li><li>CFG 是一个形式化的文法，每一个产生式的格式为 <code>S -&gt; α</code> ，其中 S 是单个非终止符，α 是一个由终止符和/或非终止符组成的字符串，或者为空。</li><li>上下文无关（context-free）意味着 S 可以在任何地方被 aSb/ε 替换，而不管 S 的上下文。</li></ul><p>有了 CFL-Reachability 的定义，上述 Realizable Paths 的识别问题就转化为部分括号匹配问题（Partially Balanced-Parenthesis Problem）。</p><ul><li>每一个右括号 )i 都需要有一个对应的左括号 (i，反之则不需要。</li><li>对于每一个 call-site i，给 call edge 添加 (i 标签，给 return edge 添加 )i 标签。</li><li>对于其他边用符号 e 标记。</li></ul><p>一条路径是 realizable path 当且仅当 这条路径上所有边组成的单词满足语言 L(realizable) 的定义。</p><img src="Language-L.png" alt="Language-L" style="zoom:33%;"><p>下面分别是满足和不满足上下文无关语言 L(realizable) 的路径：</p><img src="realizable-path-example.png" alt="realizable-path-example" style="zoom:100%;"><h2 id="Overview-of-IFDS">Overview of IFDS</h2><p>Precise Interprocedural Dataflow Analysis via Graph Reachability (POPL’15)</p><p>IFDS: Interprocedural, Finite, Distributive, Subset Problem.</p><p>IFDS 是用来解决过程间数据流分析问题，这些问题需满足三个条件：（1）分析的 domain 是有限的；（2）flow function 是满足分配率的；（3）是一个子集类型的问题。</p><p>IFDS 能够提供 meet-over-all-realizable-paths (MRP) 分析。</p><h3 id="meet-over-all-realizable-paths-MRP">meet-over-all-realizable-paths (MRP)</h3><img src="MRP.png" alt="MRP" style="zoom:33%;"><h3 id="Overview">Overview</h3><p>给定一个程序 P，一个数据流分析问题 Q</p><ul><li>构建程序 P 的 supergraph G*（类似于 ICFG），基于问题 Q 为 G* 中的边定义 flow functions（类似于之前的 transfer functions）。</li><li>通过将 flow functions 转换为 representation relations，构建 exploded supergraph G#。</li><li>在 G* 上应用 Tabulation algorithm，问题 Q 可以通过图可达问题解决（找到 MRP 的解法）。</li></ul><img src="Overview-of-IFDS.png" alt="Overview-of-IFDS" style="zoom:100%;"><p>对于一个程序点 n，data fact <code>d ∈ MRPn</code> 当且仅当存在一条从 <code>&lt;Smain, 0&gt;</code> 到 <code>&lt;n, d&gt;</code> 的可达路径。</p><h2 id="Supergraph-and-Flow-Functions">Supergraph and Flow Functions</h2><h3 id="Supergraph">Supergraph</h3><p>在 IFDS 中，一个程序可以用 G^{\*} = (N^{\*}, E^{\*}) 来表示，叫做 supergraph。</p><ul><li>其中 G^{\*} 是 G1, G2, … 的集合（可以理解为所有函数的 flow graph 的集合）。</li><li>每一个 flow graph <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi mathvariant="normal">_</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">G\_{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">G</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord mathnormal">p</span></span></span></span></span> 都有一个唯一的 start node  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi mathvariant="normal">_</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">s\_{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7406em;vertical-align:-0.31em;"></span><span class="mord mathnormal">s</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord mathnormal">p</span></span></span></span></span> 和end node <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mi mathvariant="normal">_</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">e\_{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7406em;vertical-align:-0.31em;"></span><span class="mord mathnormal">e</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord mathnormal">p</span></span></span></span></span>。</li><li>过程调用由 call node <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>a</mi><mi>l</mi><mi>l</mi><mi mathvariant="normal">_</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">Call\_{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0044em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord mathnormal">p</span></span></span></span></span> 和 return-site node <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>e</mi><mi>t</mi><mi mathvariant="normal">_</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">Ret\_{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord mathnormal">p</span></span></span></span></span> 表示。</li></ul><img src="supergraph.png" alt="supergraph" style="zoom:40%;"><p>G^{\*}</p><h2 id="Exploded-Supergraph-and-Tabulation-Algorithm">Exploded Supergraph and Tabulation Algorithm</h2><h2 id="Understanding-the-Distributivity-of-IFDS">Understanding the Distributivity of IFDS</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Feasible-and-Realizable-Paths&quot;&gt;Feasible and Realizable Paths&lt;/h2&gt;
&lt;p&gt;Infeasible Paths: Path in CFG that do not correspond to actual 
      
    
    </summary>
    
    
      <category term="Program Analysis" scheme="https://car0ta.github.io/categories/Program-Analysis/"/>
    
    
      <category term="Static Program Analysis" scheme="https://car0ta.github.io/tags/Static-Program-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Android PendingIntent 重定向漏洞</title>
    <link href="https://car0ta.github.io/2022/09/17/Android-PendingIntent-%E9%87%8D%E5%AE%9A%E5%90%91%E6%BC%8F%E6%B4%9E/"/>
    <id>https://car0ta.github.io/2022/09/17/Android-PendingIntent-%E9%87%8D%E5%AE%9A%E5%90%91%E6%BC%8F%E6%B4%9E/</id>
    <published>2022-09-17T14:51:40.000Z</published>
    <updated>2022-09-17T15:22:22.067Z</updated>
    
    <content type="html"><![CDATA[<p>本文来源于 blackhat Europe 2021 中的议题：Re-route Your Intent for Privilege Escalation: An Universal Way to Exploit Android PendingIntents in High-profile and System App，作者是来自 OPPO 子午互联网安全实验室的 En He, Wenbo Chen, Daoyuan Wu。</p><h2 id="背景知识">背景知识</h2><h3 id="Intent">Intent</h3><p>在 Android 系统中，Intent 是在组件间传递的通信消息，用于执行启动活动、发送广播、启动服务等动作；而 Intent 对象内部的字段则规定了 Intent 发送的目的组件，以及执行动作的具体内容，包括 action、category、data、clipdata、package、flag、extra、component 和 selector。</p><p>其中，component 和 selector 用于设置 Intent 的目的组件，规定 Intent 发送给谁。按照是否设置 component 和 selector，Intent 可分为：</p><ul><li>显示 Intent：具有 component 或者 selector 的 Intent</li><li>隐式 Intent：仅设置了 action 的 Intent，注册对应 action 的 Intent-filter 的组件可以接收到 Intent。</li></ul><p>另外还有一种特殊的空 Intent：既没有设置 component 或 selector，也没有设置 action，甚至没有任何字段。</p> <img src="Intent.png" alt="Intent" style="zoom:33%;"><p>引申：如果一个 Intent 设置了 component，那么它的 package 字段将被忽略（即使被设置），利用此特点可能绕过某些检查，例如 <a href="https://android.googlesource.com/platform/packages/apps/Settings/+/abadb382114fa8af5209295c9bae2ca2b08935f3%5E!/#F0">CVE-2022-20223</a>。</p><h3 id="PendingIntent">PendingIntent</h3><p>PendingIntent 可以看做 Intent 的高级版本，实现了一种委托授权发送 Intent 进行组件间通信的机制。</p><p>首先，App 可以使用 getActivity、getBroadcast、getService 等 API 向 Android 系统申请一个 PendingIntent 对象。例如在 getActivity 函数中，intent 参数构成了所生成的 PendingIntent 对象的 base intent，flags 参数决定了 PendingIntent 的行为，例如 FLAG_IMMUTABLE 就用于规定 base Intent 不能被改写。</p> <img src="getActivity.png" alt="getActivity" style="zoom:33%;"><p>然后，这个 PendingIntent 对象可以发送给其他 App 使用，其他 App 调用 PendingIntent.send 时，就能够以 PendingIntent 源 App 的身份和权限发送 PendingIntent 中的 base Intent。其他 App 甚至能提供一个新的 Intent，对 base Intent 进行改写。</p> <img src="PendingIntent.png" alt="PendingIntent" style="zoom:33%;"><p>因此，App A 将 PendingIntent 交给 App B，意味着将自己的身份与权限连同要执行的操作委托给了 App B，这个操作由 PendingIntent 中的 base Intent 确定。如果恶意 App 有能力获取上述通信过程中的 PendingIntent 并修改其 base Intent，就可能以源 App 的身份和权限发送修改后的 base Intent，从而造成非预期的安全后果。</p><h3 id="历史研究">历史研究</h3><h4 id="BroadcastAnyWhere">BroadcastAnyWhere</h4><p>该漏洞出现在 Settings 添加账户的时候，使用 AccountManager 添加账户的流程如下图：</p> <img src="BroadcastAnyWhere.png" alt="BroadcastAnyWhere" style="zoom:50%;"><p>漏洞发生在 step 1，Settings 调用了 AccountManager.addAccount 方法，在传递 addAccountOptions 时加入了一个 PendingIntent，其 Intent 类型为 Broadcast。</p><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addAccount</span><span class="params">(String accountType)</span> {</span><br><span class="line">     <span class="type">Bundle</span> <span class="variable">addAccountOptions</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">     mPendingIntent = PendingIntent.getBroadcast(<span class="built_in">this</span>, <span class="number">0</span>, <span class="keyword">new</span> <span class="title class_">Intent</span>(), <span class="number">0</span>);</span><br><span class="line">     addAccountOptions.putParcelable(KEY_CALLER_IDENTITY, mPendingIntent);</span><br><span class="line">     addAccountOptions.putBoolean(EXTRA_HAS_MULTIPLE_USERS, Utils.hasMultipleUsers(<span class="built_in">this</span>));</span><br><span class="line">     AccountManager.get(<span class="built_in">this</span>).addAccount(</span><br></pre></td></tr></tbody></table></figure><p>由于这个广播 PendingIntent 由 system_server AccountManagerService(uid 1000) 所创建，代表了系统的身份和权限，且并未设置 base Intent 的其他字段。普通 Authenticator App 拿到以后，改写其 base Intent，例如设置一个 action android.intent.action.BOOT_COMPLETED，最后调用 PendingIntent.send 以 uid 1000 的身份发送特权广播。</p><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">PendingIntent</span> <span class="variable">pending_intent</span> <span class="operator">=</span> (PendingIntent)options.get(<span class="string">"pendingIntent"</span>);</span><br><span class="line">intent.setAction(<span class="string">"android.intent.action.BOOT_COMPLETED"</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">         pending_intent.send(getGlobalApplicationContext(),<span class="number">0</span>,intent,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>);</span><br><span class="line">} <span class="keyword">catch</span> (CanceledException e) {</span><br><span class="line">         e.printStackTrace();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="LINE-App">LINE App</h4><p>另一个案例出现在即时通信软件 LINE App 启动服务时泄露了一个 PendingIntent 对象，且 base Intent 为空 Intent。因此恶意APP可以注册一个 Intent-filter 为jp.naver.android.npush.intent.action.SUBSCRIBE 的服务，然后获取上面的 PendingIntent，最后以 LINE App 的身份发送广播，造成伪造 LINE App 推送消息的危害。</p> <img src="LINE_App.png" alt="LINE_App" style="zoom:50%;"><h3 id="PendingIntent-的使用场景">PendingIntent 的使用场景</h3><p>在 Android 系统中，PendingIntent 还广泛存在于 SliceProviders、Notifications、MediaBrowserService、AppWidgets、AlarmManager 等服务当中。因此现在的问题是如何获取 Android 系统中广泛使用的 PendingIntent 并进行利用。</p><h2 id="不安全-PendingIntent-的通用利用方法">不安全 PendingIntent 的通用利用方法</h2><h3 id="不安全-PendingIntent-的特征">不安全 PendingIntent 的特征</h3><p>从前面的历史研究中我们知道 empty base Intent 构建的 PendingIntent 是不安全的，那 Implicit base Intent 构建的 PendingIntent 是否安全呢？下文将深入探索这种形式的 PendingIntent 的安全问题及利用方式。</p><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// empty base Intent</span></span><br><span class="line">mPendingIntent = PendingIntent.getBroadcast(<span class="built_in">this</span>, <span class="number">0</span>, <span class="keyword">new</span> <span class="title class_">Intent</span>(), <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// implicit base Intent</span></span><br><span class="line">mPendingIntent = PendingIntent.getActivity(<span class="built_in">this</span>, <span class="number">0</span>, <span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="string">"some.Action"</span>), <span class="number">0</span>);</span><br></pre></td></tr></tbody></table></figure><h3 id="深入-Intent-fillIn-改写机制">深入 Intent fillIn 改写机制</h3><p>在寻找利用之前先要深入探索 Intent fillIn 改写机制，这决定了其他 App 获得 PendingIntent 后如何对 base Intent 进行改写。这个机制由 Intent.fillIn 方法提供：</p><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">fillIn</span><span class="params">(<span class="meta">@NonNull</span> Intent other, <span class="meta">@FillInFlags</span> <span class="type">int</span> flags)</span> {</span><br><span class="line">    <span class="type">int</span> <span class="variable">changes</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">mayHaveCopiedUris</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (other.mAction != <span class="literal">null</span></span><br><span class="line">            &amp;&amp; (mAction == <span class="literal">null</span> || (flags&amp;FILL_IN_ACTION) != <span class="number">0</span>)) {</span><br><span class="line">        mAction = other.mAction;</span><br><span class="line">        changes |= FILL_IN_ACTION;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> ((other.mData != <span class="literal">null</span> || other.mType != <span class="literal">null</span>)</span><br><span class="line">            &amp;&amp; ((mData == <span class="literal">null</span> &amp;&amp; mType == <span class="literal">null</span>)</span><br><span class="line">                    || (flags&amp;FILL_IN_DATA) != <span class="number">0</span>)) {</span><br><span class="line">        mData = other.mData;</span><br><span class="line">        mType = other.mType;</span><br><span class="line">        changes |= FILL_IN_DATA;</span><br><span class="line">        mayHaveCopiedUris = <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (other.mIdentifier != <span class="literal">null</span></span><br><span class="line">            &amp;&amp; (mIdentifier == <span class="literal">null</span> || (flags&amp;FILL_IN_IDENTIFIER) != <span class="number">0</span>)) {</span><br><span class="line">        mIdentifier = other.mIdentifier;</span><br><span class="line">        changes |= FILL_IN_IDENTIFIER;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (other.mCategories != <span class="literal">null</span></span><br><span class="line">            &amp;&amp; (mCategories == <span class="literal">null</span> || (flags&amp;FILL_IN_CATEGORIES) != <span class="number">0</span>)) {</span><br><span class="line">        <span class="keyword">if</span> (other.mCategories != <span class="literal">null</span>) {</span><br><span class="line">            mCategories = <span class="keyword">new</span> <span class="title class_">ArraySet</span>&lt;String&gt;(other.mCategories);</span><br><span class="line">        }</span><br><span class="line">        changes |= FILL_IN_CATEGORIES;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (other.mPackage != <span class="literal">null</span></span><br><span class="line">            &amp;&amp; (mPackage == <span class="literal">null</span> || (flags&amp;FILL_IN_PACKAGE) != <span class="number">0</span>)) {</span><br><span class="line">        <span class="comment">// Only do this if mSelector is not set.</span></span><br><span class="line">        <span class="keyword">if</span> (mSelector == <span class="literal">null</span>) {</span><br><span class="line">            mPackage = other.mPackage;</span><br><span class="line">            changes |= FILL_IN_PACKAGE;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// Selector is special: it can only be set if explicitly allowed,</span></span><br><span class="line">    <span class="comment">// for the same reason as the component name.</span></span><br><span class="line">    <span class="keyword">if</span> (other.mSelector != <span class="literal">null</span> &amp;&amp; (flags&amp;FILL_IN_SELECTOR) != <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">if</span> (mPackage == <span class="literal">null</span>) {</span><br><span class="line">            mSelector = <span class="keyword">new</span> <span class="title class_">Intent</span>(other.mSelector);</span><br><span class="line">            mPackage = <span class="literal">null</span>;</span><br><span class="line">            changes |= FILL_IN_SELECTOR;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (other.mClipData != <span class="literal">null</span></span><br><span class="line">            &amp;&amp; (mClipData == <span class="literal">null</span> || (flags&amp;FILL_IN_CLIP_DATA) != <span class="number">0</span>)) {</span><br><span class="line">        mClipData = other.mClipData;</span><br><span class="line">        changes |= FILL_IN_CLIP_DATA;</span><br><span class="line">        mayHaveCopiedUris = <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// Component is special: it can -only- be set if explicitly allowed,</span></span><br><span class="line">    <span class="comment">// since otherwise the sender could force the intent somewhere the</span></span><br><span class="line">    <span class="comment">// originator didn't intend.</span></span><br><span class="line">    <span class="keyword">if</span> (other.mComponent != <span class="literal">null</span> &amp;&amp; (flags&amp;FILL_IN_COMPONENT) != <span class="number">0</span>) {</span><br><span class="line">        mComponent = other.mComponent;</span><br><span class="line">        changes |= FILL_IN_COMPONENT;</span><br><span class="line">    }</span><br><span class="line">    mFlags |= other.mFlags;</span><br><span class="line">    <span class="keyword">if</span> (other.mSourceBounds != <span class="literal">null</span></span><br><span class="line">            &amp;&amp; (mSourceBounds == <span class="literal">null</span> || (flags&amp;FILL_IN_SOURCE_BOUNDS) != <span class="number">0</span>)) {</span><br><span class="line">        mSourceBounds = <span class="keyword">new</span> <span class="title class_">Rect</span>(other.mSourceBounds);</span><br><span class="line">        changes |= FILL_IN_SOURCE_BOUNDS;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (mExtras == <span class="literal">null</span>) {</span><br><span class="line">        <span class="keyword">if</span> (other.mExtras != <span class="literal">null</span>) {</span><br><span class="line">            mExtras = <span class="keyword">new</span> <span class="title class_">Bundle</span>(other.mExtras);</span><br><span class="line">            mayHaveCopiedUris = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (other.mExtras != <span class="literal">null</span>) {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="type">Bundle</span> <span class="variable">newb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>(other.mExtras);</span><br><span class="line">            newb.putAll(mExtras);</span><br><span class="line">            mExtras = newb;</span><br><span class="line">            mayHaveCopiedUris = <span class="literal">true</span>;</span><br><span class="line">        } <span class="keyword">catch</span> (RuntimeException e) {</span><br><span class="line">            <span class="comment">// Modifying the extras can cause us to unparcel the contents</span></span><br><span class="line">            <span class="comment">// of the bundle, and if we do this in the system process that</span></span><br><span class="line">            <span class="comment">// may fail.  We really should handle this (i.e., the Bundle</span></span><br><span class="line">            <span class="comment">// impl shouldn't be on top of a plain map), but for now just</span></span><br><span class="line">            <span class="comment">// ignore it and keep the original contents. :(</span></span><br><span class="line">            Log.w(TAG, <span class="string">"Failure filling in extras"</span>, e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (mayHaveCopiedUris &amp;&amp; mContentUserHint == UserHandle.USER_CURRENT</span><br><span class="line">            &amp;&amp; other.mContentUserHint != UserHandle.USER_CURRENT) {</span><br><span class="line">        mContentUserHint = other.mContentUserHint;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> changes;</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>上述代码中，this 指向当前 Intent，other 为其他 Intent，如果当前 Intent 中的成员变量为空则可以被 other 中相应的成员变量覆盖。特别的是 Intent 中的 component 和 selector 成员变量，即使当前 Intent 中的 component 和 selector 为空，也不能被 other 改写，除非 PendingIntent 设置了 FILL_IN_COMPONENT 或 FILL_IN_SELECTOR 标志。</p><h3 id="PendingIntent-重定向攻击">PendingIntent 重定向攻击</h3><p>了解了 Intent fillIn 机制后可以知道，在获取 PendingIntent 对象之后，其 base Intent 的 action、category、data、clidpdata、package、flag、extra 等成员都是可以改写的，而 component 和 selector 不能改写。而对于 Implicit base Intent，因为 action 已经被设置了，所以也无法改写。因此攻击者不能像前面 BroadcastAnyWhere 漏洞一样，通过劫持 PendingIntent 并在 base Intent 中设置 action，隐式打开一个受保护的组件。</p><p>因为 package 字段可以指定，同时联想到 Intent 重定向漏洞的利用方法，我们可以通过设置 Intent 中的 flag 来巧妙解决。Intent 提供了有关临时授权的标志：</p><ul><li>FLAG_GRANT_READ_URI_PERMISSION：Intent 携带此标志时，Intent 的接收者将 Intent 所携带 data URI 以及 clipdata URI 中的读权限；F</li><li>LAG_GRANT_WRITE_URI_PERMISSION：Intent 携带此标志时，Intent 的接收者将 Intent 所携带 data URI 以及 clipdata URI 中的写权限。</li></ul><p>简言之，恶意 App 对 PendingIntent 进行了指向恶意 App 自己的重定向，通过对 PendingIntent base Intent 的部分修改（修改package、flag 和 data/clipdata），使其以受害 App 的权限打开恶意 App 自身，这样恶意 App 在被打开的瞬间就获得了对受害 App 私有数据的 读写权限。具体利用方式如下图所示：</p> <img src="Hijack_PendingIntent.png" alt="Hijack_PendingIntent" style="zoom:50%;"><ol><li>受害 App 通过 getActivity 构建 PendingIntent（假定使用的是 Implicit base Intent），在 Notifications、SliceProviders、AppWidgets 等服务中使用，攻击 App 通过 Bind/Connect/Listen 方法与相关服务建立连接；</li><li>攻击 App 通过前面探讨的各种渠道获取受害 App 的 PendingIntent；</li><li>攻击 App 修改 PendingIntent 中的 base Intent，由于是 Implicit Intent，因此 action、component、selector 都不能被修改，但可以作如下修改：<ul><li>修改 data/clipdata，使其 URI 指向受害 App 的私有ContentProvider</li><li>修改 package，指向攻击 App</li><li>添加 FLAG_GRANT_READ_URI_PERMISSION 和 FLAG_GRANT_WRITE_URI_PERMISSION 标志</li></ul></li><li>攻击者调用 PendingIntent.send；</li><li>由于这个 PendingIntent 代表了受害 App 的身份和权限，因此将以受害 App 的名义发Intent，打开攻击 App 的 Activity；</li><li>在攻击 App 的 Activity 被打开的瞬间，即被授权访问 base Intent 中携带的 URI，也就获得了对受害 App 私有 ContentProvider 的读写权限。</li></ol><p>上面受害 App 的私有 ContentProvider 需要携带属性 grantUriPermission=true，不限于受害 App 自己的 ContentProvider，也包括受害 App 有权限访问的 ContentProvider。手机上一个常见的具有 grantUriPermission=true 属性的 ContentProvider 就是代表通讯录的 ContentProvider，只要受害 App 具有 READ_CONTACTS 权限，出现这样一个 PendingIntent 漏洞猴将导致通讯录泄露。</p><p>由于这里使用了 grantUri 技巧，因此并不适用于 Broadcast PendingIntent，因为广播接收器是不可以被 grantUri 的。另外，从 Android 5.0 之后，Service 不能被隐式启动，因此也很难看到 Implicit base Intent 的 service PendingIntent，所以这里的 PendingIntent 重定向攻击主要适用于 Activity。</p><h2 id="Android-系统中的真实案例">Android 系统中的真实案例</h2><table><thead><tr><th>ID</th><th>Found in</th><th>Impact</th></tr></thead><tbody><tr><td>CVE-2020-0188</td><td>AOSP Settings SliceProvider</td><td>Theft of Some Settings Provider</td></tr><tr><td>CVE-2020-0389</td><td>AOSP SystemUI Notification</td><td>Theft of Contacts Provider or Arbitrary Code Execution</td></tr><tr><td>A-166126300</td><td>AOSP Bluetooth MediaBrowserService</td><td>Theft of Contacts Provider</td></tr><tr><td>-</td><td>Some super popular app’s AppWidgets</td><td>Theft of Contacs Provider or Arbitrary Code Execution</td></tr><tr><td>CVE-2020-0294</td><td>AOSP System Services</td><td>Theft of Settings Provide</td></tr></tbody></table><p>基于对 PendingIntent 特征的掌握，作者编写了一个自动化扫描工具 <a href="https://github.com/h0rd7/PendingIntentScan">PendingIntentScan</a>，该工具基于 Soot 这一 Java 静态分析框架对 APK 进行静态数据流分析。</p><h3 id="CVE-2020-0188-SliceProvider">CVE-2020-0188: SliceProvider</h3><h3 id="CVE-2020-0389-Notification">CVE-2020-0389: Notification</h3><h3 id="CVE-2020-0294-System-Service">CVE-2020-0294: System Service</h3><h2 id="Android-12-安全变更">Android 12 安全变更</h2><p>针对以上漏洞的修复，Google Android 安全团队大部分使用了 PendingIntent.FLAG_IMMUTABLE，小部分的修复将 base Intent 设置为 Explicit Intent。在 Android 12 大版本中，Google Android 安全团队对 PendingIntent 的行为进行了重大安全变更，引入了一个新的 flag：PendingIntent.FLAG_MUTABLE，表示 base Intent 可以改写，这与原有的 PendingIntent.FLAG_IMMUTABLE 共同描述 PendingIntent 的可变性。</p><p>对于 Target S+ 的 App，Android 系统要求开发者必须明确指定 PendingIntent 的可变性，FLAG_MUTABLE 和 FLAG_IMMUTABLE 必须使用其一，否则抛出异常。这就要求开发者对 PendingIntent 的使用有清晰的理解，知道 PendingIntent 是否会在将来被改写。Google 也对开发者提出了详细的安全编码建议：</p><ul><li>尽可能使用 FLAG_IMMUTABLE 来生成不可改写的 PendingIntent；</li><li>如果使用 FLAG_MUTABLE 来生成可改写的 PendingIntent，base Intent 一定要使用 Explicit Intent，明确指定 Intent 的组件。</li></ul><h2 id="参考">参考</h2><p>PendingIntent重定向：一种针对安卓系统和流行App的通用提权方法——BlackHat EU 2021议题详解</p><p><a href="https://segmentfault.com/a/1190000041532963">https://segmentfault.com/a/1190000041532963</a></p><p><a href="https://segmentfault.com/a/1190000041550819">https://segmentfault.com/a/1190000041550819</a></p><p><a href="https://www.blackhat.com/eu-21/briefings/schedule/index.html#re-route-your-intent-for-privilege-escalation-a-universal-way-to-exploit-android-pendingintents-in-high-profile-and-system-apps-24340">https://www.blackhat.com/eu-21/briefings/schedule/index.html#re-route-your-intent-for-privilege-escalation-a-universal-way-to-exploit-android-pendingintents-in-high-profile-and-system-apps-24340</a></p><p>broadAnywhere：Broadcast组件权限绕过漏洞（Bug: 17356824）</p><p><a href="http://retme.net/index.php/2014/11/14/broadAnywhere-bug-17356824.htmlAndroid">http://retme.net/index.php/2014/11/14/broadAnywhere-bug-17356824.htmlAndroid</a></p><p>App 安全之 Intent 重定向详解</p><p><a href="https://www.freebuf.com/articles/endpoint/271629.html">https://www.freebuf.com/articles/endpoint/271629.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文来源于 blackhat Europe 2021 中的议题：Re-route Your Intent for Privilege Escalation: An Universal Way to Exploit Android PendingIntents in High
      
    
    </summary>
    
    
      <category term="Android Vuls" scheme="https://car0ta.github.io/categories/Android-Vuls/"/>
    
    
      <category term="Android" scheme="https://car0ta.github.io/tags/Android/"/>
    
      <category term="Vuls" scheme="https://car0ta.github.io/tags/Vuls/"/>
    
  </entry>
  
  <entry>
    <title>Android 序列化与反序列化不匹配漏洞</title>
    <link href="https://car0ta.github.io/2022/09/08/Android-%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8D%E5%8C%B9%E9%85%8D%E6%BC%8F%E6%B4%9E/"/>
    <id>https://car0ta.github.io/2022/09/08/Android-%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8D%E5%8C%B9%E9%85%8D%E6%BC%8F%E6%B4%9E/</id>
    <published>2022-09-08T10:59:20.000Z</published>
    <updated>2022-09-08T11:14:37.164Z</updated>
    
    <content type="html"><![CDATA[<p>历史漏洞整理</p><table><thead><tr><th style="text-align:left">CVE 编号</th><th style="text-align:left">Parcelable 对象</th><th style="text-align:left">公布时间</th></tr></thead><tbody><tr><td style="text-align:left"><a href="https://android.googlesource.com/platform/frameworks/base/+/b87c968e5a41a1a09166199bf54eee12608f3900">CVE-2017-0806</a></td><td style="text-align:left">GateKeeperResponse</td><td style="text-align:left">2017.10</td></tr><tr><td style="text-align:left"><a href="https://android.googlesource.com/platform/frameworks/base/+/47ebfaa2196aaf4fbeeec34f1a1c5be415cf041b%5E%21/#F0">CVE-2017-13286</a></td><td style="text-align:left">OutputConfiguration</td><td style="text-align:left">2018.04</td></tr><tr><td style="text-align:left"><a href="https://android.googlesource.com/platform/frameworks/base/+/09ba8fdffd9c8d74fdc6bfb51bcebc27fc43884a">CVE-2017-13287</a></td><td style="text-align:left">VerifyCredentialResponse</td><td style="text-align:left">2018.04</td></tr><tr><td style="text-align:left"><a href="https://android.googlesource.com/platform/frameworks/base/+/b796cd32a45bcc0763c50cc1a0cc8236153dcea3">CVE-2017-13288</a></td><td style="text-align:left">PeriodicAdvertisingReport</td><td style="text-align:left">2018.04</td></tr><tr><td style="text-align:left"><a href="https://android.googlesource.com/platform/frameworks/base/+/5a3d2708cd2289a4882927c0e2cb0d3c21a99c02">CVE-2017-13289</a></td><td style="text-align:left">ParcelableRttResults</td><td style="text-align:left">2018.04</td></tr><tr><td style="text-align:left"><a href="https://android.googlesource.com/platform/frameworks/base/+/35bb911d4493ea94d4896cc42690cab0d4dbb78f">CVE-2017-13315</a></td><td style="text-align:left">DcParamObject</td><td style="text-align:left">2018.05</td></tr><tr><td style="text-align:left"><a href="https://android.googlesource.com/platform/frameworks/base/+/7bf30cb92ab213c07241ad22def6816ae201dbab%5E%21/#F0">CVE-2021-0928</a></td><td style="text-align:left">OutputConfiguration, SessionConfiguration, VendorTagDescriptor, VendorTagDescriptorCache</td><td style="text-align:left">2021.11</td></tr><tr><td style="text-align:left"><a href="https://wrlus.com/android-security/cve-2021-39676/">CVE-2021-39676</a></td><td style="text-align:left">AndroidFuture</td><td style="text-align:left">2022.02</td></tr></tbody></table><h2 id="背景知识-2">背景知识</h2><h3 id="Android-Parcelable-序列化">Android Parcelable 序列化</h3><p>简单来说，序列化就是将对象转换为可以传输或存储的二进制流（二进制序列）的过程，反序列化则是从二进制流（二进制序列）转化为对象的过程。</p> <img src="Parcelable.png" alt="Parcelable" style="zoom:50%;"><p>在 Android 中序列化有两种方式：Serializable 和 Parcelable。其中 Serializable 接口是 JavaSE 本省就支持的，实现简单但效率较低，只需要 implements Serializable 即可；而 Parcelable 接口是 Android 中特有的，实现较为复杂但效率更高，需要重写 Parcelable 中的四个方法（describeContents, writeToParcel, createFromParcel, newArray），可用于 Intent 数据传递和进程间通信（IPC）。</p><p>下面代码是一个典型的 Parcelable 序列化使用样例，其中重写的 writeToParcel 和 createFromParcel 方法对应序列化（写）和反序列化（读）操作，具体则是调用了 Parcel 类中一系列对称的 write 和 read 方法。</p><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyParcelable</span> <span class="keyword">implements</span> <span class="title class_">Parcelable</span> {</span><br><span class="line">    <span class="keyword">private</span> String paramsA;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> paramsB;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> paramsC;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyParcelable</span><span class="params">()</span> {</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyParcelable</span><span class="params">(String paramsA, <span class="type">int</span> paramsB, <span class="type">boolean</span> paramsC)</span> {</span><br><span class="line">        <span class="built_in">this</span>.paramsA = paramsA;</span><br><span class="line">        <span class="built_in">this</span>.paramsB = paramsB;</span><br><span class="line">        <span class="built_in">this</span>.paramsC = paramsC;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getParamsA</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> paramsA;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setParamsA</span><span class="params">(String paramsA)</span> {</span><br><span class="line">        <span class="built_in">this</span>.paramsA = paramsA;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getParamsB</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> paramsB;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setParamsB</span><span class="params">(<span class="type">int</span> paramsB)</span> {</span><br><span class="line">        <span class="built_in">this</span>.paramsB = paramsB;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isParamsC</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> paramsC;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setParamsC</span><span class="params">(<span class="type">boolean</span> paramsC)</span> {</span><br><span class="line">        <span class="built_in">this</span>.paramsC = paramsC;</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">describeContents</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">writeToParcel</span><span class="params">(Parcel dest, <span class="type">int</span> flags)</span> {</span><br><span class="line">        dest.writeString(<span class="built_in">this</span>.paramsA);</span><br><span class="line">        dest.writeInt(<span class="built_in">this</span>.paramsB);</span><br><span class="line">        dest.writeByte(<span class="built_in">this</span>.paramsC ? (<span class="type">byte</span>) <span class="number">1</span> : (<span class="type">byte</span>) <span class="number">0</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">protected</span> <span class="title function_">MyParcelable</span><span class="params">(Parcel in)</span> {</span><br><span class="line">        <span class="built_in">this</span>.paramsA = in.readString();</span><br><span class="line">        <span class="built_in">this</span>.paramsB = in.readInt();</span><br><span class="line">        <span class="built_in">this</span>.paramsC = in.readByte() != <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Creator&lt;MyParcelable&gt; CREATOR = <span class="keyword">new</span> <span class="title class_">Creator</span>&lt;MyParcelable&gt;() {</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> MyParcelable <span class="title function_">createFromParcel</span><span class="params">(Parcel source)</span> {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MyParcelable</span>(source);</span><br><span class="line">        }</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> MyParcelable[] newArray(<span class="type">int</span> size) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MyParcelable</span>[size];</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>进一步了解 <a href="https://developer.android.com/reference/android/os/Parcel">Parcel</a>。Parcel 翻译是打包的意思，也就是包装我们需要传输的数据，然后在 Binder 中传输（跨进程数据传输），简单来说它是一个用于 IBinder 发送消息的容器。Parcel 提供了一套机制，可以将序列化之后的数据写入到一个共享内存中，其他进程通过 Parcel 从共享内存中读取字节流并反序列化成对象。一个 Parcel 容器可以包含原始数据类型及其数组类型，也可以包含 Parcelable 对象，还可以包含指向 IBinder 对象的引用。</p> <img src="Parcel.png" alt="Parcel" style="zoom:50%;"><h3 id="Android-Bundle">Android Bundle</h3><p>可序列化的 Parcelable 对象一般不单独进行序列化传输，需要通过 Bundle 对象携带。<a href="https://developer.android.com/reference/android/os/Bundle">Bundle</a> 的内部实现实际上是 ArrayMap，以 key-value 的形式存储数据。key 为 string 类型，value 可以是 string、int、boolean、byte、float、long、double 等基本类型或它们对应的数组，也可以是对象或对象数组。当 bundle 传递的是对象或对象数组时，必须实现 Serialiable 或 Parcelable 接口。</p><p>Android 中组件间通信（ICC）频繁使用到的是 <a href="https://developer.android.com/reference/android/content/Intent">Intent</a>，在 Intent 源码中有一个 mExtras 字段，它就是一个 Bundle 容器，可用于数据传递。当我们调用 Intent.putExtra(String key, XXX value) 方法向 Intent 中写入数据时，实际上调用的是 Bundle.putXXX(String key, XXX value) 方法向 Intent.mExtras 这个 Bundle 容器中写入数据。</p><p>Bundle 序列化过程如下：依次写入 Bundle 携带数据的长度、Bundle 魔数（0x4C444E42）和所有的键值对（writeArrayMapInternal）。</p><p>frameworks/base/core/java/android/os/BaseBundle.java</p><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">writeToParcelInner</span><span class="params">(Parcel parcel, <span class="type">int</span> flags)</span> {</span><br><span class="line">    <span class="comment">// If the parcel has a read-write helper, we can't just copy the blob, so unparcel it first.</span></span><br><span class="line">    <span class="keyword">if</span> (parcel.hasReadWriteHelper()) {</span><br><span class="line">        unparcel();</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// Keep implementation in sync with writeToParcel() in</span></span><br><span class="line">    <span class="comment">// frameworks/native/libs/binder/PersistableBundle.cpp.</span></span><br><span class="line">    <span class="keyword">final</span> ArrayMap&lt;String, Object&gt; map;</span><br><span class="line">    <span class="keyword">synchronized</span> (<span class="built_in">this</span>) {</span><br><span class="line">        <span class="comment">// unparcel() can race with this method and cause the parcel to recycle</span></span><br><span class="line">        <span class="comment">// at the wrong time. So synchronize access the mParcelledData's content.</span></span><br><span class="line">        <span class="keyword">if</span> (mParcelledData != <span class="literal">null</span>) {</span><br><span class="line">            <span class="keyword">if</span> (mParcelledData == NoImagePreloadHolder.EMPTY_PARCEL) {</span><br><span class="line">                parcel.writeInt(<span class="number">0</span>);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> mParcelledData.dataSize();</span><br><span class="line">                parcel.writeInt(length);</span><br><span class="line">                parcel.writeInt(mParcelledByNative ? BUNDLE_MAGIC_NATIVE : BUNDLE_MAGIC);</span><br><span class="line">                parcel.appendFrom(mParcelledData, <span class="number">0</span>, length);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        map = mMap;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Special case for empty bundles.</span></span><br><span class="line">    <span class="keyword">if</span> (map == <span class="literal">null</span> || map.size() &lt;= <span class="number">0</span>) {</span><br><span class="line">        parcel.writeInt(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="type">int</span> <span class="variable">lengthPos</span> <span class="operator">=</span> parcel.dataPosition();</span><br><span class="line">    parcel.writeInt(-<span class="number">1</span>); <span class="comment">// placeholder, will hold length</span></span><br><span class="line">    parcel.writeInt(BUNDLE_MAGIC);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="variable">startPos</span> <span class="operator">=</span> parcel.dataPosition();</span><br><span class="line">    parcel.writeArrayMapInternal(map);</span><br><span class="line">    <span class="type">int</span> <span class="variable">endPos</span> <span class="operator">=</span> parcel.dataPosition();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Backpatch length</span></span><br><span class="line">    parcel.setDataPosition(lengthPos);</span><br><span class="line">    <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> endPos - startPos;</span><br><span class="line">    parcel.writeInt(length);</span><br><span class="line">    parcel.setDataPosition(endPos);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>Bundle 反序列化过程和序列化过程完全对称，依次读取 Bundle 携带数据的长度、Bundle 魔数和所有键值对。</p><h3 id="LaunchAnyWhere-漏洞">LaunchAnyWhere 漏洞</h3><p>该漏洞源于 Google 的一次漏洞修复，记为 Google Bug 7699048。这是一个 AccountManagerService 的漏洞，利用该漏洞可以启动任意的 Activity，包括未导出的 Activity（不能被外部应用调用的 Activity），从而突破进程间组件访问隔离的限制。该漏洞影响范围为 Android 2.3-4.3。</p><p>首先了解一下 AccountManagerService 这个系统服务。该服务用于管理用户的各种网络帐号，主要涉及帐号的添加和删除，以及 AuthToken 的获取和更新。AccountManagerService 暴露给开发者的接口是 AccountManager，应用开发者可以利用该接口将应用的帐号信息交给系统管理，并与后台服务端自认证处理，这样避免了每次进入应用都需要用户手动输入用户名密码进行验证的繁琐操作。</p><p>添加账户有两种方式：1. 在“设置-&gt;帐号-&gt;添加帐号”中手动添加可提供网络帐号的应用；2. 可提供网络帐号的应用调用 com.android.settings.accounts.AddAccountSettings 接口，让 Settings 自动触发 addAccount 的操作。</p><p>该漏洞的利用过程如下图所示：</p> <img src="LaunchAnyWhere.png" alt="LaunchAnyWhere" style="zoom:50%;"><p>Step 0：攻击程序 AppB 调用 com.android.settings.accounts.AddAccountSettings 接口；</p><p>Step 1：Settings 触发 addAccount 操作，向 AccountManagerService 请求添加特定类型的网络帐号；</p><p>Step 2：system_server 查询到 AppB 可以提供该类型的网络帐号，因此向 AppB 发起请求；</p><p>Step 3：AppB 返回了一个 Bundle 给 system_server，该 Bundle 中包含一个恶意 intent，可以调用想要攻击的 Activity；</p><p>Step 4：AccountManagerResponse 在 Settings 的进程空间内调用 startActivity(intent) 启动待攻击的 Activity，而 Settings 并不知情。</p><p>这种设计的本意是，AccountManagerService 帮助 Settings 查找到 AppB 账号登陆页面，并呼起这个登陆页面。而问题在于，AppB 可以任意指定这个 intent 所指向的组件，Settings 将在不知情的情况下由 AccountManagerResponse 调用起了一个 Activity。而 Settings 作为一个系统应用，能够调用起任意 AppB 指定的未导出 Activity。</p><p>Google 在 Android 4.4 中进行了修复，在 AccountManagerService 中对指定的 intent 进行了检查，确保 intent 所指向的 Activity的所属包 与 AppB 具有相同签名。</p><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line">+        <span class="meta">@Override</span></span><br><span class="line">         <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResult</span><span class="params">(Bundle result)</span> {</span><br><span class="line">             mNumResults++;</span><br><span class="line">-            <span class="keyword">if</span> (result != <span class="literal">null</span> &amp;&amp; !TextUtils.isEmpty(result.getString(AccountManager.KEY_AUTHTOKEN))) {</span><br><span class="line">+            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">+            <span class="keyword">if</span> (result != <span class="literal">null</span></span><br><span class="line">+                    &amp;&amp; (intent = result.getParcelable(AccountManager.KEY_INTENT)) != <span class="literal">null</span>) {</span><br><span class="line">+                <span class="comment">/*</span></span><br><span class="line"><span class="comment">+                 * The Authenticator API allows third party authenticators to</span></span><br><span class="line"><span class="comment">+                 * supply arbitrary intents to other apps that they can run,</span></span><br><span class="line"><span class="comment">+                 * this can be very bad when those apps are in the system like</span></span><br><span class="line"><span class="comment">+                 * the System Settings.</span></span><br><span class="line"><span class="comment">+                 */</span></span><br><span class="line">+                <span class="type">PackageManager</span> <span class="variable">pm</span> <span class="operator">=</span> mContext.getPackageManager();</span><br><span class="line">+                <span class="type">ResolveInfo</span> <span class="variable">resolveInfo</span> <span class="operator">=</span> pm.resolveActivity(intent, <span class="number">0</span>);</span><br><span class="line">+                <span class="type">int</span> <span class="variable">targetUid</span> <span class="operator">=</span> resolveInfo.activityInfo.applicationInfo.uid;</span><br><span class="line">+                <span class="type">int</span> <span class="variable">authenticatorUid</span> <span class="operator">=</span> Binder.getCallingUid();</span><br><span class="line">+                <span class="keyword">if</span> (PackageManager.SIGNATURE_MATCH !=</span><br><span class="line">+                        pm.checkSignatures(authenticatorUid, targetUid)) {</span><br><span class="line">+                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">SecurityException</span>(</span><br><span class="line">+                            <span class="string">"Activity to be started with KEY_INTENT must "</span> +</span><br><span class="line">+                            <span class="string">"share Authenticator's signatures"</span>);</span><br><span class="line">+                }</span><br><span class="line">+            }</span><br><span class="line">+            <span class="keyword">if</span> (result != <span class="literal">null</span></span><br><span class="line">+                    &amp;&amp; !TextUtils.isEmpty(result.getString(AccountManager.KEY_AUTHTOKEN))) {</span><br></pre></td></tr></tbody></table></figure><p>AccountManagerService 添加对 intent 的检查之后，上述利用图示则涉及到两次跨进程的序列化数据传输。第一次，AppB将 Bundle 序列化后通过 Binder 传递给 system_server，然后 system_server 通过 Bundle 的 getXXX 方法触发反序列化，获得 KEY_INTENT 这个键所对应的值——一个 Intent 对象，并进行安全检查。若检查通过则调用 writeBundle 进行第二次序列化传输，最后在 Settings 中反序列化后重新获得 {KEY_INTENT: intent}，最终启动相应的 Activity。</p><p>如果 Android 系统中某些 Parcelable 对象的序列化和反序列化过程不匹配，那么就有可能通过精心构造的 payload，使得上述攻击流程中第一次序列化和反序列化匹配，而第二次序列化和反序列化不匹配，从而完美绕过 checkKeyIntent 的检查，最终在 Settings 中暴露出恶意的 KEY_INTENT。</p><h2 id="CVE-2017-0806">CVE-2017-0806</h2><p>该漏洞由 Michal Bednarski 发现，应该是历史上第一个公开的 Android 序列化与反序列化不匹配漏洞，影响的 AOSP 范围为 6.0, 6.0.1, 7.0, 7.1.1, 7.1.2, 8.0。</p><p>frameworks/base/core/java/android/service/gatekeeper/GateKeeperResponse.java</p><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Parcelable.Creator&lt;GateKeeperResponse&gt; CREATOR</span><br><span class="line">        = <span class="keyword">new</span> <span class="title class_">Parcelable</span>.Creator&lt;GateKeeperResponse&gt;() {</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> GateKeeperResponse <span class="title function_">createFromParcel</span><span class="params">(Parcel source)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">responseCode</span> <span class="operator">=</span> source.readInt();</span><br><span class="line">        <span class="keyword">final</span> GateKeeperResponse response;</span><br><span class="line">        <span class="keyword">if</span> (responseCode == RESPONSE_RETRY) {</span><br><span class="line">            response = createRetryResponse(source.readInt());</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (responseCode == RESPONSE_OK) {</span><br><span class="line">            <span class="keyword">final</span> <span class="type">boolean</span> <span class="variable">shouldReEnroll</span> <span class="operator">=</span> source.readInt() == <span class="number">1</span>;</span><br><span class="line">            <span class="type">byte</span>[] payload = <span class="literal">null</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> source.readInt();</span><br><span class="line">            <span class="keyword">if</span> (size &gt; <span class="number">0</span>) {</span><br><span class="line">                payload = <span class="keyword">new</span> <span class="title class_">byte</span>[size];</span><br><span class="line">                source.readByteArray(payload);</span><br><span class="line">            }</span><br><span class="line">            response = createOkResponse(payload, shouldReEnroll);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            response = createGenericResponse(responseCode);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> GateKeeperResponse[] newArray(<span class="type">int</span> size) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">GateKeeperResponse</span>[size];</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">writeToParcel</span><span class="params">(Parcel dest, <span class="type">int</span> flags)</span> {</span><br><span class="line">    dest.writeInt(mResponseCode);</span><br><span class="line">    <span class="keyword">if</span> (mResponseCode == RESPONSE_RETRY) {</span><br><span class="line">        dest.writeInt(mTimeout);</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (mResponseCode == RESPONSE_OK) {</span><br><span class="line">        dest.writeInt(mShouldReEnroll ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (mPayload != <span class="literal">null</span>) {</span><br><span class="line">            dest.writeInt(mPayload.length);</span><br><span class="line">            dest.writeByteArray(mPayload);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="CVE-2021-39676">CVE-2021-39676</h2><h2 id="参考-2">参考</h2><p>Bundle风水——Android序列化与反序列化不匹配漏洞详解</p><p><a href="https://xz.aliyun.com/t/2364">https://xz.aliyun.com/t/2364</a></p><p>launchAnyWhere: Activity组件权限绕过漏洞解析(Google Bug 7699048)</p><p><a href="http://retme.net/index.php/2014/08/20/launchAnyWhere.html">http://retme.net/index.php/2014/08/20/launchAnyWhere.html</a></p><p>安卓漏洞 CVE 2017-13287 复现分析</p><p><a href="https://www.anquanke.com/post/id/197710">https://www.anquanke.com/post/id/197710</a></p><p>CVE-2021-39676 AndroidFuture反序列化漏洞分析</p><p><a href="https://wrlus.com/android-security/cve-2021-39676/">https://wrlus.com/android-security/cve-2021-39676/</a></p><p>Android 序列化与反序列化</p><p><a href="https://www.jianshu.com/p/c2a6161f1546">https://www.jianshu.com/p/c2a6161f1546</a></p><p>Android Intent 详解</p><p><a href="https://www.jianshu.com/p/19147a69e970">https://www.jianshu.com/p/19147a69e970</a></p><p>Android Bundle 机制详解</p><p><a href="https://www.jianshu.com/p/0a50acfbf268">https://www.jianshu.com/p/0a50acfbf268</a></p><p>AccountManagerService 浅析</p><p><a href="https://www.jianshu.com/p/2609f7a8b034">https://www.jianshu.com/p/2609f7a8b034</a></p><p>CVE-2017-0806 PoC</p><p><a href="https://github.com/michalbednarski/ReparcelBug">https://github.com/michalbednarski/ReparcelBug</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;历史漏洞整理&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;CVE 编号&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Parcelable 对象&lt;/th&gt;
&lt;th style=&quot;text-al
      
    
    </summary>
    
    
      <category term="Android Vuls" scheme="https://car0ta.github.io/categories/Android-Vuls/"/>
    
    
      <category term="Android" scheme="https://car0ta.github.io/tags/Android/"/>
    
      <category term="Vuls" scheme="https://car0ta.github.io/tags/Vuls/"/>
    
  </entry>
  
  <entry>
    <title>AppSearch in Android 12</title>
    <link href="https://car0ta.github.io/2022/06/12/AppSearch-in-Android-12/"/>
    <id>https://car0ta.github.io/2022/06/12/AppSearch-in-Android-12/</id>
    <published>2022-06-12T13:43:02.000Z</published>
    <updated>2022-06-18T11:39:16.918Z</updated>
    
    <content type="html"><![CDATA[<p>Workflow：</p><ul><li>熟悉并使用 AppSearch 功能</li><li>梳理 API 调用并分析攻击面</li><li>阅读源码和动态调试（可能存在的 native 实现）</li></ul><p>Research Question：</p><ul><li>创建会话、插入数据是否有上限，能否造成 DoS？</li><li>查询数据能否突破应用内存储限制，达成 EoP？</li></ul><h2 id="Introduction">Introduction</h2><p>AppSearch 是一个搜索库，用于管理本地结构化数据；支持通过索引写入数据和通过全文本搜索（full-text search）来读取数据；Apps 可以使用 AppSearch 来实现应用内搜索功能且支持离线查找。</p> <img src="appsearch.png" alt="appsearch" style="zoom:30%;"><p>AppSearch 主要特点：</p><ul><li>快速且低 I/O 使用的移动端存储实现</li><li>在大型数据集上高效索引和查询</li><li>多语言支持（英语、西班牙语等）</li><li>相关性排名（ranking）和使用评分（score）</li></ul><p>和 SQLite 相比，AppSearch 索引和查询数据的延迟（latency）更低，且简化了跨类型（cross-type）查询。</p><h3 id="AppSearch-concepts">AppSearch concepts</h3> <img src="appsearch_overview_diagram.png" alt="appsearch_overview_diagram" style="zoom:30%;"><ul><li><p>Database and session<br>一个 AppSearch 数据库是一些满足该数据库结构（database schema）的 documents 的集合，client app 提供应用上下文（application context）和数据库名（database name）即可创建一个 AppSearch 数据库，该数据库只能被创建它的应用打开。打开数据库时，AppSearch 返回一个与 client App 相连接的 session，这个 session 就是 client app 调用 AppSearch API 的入口点，直到 client app 关闭 session。</p></li><li><p>Schema and schema types<br>schema 表示一个 AppSearch 数据库中数据的组织结构，由代表着不同数据类型的 schema type 组成。一个 AppSearch 数据库只有设置了 schema type，属于这个 schema type 的 document 才能添加到数据库中。</p></li><li><p>Documents<br>一个 document 代表一个数据单元，一个 AppSearch 数据库中的每个 document 都被 namespace 和 ID 唯一标识。namespace 通常用来分开来自不同 source 的数据，如当查询来自 user accounts 的数据时。</p></li><li><p>Search<br>通过 query 可以查询满足特定条件的 documents。查询结果根据它们的 score 以及 ranking strategy 进行排序。</p></li></ul><h3 id="Platform-Storage-vs-Local-Storage">Platform Storage vs Local Storage</h3><p>Local Storage：一个 App 管理一个应用特有的索引，这些索引存储在该应用的 data 目录。</p><p>Platform Storage：App 的数据用于构建系统级别的中央索引，数据访问具有严格的限制。每个 App 只能访问该应用的数据以及其他 App 中显式共享的数据。</p><table><thead><tr><th>Features</th><th>LocalStorage (compatible with Android 4.0+)</th><th>PlatformStorage (compatible with Android 12+)</th></tr></thead><tbody><tr><td>Efficient full-text search</td><td>T</td><td>T</td></tr><tr><td>Multi-language support</td><td>T</td><td>T</td></tr><tr><td>Reduced binary size</td><td>F</td><td>T</td></tr><tr><td>Application-to-application data sharing</td><td>F</td><td>T</td></tr><tr><td>Capability to display data on System UI surfaces</td><td>F</td><td>T</td></tr><tr><td>Unlimited document size and count can be indexed</td><td>T</td><td>F</td></tr><tr><td>Faster operations without additional binder latency</td><td>T</td><td>F</td></tr></tbody></table><h3 id="Get-Started-with-AppSearch">Get Started with AppSearch</h3><ol><li>添加依赖：在 Application’s build.gradle 文件添加如下依赖：<br>（在 API 32 也就是 Android 13 中，AppSearch 作为内建库不再需要 implementation）</li></ol><figure class="highlight groovy"><table><tbody><tr><td class="code"><pre><span class="line">dependencies {</span><br><span class="line">    <span class="keyword">def</span> appsearch_version = <span class="string">"1.0.0-alpha04"</span></span><br><span class="line"></span><br><span class="line">    implementation <span class="string">"androidx.appsearch:appsearch:$appsearch_version"</span></span><br><span class="line">    <span class="comment">// Use kapt instead of annotationProcessor if writing Kotlin classes</span></span><br><span class="line">    annotationProcessor <span class="string">"androidx.appsearch:appsearch-compiler:$appsearch_version"</span></span><br><span class="line"></span><br><span class="line">    implementation <span class="string">"androidx.appsearch:appsearch-local-storage:$appsearch_version"</span></span><br><span class="line">    <span class="comment">// PlatformStorage is compatible with Android 12+ devices, and offers additional features</span></span><br><span class="line">    <span class="comment">// to LocalStorage.</span></span><br><span class="line">    implementation <span class="string">"androidx.appsearch:appsearch-platform-storage:$appsearch_version"</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>实现一个 document 类</li></ol><figure class="highlight kotlin"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">@Document</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">Note</span></span>(</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Required field for a document class. All documents MUST have a namespace.</span></span><br><span class="line">    <span class="meta">@Document</span>.Namespace</span><br><span class="line">    <span class="keyword">val</span> namespace: String,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Required field for a document class. All documents MUST have an Id.</span></span><br><span class="line">    <span class="meta">@Document</span>.Id</span><br><span class="line">    <span class="keyword">val</span> id: String,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Optional field for a document class, used to set the score of the</span></span><br><span class="line">    <span class="comment">// document. If this is not included in a document class, the score is set</span></span><br><span class="line">    <span class="comment">// to a default of 0.</span></span><br><span class="line">    <span class="meta">@Document</span>.Score</span><br><span class="line">    <span class="keyword">val</span> score: <span class="built_in">Int</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Optional field for a document class, used to index a note's text for this</span></span><br><span class="line">    <span class="comment">// document class.</span></span><br><span class="line">    <span class="meta">@Document</span>.StringProperty(indexingType = AppSearchSchema.StringPropertyConfig.INDEXING_TYPE_PREFIXES)</span><br><span class="line">    <span class="keyword">val</span> text: String</span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>创建一个数据库</li></ol><figure class="highlight kotlin"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> context: Context = getApplicationContext()</span><br><span class="line"><span class="keyword">val</span> sessionFuture = LocalStorage.createSearchSession(</span><br><span class="line">    LocalStorage.SearchContext.Builder(context, <span class="comment">/*databaseName=*/</span><span class="string">"notes_app"</span>)</span><br><span class="line">    .build()</span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure><ol start="4"><li>设置数据库的 schema</li></ol><figure class="highlight kotlin"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> setSchemaRequest = SetSchemaRequest.Builder().addDocumentClasses(Note::<span class="keyword">class</span>.java)</span><br><span class="line">    .build()</span><br><span class="line"><span class="keyword">val</span> setSchemaFuture = Futures.transformAsync(</span><br><span class="line">    sessionFuture,</span><br><span class="line">    { session -&gt;</span><br><span class="line">        session?.setSchema(setSchemaRequest)</span><br><span class="line">    }, mExecutor</span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure><ol start="5"><li>向数据库中插入 document</li></ol><figure class="highlight kotlin"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> note = Note(</span><br><span class="line">    namespace=<span class="string">"user1"</span>,</span><br><span class="line">    id=<span class="string">"noteId"</span>,</span><br><span class="line">    score=<span class="number">10</span>,</span><br><span class="line">    text=<span class="string">"Buy fresh fruit"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> putRequest = PutDocumentsRequest.Builder().addDocuments(note).build()</span><br><span class="line"><span class="keyword">val</span> putFuture = Futures.transformAsync(</span><br><span class="line">    sessionFuture,</span><br><span class="line">    { session -&gt;</span><br><span class="line">        session?.put(putRequest)</span><br><span class="line">    }, mExecutor</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">Futures.addCallback(</span><br><span class="line">    putFuture,</span><br><span class="line">    <span class="keyword">object</span> : FutureCallback&lt;AppSearchBatchResult&lt;String, <span class="built_in">Void</span>&gt;?&gt; {</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onSuccess</span><span class="params">(result: <span class="type">AppSearchBatchResult</span>&lt;<span class="type">String</span>, <span class="built_in">Void</span>&gt;?)</span></span> {</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Gets map of successful results from Id to Void</span></span><br><span class="line">            <span class="keyword">val</span> successfulResults = result?.successes</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Gets map of failed results from Id to AppSearchResult</span></span><br><span class="line">            <span class="keyword">val</span> failedResults = result?.failures</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onFailure</span><span class="params">(t: <span class="type">Throwable</span>)</span></span> {</span><br><span class="line">            Log.e(TAG, <span class="string">"Failed to put documents."</span>, t)</span><br><span class="line">        }</span><br><span class="line">    },</span><br><span class="line">    mExecutor</span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure><ol start="6"><li>查找</li></ol><figure class="highlight kotlin"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> searchSpec = SearchSpec.Builder()</span><br><span class="line">    .addFilterNamespaces(<span class="string">"user1"</span>)</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> searchFuture = Futures.transform(</span><br><span class="line">    sessionFuture,</span><br><span class="line">    { session -&gt;</span><br><span class="line">        session?.search(<span class="string">"fruit"</span>, searchSpec)</span><br><span class="line">    },</span><br><span class="line">    mExecutor</span><br><span class="line">)</span><br><span class="line">Futures.addCallback(</span><br><span class="line">    searchFuture,</span><br><span class="line">    <span class="keyword">object</span> : FutureCallback&lt;SearchResults&gt; {</span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onSuccess</span><span class="params">(searchResults: <span class="type">SearchResults</span>?)</span></span> {</span><br><span class="line">            iterateSearchResults(searchResults)</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onFailure</span><span class="params">(t: <span class="type">Throwable</span>?)</span></span> {</span><br><span class="line">            Log.e(<span class="string">"TAG"</span>, <span class="string">"Failed to search notes in AppSearch."</span>, t)</span><br><span class="line">        }</span><br><span class="line">    },</span><br><span class="line">    mExecutor</span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure><h2 id="AppSearch-API">AppSearch API</h2><p>重点关注 PlatformStorage 数据访问控制：使用 PlatformStorage 时查询其他应用共享的数据，是否能够绕过授权查询不可访问的数据。</p><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">search</span><br><span class="line">getNextPage</span><br><span class="line">globalQuery</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="reference">reference</h2><p><a href="https://developer.android.com/guide/topics/search/appsearch">https://developer.android.com/guide/topics/search/appsearch</a></p><p><a href="https://mp.weixin.qq.com/s/TbzHpHRnBt95YaVaNKlTQQ">https://mp.weixin.qq.com/s/TbzHpHRnBt95YaVaNKlTQQ</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Workflow：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;熟悉并使用 AppSearch 功能&lt;/li&gt;
&lt;li&gt;梳理 API 调用并分析攻击面&lt;/li&gt;
&lt;li&gt;阅读源码和动态调试（可能存在的 native 实现）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Research Question：&lt;/
      
    
    </summary>
    
    
      <category term="Android OS" scheme="https://car0ta.github.io/categories/Android-OS/"/>
    
    
      <category term="Android" scheme="https://car0ta.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Static Program Analysis (Datalog)</title>
    <link href="https://car0ta.github.io/2022/05/21/Static-Program-Analysis-Datalog/"/>
    <id>https://car0ta.github.io/2022/05/21/Static-Program-Analysis-Datalog/</id>
    <published>2022-05-21T07:29:04.000Z</published>
    <updated>2022-12-10T14:22:47.504Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Motivation">Motivation</h2><p>命令式语言（imperative） vs. 声明式语言（declarative）</p> <img src="imperative-vs-declarative.png" alt="imperative-vs-declarative" style="zoom:30%;"><p>命令式语言在做指针分析时要实现很多的细节：</p> <img src="imperative-implementation.png" alt="imperative-implementation" style="zoom:30%;"><p>而使用声明式语言实现指针分析是非常简洁的，具有可读性，而且易于实现：</p> <img src="declarative-implementation.png" alt="declarative-implementation" style="zoom:30%;"><h2 id="Introduction-to-Datalog">Introduction to Datalog</h2><p>Datalog 是一个声明式逻辑编程语言，是 Prolog 的子集；起初作为数据库查询语言，后来用途越来越广泛。</p><p>Datalog = Data + Logic (and, or, not)</p><ul><li>No side-effects</li><li>No control flows</li><li>No functions</li><li>Not Turing-complete</li></ul><h3 id="Predicates-Data">Predicates (Data)</h3><p>Datalog 中一个谓词（predicate）是一系列陈述的集合，本质上来讲一个谓词就是一张数据表（table）；fact（事实）断言一个元组满足（数据表中的）某个关系。</p> <img src="predicate-example.png" alt="predicate-example" style="zoom:33%;"><p>Datalog 中的谓词用原子（atom）表示，atom 是 Datalog 中最基本的元素，其表示形式如下：</p> <img src="atom.png" alt="atom" style="zoom:30%;"><p>参数 terms 有两种形式：</p><ul><li>变量（variable）：代表任意值，如 Age(person,age)</li><li>常量（constant）：表示特定值，如 Age(“Xiaoming”,18)</li></ul><p>atom 有两种类型：</p><ul><li>relation atom: P(X1,X2,…,Xn)</li><li>arithmetic atom: age &gt;= 18</li></ul><h3 id="Datalog-Rules-Logic">Datalog Rules (Logic)</h3><p>Rule 是表达逻辑推断的一种方式，也能用来说明如何推断 fact，rule 的格式如下：</p> <img src="rule.png" alt="rule" style="zoom:30%;"><p>注：逗号（,）可以理解为逻辑与</p> <img src="Rule-Interpretation.png" alt="Rule-Interpretation" style="zoom:33%;"><p>根据 Datalog Rules 枚举 body 中所有关系表达式的可能取值组合，进而得到新的 predicate/table。</p><h3 id="EDB-and-IDB-Predicates">EDB and IDB Predicates</h3><p>Datalog 谓词分为两类：</p><ul><li><p>EDB (Extensional DataBase)</p><ul><li>在程序运行前已经定义</li><li>不可变</li><li>可以看做 input</li></ul></li><li><p>IDB (Intensional DataBase)</p><ul><li>由规则推导出来</li><li>可以看做 output</li></ul></li></ul><p>例如：<code>H &lt;- B1,B2,...,Bn.</code>，H 只能是 IDB，Bi 可以是 EDB 或者 IDB。</p><h3 id="Logical-Or">Logical Or</h3> <img src="Logic-Or.png" alt="Logic-Or" style="zoom:33%;"><h3 id="Negation">Negation</h3><img src="Negation.png" alt="Negation" style="zoom:33%;"><h3 id="Recursion">Recursion</h3> <img src="Recursion.png" alt="Recursion" style="zoom:33%;"><h3 id="Rule-Safety">Rule Safety</h3><p>思考以下两条 rules 是否是安全的？</p><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">A(x) &lt;- B(y), x &gt; y.</span><br><span class="line">A(x) &lt;- B(y), !C(x, y).</span><br></pre></td></tr></tbody></table></figure><p>对于第一条 rule，由于 B(y) 原子是有限的，满足该原子的 y 也是有限的，而满足 x&gt;y 的 x 有无穷多个，因此 A(x) 是无限的；第二条 rule 同理，因此这两条规则都是不安全的。在 Datalog 中只接受安全的 rules。</p><p>如果 rule 中每个变量至少在一个 non-negated relational atom 中出现一次，那么这个 rule 就是安全的。</p><p>再看一条 rule：</p><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">A(x) &lt;- B(x), !A(x)</span><br></pre></td></tr></tbody></table></figure><p>对于 subgoal A(x)，如果 A(x) 为 true，那么推导出来的 head A(x) 为 false；如果 subgoal A(x) 为 false，那么推导出来的 head A(x) 为 true。因此这条规则是矛盾的而且没有任何意义。</p><p>在 Datalog 的 atom 中，recursion 和 negation 必须要分开，不能在同一个 atom 中出现。</p><h3 id="Execution-of-Datalog-Programs">Execution of Datalog Programs</h3> <img src="Datalog-Programs.png" alt="Datalog-Programs" style="zoom:33%;"><p>Datalog 的两大重要特性：</p><p>Monotonicity：因为 fact 是不会被删除的。（fact 的数量有限且确定）</p><p>Termination：一个 Datalog 程序必然会终止的，因为 Datalog 具有单调性，且推断出的 IDB 的值也是有限的（Rule safety）。</p><h2 id="Pointer-Analysis-via-Datalog">Pointer Analysis via Datalog</h2><p>了解了 Datalog 的基本语法和性质，我们就可以用它来实现声明式的指针分析算法。其中三个重要的部分对应如下：</p><ul><li>EDB：从程序的语义分析中提取出和指针相关的信息</li><li>IDB：指针分析的结果</li><li>Rules：指针分析的规则</li></ul> <img src="Statements.png" alt="Statements" style="zoom:33%;"><h3 id="Datalog-Model-for-Point-Analysis">Datalog Model for Point Analysis</h3> <img src="Datalog-Model.png" alt="Datalog-Model" style="zoom:33%;"><p>An Example</p> <img src="EDB-Example.png" alt="EDB-Example" style="zoom:33%;"><h3 id="Datalog-Rules-for-Point-Analysis">Datalog Rules for Point Analysis</h3> <img src="Datalog-Rules.png" alt="Datalog-Rules" style="zoom:33%;"><p>An Example</p> <img src="Rules-Example.png" alt="Rules-Example" style="zoom:33%;"><h2 id="Taint-Analysis-via-Datalog">Taint Analysis via Datalog</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Motivation&quot;&gt;Motivation&lt;/h2&gt;
&lt;p&gt;命令式语言（imperative） vs. 声明式语言（declarative）&lt;/p&gt;
 &lt;img src=&quot;imperative-vs-declarative.png&quot; alt=&quot;imperativ
      
    
    </summary>
    
    
      <category term="Program Analysis" scheme="https://car0ta.github.io/categories/Program-Analysis/"/>
    
    
      <category term="Static Program Analysis" scheme="https://car0ta.github.io/tags/Static-Program-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Static Program Analysis (Security)</title>
    <link href="https://car0ta.github.io/2022/05/20/Static-Program-Analysis-Security/"/>
    <id>https://car0ta.github.io/2022/05/20/Static-Program-Analysis-Security/</id>
    <published>2022-05-20T10:55:54.000Z</published>
    <updated>2022-05-21T07:25:15.359Z</updated>
    
    <content type="html"><![CDATA[<p>在软件安全领域有两类非常常见且重要的漏洞是注入型漏洞（injection）和信息泄露（Information leaks），这两类漏洞的本质都是信息流（Information flow）问题，而解决信息流安全问题的一种方案就是污点分析技术（Taint Analysis）。</p><h2 id="Information-Flow-Security">Information Flow Security</h2><p>Access Control vs. Information Flow Security：</p><ul><li>Access Control（保护敏感数据的标准方法）<ul><li>检查程序是否有获取敏感数据的相应权限</li><li>关注信息是如何被访问的（<font color="red">accessed</font>）</li></ul></li><li>Information Flow Security（end-to-end）<ul><li>跟踪信息在程序中的流动以保证程序安全地处理信息</li><li>关注信息是如何被传播的（<font color="red">propagated</font>）</li></ul></li></ul><p>Information Flow</p><blockquote><p>If the information in variable <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> is transferred to variable <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>, then there is information flow <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>→</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x\rightarrow y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>.</p></blockquote><p>例如下面的例子，可以看出信息流分析和之前的指针分析有些类似。</p> <img src="Information-flow.png" alt="Information-flow" style="zoom:30%;"><p>Information Flow Security 将信息流和安全进行关联：</p><ul><li>将程序中的变量分为不同的安全等级（security level）</li><li>在这些等级之间限定允许的信息流向，如 Information flow policy</li></ul><p>Security Level (Classes)</p><p>最基础的模型是 two-level policy，变量被分为两类等级：</p><ul><li><p>H：high security，机密信息</p></li><li><p>L：low security，公开信息</p> <img src="two-level-policy.png" alt="two-level-policy" style="zoom:30%;"></li></ul><p>Security levels 可以建模为格（lattice）：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>≤</mo><mi>H</mi></mrow><annotation encoding="application/x-tex">L\leq H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span></p><p>还有一些更为复杂的 security level 划分：</p> <img src="more-complicated-security-level.png" alt="more-complicated-security-level" style="zoom:30%;"><p>Information Flow Policy</p><p>一种常见的策略是 Noninterference policy</p><ul><li>高密级信息不能影响到低密级信息</li><li>保证攻击者无法通过观测低密级信息来推测出高密级信息</li></ul><img src="Noninterference-policy.png" alt="Noninterference-policy" style="zoom:30%;"><h2 id="Confidentiality-and-Integrity">Confidentiality and Integrity</h2><p>Confidentiality（机密性）</p><ul><li>防止秘密信息被泄露（上节中的内容都是为了保证机密性）</li><li>信息泄露类漏洞就是违反了机密性</li></ul><p>Integrity（完整性）</p><ul><li><p>防止重要信息被不可信的信息所污染</p></li><li><p>注入类漏洞就是违反了完整性</p></li><li><p>典型的注入类漏洞有命令注入，SQL 注入，XSS 攻击等</p> <img src="command-injection.png" alt="command-injection" style="zoom:30%;"></li></ul><p>Confidentiality vs. Integrity</p> <img src="Confidentiality-vs-Integrity.png" alt="Confidentiality-vs-Integrity" style="zoom:30%;"><p>Integrity 更加广泛的定义是（在信息流安全之外的定义）保证数据的准确性，完整性和一致性</p><blockquote><p>Maintenance and the assurance of the accuracy, completeness, consistency of data:</p><ul><li><p>Accuracy:</p><p>E.g., for information flow integrity, the (trusted) critical data<br>should not be corrupted by untrusted data</p></li><li><p>Completeness</p><p>E.g., a database system should store all data completely</p></li><li><p>Consistency</p><p>E.g., a file transfer system should ensure that the file contents of both ends (sender and receiver) are identical</p></li></ul></blockquote><h2 id="Explicit-Flows-and-Convert-Channels">Explicit Flows and Convert Channels</h2><p>Explicit Flows：直接通过赋值传递信息</p> <img src="Explicit-Flows.png" alt="Explicit-Flows" style="zoom:30%;"><p>Convert/Hidden Channels：隐蔽信道则不通过直接的信息传输</p> <img src="Convert-Channels.png" alt="Convert-Channels" style="zoom:30%;"><p>然而，隐蔽信道影响的数据量很有限，因此接下来针对显式流进行分析。</p> <img src="Explicit-Flows-vs-Convert-Channels.png" alt="Explicit-Flows-vs-Convert-Channels" style="zoom:30%;"><h2 id="Taint-Analysis">Taint Analysis</h2><h3 id="Introduction-3">Introduction</h3><p>污点分析是一种最常用的信息流分析技术，它将程序中的数据分为两类：tainted data 和 untainted data。</p><p>Source：污点传播源，如函数的返回值，可控的外部输入等；</p><p>Sink：污点汇聚点，如敏感函数。</p><p>污点分析就是追踪 source 点的数据是否会流到 sink 点中。</p> <img src="taint-analysis.png" alt="taint-analysis" style="zoom:33%;"><p>污点分析的两类应用：</p> <img src="taint-analysis-applications.png" alt="taint-analysis-applications" style="zoom:30%;"><h3 id="Taint-and-Pointer-Analysis">Taint and Pointer Analysis</h3><p>污点分析和指针分析非常类似：</p><blockquote><p>The essence of <font color="red">taint analysis</font>/<font color="blue">pointer analysis</font> is to track how <font color="red">tainted data</font>/<font color="blue">abstract objects</font> flow through the program.</p></blockquote><p>因此我们可以借助指针分析实现污点分析：</p><ul><li>将污点数据（tainted data）看做特殊的 objects</li><li>将污点传播源（source）看做 objects 的创建点（allocation site）</li><li>借助指针分析传播污点数据</li></ul><p>为了简单理解这里采用上下文不敏感的指针分析来实现污点分析：</p><p>Domains</p> <img src="Domains.png" alt="Domains" style="zoom:30%;"><p>Inputs &amp; Outputs</p> <img src="Inputs-and-Outputs.png" alt="Inputs-and-Outputs" style="zoom:30%;"><p>Rules</p><p>和指针分析中的规则相同：</p> <img src="Rules.png" alt="Rules" style="zoom:30%;"><p>不同的是需要额外处理 source 点和 sink 点：</p> <img src="Hnadles-sources-and-sinks.png" alt="Hnadles-sources-and-sinks" style="zoom:30%;"><p>Example</p> <img src="result.png" alt="result" style="zoom:30%;"><p>注意这里介绍的是最简单的污点分析，主要关注污点分析的核心思想。但真实情况要复杂得多，需要额外处理一些语句和方法，比如 sanitizers（污点消除点）。更为详细的污点分析介绍可见<a href="https://www.k0rz3n.com/2019/03/01/%E7%AE%80%E5%8D%95%E7%90%86%E8%A7%A3%E6%B1%A1%E7%82%B9%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF/">这篇文章</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在软件安全领域有两类非常常见且重要的漏洞是注入型漏洞（injection）和信息泄露（Information leaks），这两类漏洞的本质都是信息流（Information flow）问题，而解决信息流安全问题的一种方案就是污点分析技术（Taint Analysis）。&lt;
      
    
    </summary>
    
    
      <category term="Program Analysis" scheme="https://car0ta.github.io/categories/Program-Analysis/"/>
    
    
      <category term="Static Program Analysis" scheme="https://car0ta.github.io/tags/Static-Program-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Static Program Analysis (Pointer Analysis-Context Sensitivity)</title>
    <link href="https://car0ta.github.io/2022/05/18/Static-Program-Analysis-Pointer-Analysis-Context-Sensitivity/"/>
    <id>https://car0ta.github.io/2022/05/18/Static-Program-Analysis-Pointer-Analysis-Context-Sensitivity/</id>
    <published>2022-05-18T15:11:47.000Z</published>
    <updated>2022-05-22T08:53:44.872Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Motivation-3">Motivation</h2><p>之前学习指针分析都是上下文不敏感（Context-Insensitive）的指针分析，但是它的问题就是不精确。</p><p>考虑使用上下文不敏感的指针分析：对于变量 i，由于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">.</mi><mi>g</mi><mi>e</mi><mi>t</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x.get()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span> 存在 2 个 call targets，因此 i 的值可能是1也可能是2，所以结果是 i=NAC。然而显然实际运行时 i=1，从而造成分析错误。</p> <img src="context-insensitive.png" alt="context-insensitive" style="zoom:30%;"><p>考虑使用上下文敏感的指针分析：对于 id() 方法的两次调用分别维护不同的上下文信息，从而精确地得到 i=1。</p> <img src="context-sensitive.png" alt="context-sensitive" style="zoom:30%;"><h2 id="Introduction-2">Introduction</h2><h3 id="C-I-vs-C-S">C.I. vs C.S.</h3><p>Context Insensitivity (C.I.)</p><ul><li>在动态执行时，一个方法可能被不同的调用上下文（calling context）调用多次</li><li>不同的调用上下文被混合并传播给程序的其他部分，从而产生假的数据流</li></ul><p>Context Sensitivity (C.S.)</p><ul><li>上下文敏感分析通过区分不同上下文的数据流对调用上下文进行建模，从而提高精度</li><li>非常知名的一个上下文敏感策略叫做 call-site (call-string) sensitivity，即方法的每个上下文是一条 call-site 链</li></ul><p>Cloning-Based Context Sensitivity</p><ul><li><p>Cloning-Based 是实现上下文敏感的指针分析的最简单的方法</p></li><li><p>对于每一个方法，每到新的上下文就克隆一份新的方法和变量</p><img src="Cloning-Based.png" alt="Cloning-Based" style="zoom:30%;"></li></ul><h3 id="Context-Sensitive-Heap">Context-Sensitive Heap</h3><p>在实际应用中，为了提高指针分析的精确性，上下文敏感技术也要应用到堆抽象中</p><ul><li><p>堆抽象后的对象也作为一种上下文（heap contexts），通常从这类对象被创建的方法里继承上下文</p></li><li><p>Context-sensitive heap abstraction 要比 allocation-site abstraction 更加细粒度</p> <img src="context-sensitive-heap-abstraction.png" alt="context-sensitive-heap-abstraction" style="zoom:40%;"></li></ul><p>为什么上下文敏感的堆抽象技术能提高精度？</p><ul><li>在动态执行过程中，一个创建点（allocation site）在不同的调用上下文（calling context）中可能会创建多个对象；</li><li>同一创建点下的不同对象会有不同的数据流，如果没有 heap contexts 则会合并这些数据流，从而损失精度。</li></ul><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p> <img src="Context-Sensitive-Heap.png" alt="Context-Sensitive-Heap" style="zoom:30%;"><p>需要注意的是，variable 和 heap 的上下文敏感二者结合才能提升精度，单独的 context-sensitive heap 不能提升精度。</p> <img src="single-CS-heap.png" alt="single-CS-heap" style="zoom:30%;"><h2 id="Context-Sensitive-Pointer-Analysis-Rules">Context Sensitive Pointer Analysis: Rules</h2><h3 id="Domains">Domains</h3><p>在上下文敏感的指针分析中，程序中的各类元素都被上下文限定：</p> <img src="Domains.png" alt="Domains" style="zoom:30%;"><h3 id="Rules-Without-Call">Rules: Without Call</h3> <img src="Rules.png" alt="Rules" style="zoom:30%;"><h3 id="Rule-Call">Rule: Call</h3> <img src="Rule-call.png" alt="Rule-call" style="zoom:30%;"><p>上下文敏感实际记录了函数调用栈（上下文），而上下文不敏感在进入 callee 后就无法知道 caller 的信息。</p><h2 id="Context-Sensitive-Pointer-Analysis-Algorithms">Context Sensitive Pointer Analysis: Algorithms</h2><h3 id="Pointer-Flow-Graph-with-C-S">Pointer Flow Graph with C.S.</h3><p>实现 context-sensitive pointer analysis 与 context-insensitive pointer analysis 类似，只是在 PFG 中加入了上下文信息。</p> <img src="context-sensitive-pointer-analysis.png" alt="context-sensitive-pointer-analysis" style="zoom:30%;"><p>我们定义 PFG with C.S. 的节点和边：</p> <img src="Nodes-and-Edges.png" alt="Nodes-and-Edges" style="zoom:30%;"><h3 id="Pointer-Flow-Graph-Edges">Pointer Flow Graph: Edges</h3> <img src="PFG-add-Edge.png" alt="PFG-add-Edge" style="zoom:30%;"><h3 id="Pointer-Flow-Graph-Call">Pointer Flow Graph: Call</h3> <img src="PFG-call-add-edge.png" alt="PFG-call-add-edge" style="zoom:30%;"><h3 id="C-S-Pointer-Analysis-Algorithm">C.S. Pointer Analysis: Algorithm</h3> <img src="Algorithm.png" alt="Algorithm" style="zoom:35%;"><ul><li><p>算法中 Propagate() 和 AddEdge() 函数与先前的 C.I. Pointer Analysis 分析中是完全相同的。</p> <img src="Propagate-and-AddEdge.png" alt="Propagate-and-AddEdge" style="zoom:30%;"></li><li><p>算法中最关键的就是 ProcessCall() 函数，其中 Select() 函数作用是选择具体的 callee 上下文，根据 Select() 函数的实现的不同导致 C.S. Pointer Analysis 的多种变种（见下一部分）</p></li></ul><h2 id="Context-Sensitivity-Variants">Context Sensitivity Variants</h2><p>根据 select() 函数实现的不同，C.S. Pointer Analysis 有三种：</p> <img src="CS-Variants.png" alt="CS-Variants" style="zoom:30%;"><h3 id="Call-Site-Sensitivity">Call-Site Sensitivity</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mstyle mathcolor="red"><mi>S</mi><mi>e</mi><mi>l</mi><mi>e</mi><mi>c</mi><mi>t</mi></mstyle><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><mi>l</mi><mo separator="true">,</mo><mi mathvariant="normal">_</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">[</mo><mstyle mathcolor="red"><mrow><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msup><mi>l</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow></mstyle><mo separator="true">,</mo><mi>l</mi><mo stretchy="false">]</mo><mspace linebreak="newline"></mspace><mtext>where&nbsp;</mtext><mi>c</mi><mo>=</mo><mo stretchy="false">[</mo><mstyle mathcolor="red"><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msup><mi>l</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mstyle><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textcolor{red}{Select}(c,l,\_)=[{\color{red}{l',\ldots,l''}},l ] \\\text{where }c=[\textcolor{red}{l',\ldots ,l''}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;color:red;">S</span><span class="mord mathnormal" style="color:red;">e</span><span class="mord mathnormal" style="margin-right:0.01968em;color:red;">l</span><span class="mord mathnormal" style="color:red;">ec</span><span class="mord mathnormal" style="color:red;">t</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord" style="color:red;"><span class="mord" style="color:red;"><span class="mord mathnormal" style="margin-right:0.01968em;color:red;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;"><span class="mord mtight" style="color:red;">′</span></span></span></span></span></span></span></span></span><span class="mpunct" style="color:red;">,</span><span class="mspace" style="color:red;margin-right:0.1667em;"></span><span class="minner" style="color:red;">…</span><span class="mspace" style="color:red;margin-right:0.1667em;"></span><span class="mpunct" style="color:red;">,</span><span class="mspace" style="color:red;margin-right:0.1667em;"></span><span class="mord" style="color:red;"><span class="mord mathnormal" style="margin-right:0.01968em;color:red;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;"><span class="mord mtight" style="color:red;">′′</span></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">]</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord">where&nbsp;</span></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord" style="color:red;"><span class="mord mathnormal" style="margin-right:0.01968em;color:red;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;"><span class="mord mtight" style="color:red;">′</span></span></span></span></span></span></span></span></span><span class="mpunct" style="color:red;">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner" style="color:red;">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct" style="color:red;">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="color:red;"><span class="mord mathnormal" style="margin-right:0.01968em;color:red;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;"><span class="mord mtight" style="color:red;">′′</span></span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></span></p><p>每一个上下文都是一个调用点的链（调用链）</p><ul><li>对于每一个方法调用，将 caller context 和当前的 call site 一起作为 callee context</li><li>实际上是调用栈的抽象表示</li><li>也叫做 call-string sensitivity 或者 k-CFA</li></ul><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p> <img src="call-site-sensitivity-example.png" alt="call-site-sensitivity-example" style="zoom:30%;"><p>如果存在递归调用的情况，那么某个函数的上下文可能有无穷多个：</p> <img src="recursive-call.png" alt="recursive-call" style="zoom:30%;"><h4 id="k-limiting-Context-Abstraction">k-limiting Context Abstraction</h4><p>为了解决递归调用存在过多上下文的问题，我们将上下文的长度设置一个上界，记作 k：</p><ul><li>每个上下文的调用链中只保存最后 k 个 call sites</li><li>在实际分析中 k 是一个很小的数，通常 &lt;=3</li><li>Method contexts（通常 k=2）和 heap contexts（通常 k=1）通常使用不同的 k</li></ul><h4 id="k-Call-Site-Sensitivity-k-CFA">k-Call-Site Sensitivity/k-CFA</h4><p>1-call-site/1-CFA</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mstyle mathcolor="red"><mi>S</mi><mi>e</mi><mi>l</mi><mi>e</mi><mi>c</mi><mi>t</mi></mstyle><mo stretchy="false">(</mo><mi mathvariant="normal">_</mi><mo separator="true">,</mo><mi>l</mi><mo separator="true">,</mo><mi mathvariant="normal">_</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">[</mo><mi>l</mi><mo stretchy="false">]</mo><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">\textcolor{red}{Select}(\_,l,\_)=[l] \\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;color:red;">S</span><span class="mord mathnormal" style="color:red;">e</span><span class="mord mathnormal" style="margin-right:0.01968em;color:red;">l</span><span class="mord mathnormal" style="color:red;">ec</span><span class="mord mathnormal" style="color:red;">t</span><span class="mopen">(</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">]</span></span><span class="mspace newline"></span></span></span></span></p> <img src="1-call-site.png" alt="1-call-site" style="zoom:30%;"><p>2-call-site/2-CFA</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mstyle mathcolor="red"><mi>S</mi><mi>e</mi><mi>l</mi><mi>e</mi><mi>c</mi><mi>t</mi></mstyle><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><mi>l</mi><mo separator="true">,</mo><mi mathvariant="normal">_</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">[</mo><mstyle mathcolor="red"><msup><mi>l</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mstyle><mo separator="true">,</mo><mi>l</mi><mo stretchy="false">]</mo><mspace linebreak="newline"></mspace><mtext>where&nbsp;</mtext><mi>c</mi><mo>=</mo><mo stretchy="false">[</mo><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><mstyle mathcolor="red"><msup><mi>l</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mstyle><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textcolor{red}{Select}(c,l,\_)=[\textcolor{red}{l''},l] \\\text{where }c=[l',\textcolor{red}{l''}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;color:red;">S</span><span class="mord mathnormal" style="color:red;">e</span><span class="mord mathnormal" style="margin-right:0.01968em;color:red;">l</span><span class="mord mathnormal" style="color:red;">ec</span><span class="mord mathnormal" style="color:red;">t</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord" style="color:red;"><span class="mord mathnormal" style="margin-right:0.01968em;color:red;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;"><span class="mord mtight" style="color:red;">′′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">]</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord">where&nbsp;</span></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="color:red;"><span class="mord mathnormal" style="margin-right:0.01968em;color:red;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;"><span class="mord mtight" style="color:red;">′′</span></span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></span></p><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 1-call-site</p> <img src="1-call-site-example.png" alt="1-call-site-example" style="zoom:33%;"><h3 id="Object-Sensitivity">Object Sensitivity</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mstyle mathcolor="red"><mi>S</mi><mi>e</mi><mi>l</mi><mi>e</mi><mi>c</mi><mi>t</mi></mstyle><mo stretchy="false">(</mo><mi mathvariant="normal">_</mi><mo separator="true">,</mo><mi mathvariant="normal">_</mi><mo separator="true">,</mo><mrow><msup><mi mathvariant="bold">c</mi><mo mathvariant="bold" lspace="0em" rspace="0em">′</mo></msup><mo>:</mo><msub><mi mathvariant="bold">o</mi><mi mathvariant="bold">i</mi></msub></mrow><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">[</mo><mstyle mathcolor="red"><msub><mi>o</mi><mi>j</mi></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>o</mi><mi>k</mi></msub></mstyle><mo separator="true">,</mo><msub><mi>o</mi><mi>i</mi></msub><mo stretchy="false">]</mo><mspace linebreak="newline"></mspace><mtext>where&nbsp;</mtext><msup><mi>c</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">[</mo><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><mstyle mathcolor="red"><msub><mi>o</mi><mi>j</mi></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>o</mi><mi>k</mi></msub></mstyle><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textcolor{red}{Select}(\_,\_,{\bf{c':o_i}})=[\textcolor{red}{o_j,\ldots,o_k},o_i] \\\text{where }c'=[l',\textcolor{red}{o_j,\ldots,o_k}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1119em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;color:red;">S</span><span class="mord mathnormal" style="color:red;">e</span><span class="mord mathnormal" style="margin-right:0.01968em;color:red;">l</span><span class="mord mathnormal" style="color:red;">ec</span><span class="mord mathnormal" style="color:red;">t</span><span class="mopen">(</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathbf mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathbf">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">[</span><span class="mord" style="color:red;"><span class="mord mathnormal" style="color:red;">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mathnormal mtight" style="margin-right:0.05724em;color:red;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct" style="color:red;">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner" style="color:red;">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct" style="color:red;">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="color:red;"><span class="mord mathnormal" style="color:red;">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mathnormal mtight" style="margin-right:0.03148em;color:red;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8019em;"></span><span class="mord text"><span class="mord">where&nbsp;</span></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.088em;vertical-align:-0.2861em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="color:red;"><span class="mord mathnormal" style="color:red;">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mathnormal mtight" style="margin-right:0.05724em;color:red;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct" style="color:red;">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner" style="color:red;">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct" style="color:red;">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="color:red;"><span class="mord mathnormal" style="color:red;">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mathnormal mtight" style="margin-right:0.03148em;color:red;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></span></p><p>每一个上下文都是 abstract objects（用 allocation site 表示） 的一个链</p><ul><li>对于一个方法调用，将 receiver objects 和它的 heap context 一起作为 callee context</li><li>区分不同对象上的数据流操作</li><li>也叫做 allocation-site sensitivity</li></ul><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 1-object</p> <img src="1-object-example.png" alt="1-object-example" style="zoom:33%;"><h4 id="1-call-site-vs-1-object">1-call-site vs 1-object</h4><p>从下图中分析可以看出，1-call-site 在这个代码示例中会产生误报（如果采用 2-call-site 则不会）。</p> <img src="1-call-site-vs-1-object.png" alt="1-call-site-vs-1-object" style="zoom:33%;"><p>从调用图中也可以看出区别：</p> <img src="call-graph-vs.png" alt="call-graph-vs" style="zoom:30%;"><p>但是 Object Sensitivity 不一定就比 Call-Site Sensitivity 要好，例如对于之前的代码示例，1-Object Sensitivity 会造成误报。</p> <img src="previous-code-vs.png" alt="previous-code-vs" style="zoom:33%;"><h4 id="Call-Site-vs-Object-Sensitivity">Call-Site vs. Object Sensitivity</h4><ul><li>理论上二者的精度无法比较的</li><li>但实际对于 OO 语言而言，Object Sensitivity 要优于 Call-Site Sensitivity</li></ul><p>从真实的实验对比可以看出，Object Sensitivity 在效率和精度上都比 Call-Site Sensitivity 要更优。</p> <img src="Call-Site-vs-Object.png" alt="Call-Site-vs-Object" style="zoom:33%;"><h3 id="Type-Sensitivity">Type Sensitivity</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mstyle mathcolor="red"><mi>S</mi><mi>e</mi><mi>l</mi><mi>e</mi><mi>c</mi><mi>t</mi></mstyle><mo stretchy="false">(</mo><mi mathvariant="normal">_</mi><mo separator="true">,</mo><mi mathvariant="normal">_</mi><mo separator="true">,</mo><msup><mi>c</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>:</mo><msub><mi>o</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">[</mo><msup><mi>t</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msup><mi>t</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo separator="true">,</mo><mstyle mathcolor="red"><mi>I</mi><mi>n</mi><mi>T</mi><mi>y</mi><mi>p</mi><mi>e</mi></mstyle><mo stretchy="false">(</mo><msub><mi>o</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mspace linebreak="newline"></mspace><mtext>where&nbsp;</mtext><msup><mi>c</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">[</mo><msup><mi>t</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msup><mi>t</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\textcolor{red}{Select}(\_,\_,c':o_i)=[t',\ldots,t'',\textcolor{red}{InType}(o_i)] \\\text{where }c'=[t',\ldots,t'']</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1119em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;color:red;">S</span><span class="mord mathnormal" style="color:red;">e</span><span class="mord mathnormal" style="margin-right:0.01968em;color:red;">l</span><span class="mord mathnormal" style="color:red;">ec</span><span class="mord mathnormal" style="color:red;">t</span><span class="mopen">(</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;color:red;">I</span><span class="mord mathnormal" style="color:red;">n</span><span class="mord mathnormal" style="margin-right:0.13889em;color:red;">T</span><span class="mord mathnormal" style="margin-right:0.03588em;color:red;">y</span><span class="mord mathnormal" style="color:red;">p</span><span class="mord mathnormal" style="color:red;">e</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)]</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8019em;"></span><span class="mord text"><span class="mord">where&nbsp;</span></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′′</span></span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></span></p><p>每一个上下文都是一个 type list</p><ul><li>对于一个方法调用，将 receiver object 的创建点的类型及其 heap context 作为 callee context</li><li>Type Sensitivity 是 Object Sensitivity 的一个更粗糙的抽象</li></ul> <img src="Type-Sensitivity-example.png" alt="Type-Sensitivity-example" style="zoom:33%;"><p>对于如下代码对比 Type Sensitivity 和 Object Sensitivity：</p> <img src="Type-vs-Object.png" alt="Type-vs-Object" style="zoom:33%;"><p>从真实的实验对比可以得出结论：</p><ul><li>Precision: object &gt; type &gt; call-site</li><li>Efficiency: type &gt; object &gt; call-site</li></ul> <img src="CS-Variants-comparison.png" alt="CS-Variants-comparison" style="zoom:33%;">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Motivation-3&quot;&gt;Motivation&lt;/h2&gt;
&lt;p&gt;之前学习指针分析都是上下文不敏感（Context-Insensitive）的指针分析，但是它的问题就是不精确。&lt;/p&gt;
&lt;p&gt;考虑使用上下文不敏感的指针分析：对于变量 i，由于 &lt;span clas
      
    
    </summary>
    
    
      <category term="Program Analysis" scheme="https://car0ta.github.io/categories/Program-Analysis/"/>
    
    
      <category term="Static Program Analysis" scheme="https://car0ta.github.io/tags/Static-Program-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Static Program Analysis (Pointer Analysis-Foundations)</title>
    <link href="https://car0ta.github.io/2022/05/17/Static-Program-Analysis-Pointer-Analysis-Foundations/"/>
    <id>https://car0ta.github.io/2022/05/17/Static-Program-Analysis-Pointer-Analysis-Foundations/</id>
    <published>2022-05-16T16:49:31.000Z</published>
    <updated>2022-05-22T06:06:12.472Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Pointer-Analysis-Rules">Pointer Analysis: Rules</h2><p>首先介绍需要用到的定义：</p><p>Variables: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>y</mi><mo>∈</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">x,\,y\in V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span></p><p>Fields: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo separator="true">,</mo><mtext> </mtext><mi>g</mi><mo>∈</mo><mi>F</mi></mrow><annotation encoding="application/x-tex">f,\,g\in F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></p><p>Objects: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>o</mi><mi>i</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>o</mi><mi>j</mi></msub><mo>∈</mo><mi>O</mi></mrow><annotation encoding="application/x-tex">o_i,\,o_j\in O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8252em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span></p><p>Instance fields: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>o</mi><mi>i</mi></msub><mi mathvariant="normal">.</mi><mi>f</mi><mo separator="true">,</mo><mtext> </mtext><msub><mi>o</mi><mi>i</mi></msub><mi mathvariant="normal">.</mi><mi>g</mi><mo>∈</mo><mi>O</mi><mo>×</mo><mi>F</mi></mrow><annotation encoding="application/x-tex">o_i.f,\,o_i.g\in O\times F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></p><p>Pointers: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi mathvariant="normal">P</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>=</mo><mi>V</mi><mo>∪</mo><mo stretchy="false">(</mo><mi>O</mi><mo>×</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathrm{Pointer}=V\cup (O\times F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathrm">Pointer</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span></p><p>Pointers-to relations: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>t</mi><mo>:</mo><mrow><mi mathvariant="normal">P</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>→</mo><mi>P</mi><mo stretchy="false">(</mo><mi>O</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pt: \mathrm{Pointer}\rightarrow P(O)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">pt</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathrm">Pointer</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mclose">)</span></span></span></span></p><p>其中：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>O</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(O)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mclose">)</span></span></span></span> 表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span> 的幂集</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pt(p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">pt</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span> 表示指针 p 指向的对象集合</p><p>规则：</p><table><thead><tr><th>Kind</th><th>Statement</th><th>Rule</th></tr></thead><tbody><tr><td>New</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>:</mo><mtext>  </mtext><mi>x</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mtext>  </mtext><mi>T</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i:\;x=new\;T()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow></mrow><mrow><msub><mi>o</mi><mi>i</mi></msub><mo>∈</mo><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{}{o_i\in pt(x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.914em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.394em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">pt</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td></tr><tr><td>Assign</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x=y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><msub><mi>o</mi><mi>i</mi></msub><mo>∈</mo><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>o</mi><mi>i</mi></msub><mo>∈</mo><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{o_i\in pt(y)}{o_i\in pt(x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">pt</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">pt</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td></tr><tr><td>Store</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">.</mi><mi>f</mi><mo>=</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x.f=y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><msub><mi>o</mi><mi>i</mi></msub><mo>∈</mo><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>o</mi><mi>j</mi></msub><mo>∈</mo><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>o</mi><mi>j</mi></msub><mo>∈</mo><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>o</mi><mi>i</mi></msub><mi mathvariant="normal">.</mi><mi>f</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{o_i\in pt(x),\,o_j\in pt(y)}{o_j\in pt(o_i.f)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5746em;vertical-align:-0.5423em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0323em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">pt</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">.</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5073em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">pt</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span><span class="mpunct mtight">,</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">pt</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td></tr><tr><td>Load</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>x</mi><mi mathvariant="normal">.</mi><mi>f</mi></mrow><annotation encoding="application/x-tex">y=x.f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><msub><mi>o</mi><mi>i</mi></msub><mo>∈</mo><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>o</mi><mi>j</mi></msub><mo>∈</mo><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>o</mi><mi>i</mi></msub><mi mathvariant="normal">.</mi><mi>f</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>o</mi><mi>j</mi></msub><mo>∈</mo><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{o_i\in pt(x),\,o_j\in pt(o_i.f)}{o_j\in pt(y)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5746em;vertical-align:-0.5423em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0323em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">pt</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5073em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">pt</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span><span class="mpunct mtight">,</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">pt</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">.</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5423em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td></tr></tbody></table><p>注：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>a</mi><mi>b</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{a}{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0404em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6954em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 为推导符号，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 是前提（premises），<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 是结论（conclusion）。</p><p>采用图形的方式描述：</p> <img src="Rules.png" alt="Rules" style="zoom:33%;"><h2 id="How-to-Implement-Pointer-Analysis">How to Implement Pointer Analysis</h2><p>指针分析就是在指针（variables&amp;fields）之间传播（propagate）指向关系，或者说指针分析就是在求解一系列指针的包含约束（<font color="red">inclusion constraints</font>）条件。</p> <img src="propagate-pointers-to.png" alt="propagate-pointers-to" style="zoom:33%;"><blockquote><p>Key to implementation: when <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pt(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">pt</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> is <strong>changed</strong>, <strong>propagate</strong> the <strong>changed part</strong> to the <strong>related pointers</strong> of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>.</p></blockquote><p>我们采用一个 graph 来连接 related pointers，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pt(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">pt</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 变化时，将 changed part 传播到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 的后继。</p><h3 id="Pointer-Flow-Graph-PFG">Pointer Flow Graph (PFG)</h3><p>程序的指针流图（Pointer Flow Analysis）是一个有向图，用来表示程序中所有对象在指针中的流向，我们定义指针流图的点和边：</p><ul><li><p>Nodes: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi mathvariant="normal">P</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>=</mo><mi>V</mi><mo>∪</mo><mo stretchy="false">(</mo><mi>O</mi><mo>×</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathrm{Pointer}=V\cup (O\times F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathrm">Pointer</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span></p><p>一个节点 n 表示一个指针（变量或抽象对象的域/属性）</p></li><li><p>Edges: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi mathvariant="normal">P</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>×</mo><mrow><mi mathvariant="normal">P</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow></mrow><annotation encoding="application/x-tex">\mathrm{Pointer}\times\mathrm{Pointer}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathrm">Pointer</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathrm">Pointer</span></span></span></span></span></p><p>一条边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>→</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x\rightarrow y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 表示指针 x 指向的对象也被指针 y 指向，即指针 x 指向的对象流向（<font color="red">may flow to</font>）指针 y</p> <img src="PFG-edges.png" alt="PFG-edges" style="zoom:33%;"></li></ul><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p>假设 c 和 d 开始都指向 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>o</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">o_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，根据上述规则可以构建 PFG。当 b 指向的对象更新时，根据 PFG 需要传递到 e 中，因此指针分析转化为求解 PFG 上传递闭包（transition closure）的问题。</p> <img src="PFG-example.png" alt="PFG-example" style="zoom:33%;"><p>指针分析的整个过程，需要在构建 PFG 和在已有 PFG 上传播指向关系这两步之间不断交替循环，这两步也是相互依赖的。</p> <img src="=mutually-dependent.png" alt="mutually-dependent" style="zoom:33%;"><h2 id="Pointer-Analysis-Algorithms">Pointer Analysis: Algorithms</h2><h3 id="Algorithm">Algorithm</h3> <img src="Algorithm.png" alt="Algorithm" style="zoom:33%;"><ul><li>Solve() 为主函数，由于是流不敏感分析，所以输入 S 是程序语句的 Set，四个红框对应的是四种指针相关的语句——New、Assign、Store 和 Load；AddEdge() 为 PFG 加边函数；Propagate() 为指针传播函数。</li><li>Worklist（WL）包含需要处理的指针的指向信息，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mi>L</mi><mo>⊆</mo><mo stretchy="false">⟨</mo><mrow><mi mathvariant="normal">P</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo separator="true">,</mo><mi>P</mi><mo stretchy="false">(</mo><mi>O</mi><mo stretchy="false">)</mo><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">WL\subseteq \langle \mathrm{Pointer},P(O)\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord"><span class="mord mathrm">Pointer</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mclose">)⟩</span></span></span></span>。Worklist 中的每一项都是一个指针 n 和指向集合 pts 的对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⟨</mo><mi>n</mi><mo separator="true">,</mo><mi>p</mi><mi>t</mi><mi>s</mi><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\langle n,pts\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">pt</span><span class="mord mathnormal">s</span><span class="mclose">⟩</span></span></span></span>，表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>t</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">pts</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">pt</span><span class="mord mathnormal">s</span></span></span></span> 需要被传播到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pt(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">pt</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 中。E.g., <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo stretchy="false">⟨</mo><mi>x</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mi>i</mi></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mtext> </mtext><mo stretchy="false">⟨</mo><mi>y</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mi>j</mi></msub><mo separator="true">,</mo><msub><mi>o</mi><mi>k</mi></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mtext> </mtext><mo stretchy="false">⟨</mo><msub><mi>o</mi><mi>j</mi></msub><mi mathvariant="normal">.</mi><mi>f</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mi>l</mi></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo>…</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[\langle x,\{o_i\}\rangle,\,\langle y,\{o_j,o_k\}\rangle,\,\langle o_j.f,\{o_l\}\rangle\ldots]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">[⟨</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">⟨</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">⟨</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mclose">]</span></span></span></span></li></ul><h3 id="Handling-of-New-and-Assign">Handling of New and Assign</h3><p>首先初始化并添加 assign 边：</p><ul><li>针对所有的 New 语句，将其指向关系添加到 WL 中</li><li>对于所有的 Assign 语句，在 PFG 中添加一条 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>→</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">y\rightarrow x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 的边</li></ul> <img src="initialize-add-edges.png" alt="initialize-add-edges" style="zoom:30%;"><p>AddEdge() 函数解释如下：</p> <img src="AddEdge.png" alt="AddEdge" style="zoom:30%;"><p>然后处理 WL 中的每一项：</p><ul><li>对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⟨</mo><mi>n</mi><mo separator="true">,</mo><mi>p</mi><mi>t</mi><mi>s</mi><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\langle n,pts\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">pt</span><span class="mord mathnormal">s</span><span class="mclose">⟩</span></span></span></span>，计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>t</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">pts</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">pt</span><span class="mord mathnormal">s</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pt(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">pt</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 的差值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Δ</span></span></span></span>，也就是说只将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>t</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">pts</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">pt</span><span class="mord mathnormal">s</span></span></span></span> 中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pt(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">pt</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 没有的指向添加进来</li></ul> <img src="Process-WL.png" alt="Process-WL" style="zoom:30%;"><p>Propagate() 函数解释如下：</p> <img src="Propagate.png" alt="Propagate" style="zoom:30%;"><h3 id="Differential-Propagation">Differential Propagation</h3><p>Q: 为什么算法中采用的是差值传播（Differential Propagation）</p><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Δ = pts – pt(n)</span><br><span class="line">Propagate(n, Δ)</span><br></pre></td></tr></tbody></table></figure><p>A: 在实际分析中，一个程序的指针数量可能非常巨大，如果将全部的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>t</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">pts</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">pt</span><span class="mord mathnormal">s</span></span></span></span> 传播到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pt(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">pt</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 中，会造成极大的冗余而影响效率，因此可以采用差值传播的方式避免传播和处理一些冗余的指向信息。例如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pt(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">pt</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 中已有的指向信息肯定在之前就已经传播给 n 的所有后继节点了，因此不需要再传播一次。</p><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p>考虑下图的情况，在传播完 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pt(a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">pt</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span> 后需要传播 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pt(b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">pt</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></p> <img src="Differential-Propagation-1.png" alt="Differential-Propagation-1" style="zoom:30%;"><p>如果我们选择直接传播（Direct Propagation），可以发现 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>o</mi><mn>1</mn></msub><mo separator="true">,</mo><mtext>  </mtext><msub><mi>o</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">o_1,\;o_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 被重复传播，造成冗余。</p> <img src="Differential-Propagation-2.png" alt="Differential-Propagation-2" style="zoom:30%;"><p>而采用差值传播则只需要传播 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>o</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">o_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，在实际分析中会大大减小开销。</p> <img src="Differential-Propagation-3.png" alt="Differential-Propagation-3" style="zoom:30%;"><h3 id="Handling-of-Store-and-Load">Handling of Store and Load</h3><ul><li>对于 Store 语句（如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">.</mi><mi>f</mi><mo>=</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x.f=y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>o</mi><mi>i</mi></msub><mo>∈</mo><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">o_i\in pt(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">pt</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>）添加一条 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>→</mo><msub><mi>o</mi><mi>i</mi></msub><mi mathvariant="normal">.</mi><mi>f</mi></mrow><annotation encoding="application/x-tex">y\rightarrow o_i.f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span> 的边</li><li>对于 Load 语句（如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>x</mi><mi mathvariant="normal">.</mi><mi>f</mi></mrow><annotation encoding="application/x-tex">y=x.f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>o</mi><mi>i</mi></msub><mo>∈</mo><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">o_i\in pt(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">pt</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>）添加一条 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>o</mi><mi>i</mi></msub><mi mathvariant="normal">.</mi><mi>f</mi><mo>→</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">o_i.f\rightarrow y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 的边</li></ul> <img src="Store-and-Load.png" alt="Store-and-Load" style="zoom:30%;"><h3 id="Example">Example</h3><p>根据上述算法计算以下代码的 PFG</p><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line">b = <span class="keyword">new</span> <span class="title class_">C</span>();</span><br><span class="line">a = b;</span><br><span class="line">c = <span class="keyword">new</span> <span class="title class_">C</span>();</span><br><span class="line">c.f = a;</span><br><span class="line">d = c;</span><br><span class="line">c.f = d;</span><br><span class="line">e = d.f;</span><br></pre></td></tr></tbody></table></figure><ol><li>将所有的 New 语句（line1, line3）的指向关系添加到 WL 中；</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mi mathvariant="bold">f</mi><mi mathvariant="bold">o</mi><mi mathvariant="bold">r</mi><mi mathvariant="bold">e</mi><mi mathvariant="bold">a</mi><mi mathvariant="bold">c</mi><mi mathvariant="bold">h</mi></mrow><mtext>  </mtext><mstyle mathcolor="blue"><mi>i</mi><mo>:</mo><mi>x</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mtext>  </mtext><mi>T</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mstyle><mo>∈</mo><mi>S</mi><mtext>  </mtext><mrow><mi mathvariant="bold">d</mi><mi mathvariant="bold">o</mi></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"></mspace><mrow><mtext>add</mtext><mstyle scriptlevel="0" displaystyle="false"><mtext>  </mtext><mo stretchy="false">⟨</mo><mi>x</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mi>i</mi></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mtext>  </mtext></mstyle><mtext>to&nbsp;WL</mtext></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;{\bf{foreach}}\;\textcolor{blue}{i:x=new\;T()}\in S\;{\bf{do}} \\&amp;\quad\text{add$\;\langle x,\{o_i\}\rangle\;$to WL} \\\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">foreach</span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="color:blue;">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel" style="color:blue;">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="color:blue;">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel" style="color:blue;">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="color:blue;">n</span><span class="mord mathnormal" style="color:blue;">e</span><span class="mord mathnormal" style="margin-right:0.02691em;color:blue;">w</span><span class="mspace" style="color:blue;margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;color:blue;">T</span><span class="mopen" style="color:blue;">(</span><span class="mclose" style="color:blue;">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">do</span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord">add</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">to&nbsp;WL</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>WL: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo stretchy="false">⟨</mo><mi>b</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mo stretchy="false">⟨</mo><mi>c</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[\langle b,\{o_1\}\rangle,\langle c,\{o_3\}\rangle]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[⟨</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩]</span></span></span></span></p><p>PFG: NULL</p><ol start="2"><li>对于所有的 Assign 语句（line2, line4）在 PFG 中添加边；</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mi mathvariant="bold">f</mi><mi mathvariant="bold">o</mi><mi mathvariant="bold">r</mi><mi mathvariant="bold">e</mi><mi mathvariant="bold">a</mi><mi mathvariant="bold">c</mi><mi mathvariant="bold">h</mi></mrow><mtext>  </mtext><mstyle mathcolor="blue"><mi>x</mi><mo>=</mo><mi>y</mi></mstyle><mo>∈</mo><mi>S</mi><mtext>  </mtext><mrow><mi mathvariant="bold">d</mi><mi mathvariant="bold">o</mi></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"></mspace><mstyle mathcolor="red"><mtext>AddEdge</mtext></mstyle><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;{\bf{foreach}}\;\textcolor{blue}{x=y}\in S\;{\bf{do}} \\&amp;\quad\text{\color{red}AddEdge}(y,x) \\\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">foreach</span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="color:blue;">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel" style="color:blue;">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;color:blue;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">do</span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord" style="color:red;">AddEdge</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>WL: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo stretchy="false">⟨</mo><mi>b</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mo stretchy="false">⟨</mo><mi>c</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[\langle b,\{o_1\}\rangle,\langle c,\{o_3\}\rangle]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[⟨</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩]</span></span></span></span></p><p>PFG:</p><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  graph RLb("b {}")--&gt;a("a {}")c("c {}")--&gt;d("d {}")  </pre></div><ol start="3"><li>首先处理 WL 中的元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⟨</mo><mi>b</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\langle b,\{o_1\}\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span></span></span></span></li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mrow><mi mathvariant="bold">w</mi><mi mathvariant="bold">h</mi><mi mathvariant="bold">i</mi><mi mathvariant="bold">l</mi><mi mathvariant="bold">e</mi></mrow><mtext>&nbsp;WL&nbsp;is&nbsp;not&nbsp;empty&nbsp;</mtext><mrow><mi mathvariant="bold">d</mi><mi mathvariant="bold">o</mi></mrow></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"></mspace><mrow><mtext>remove&nbsp;</mtext><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false">⟨</mo><mi>n</mi><mo separator="true">,</mo><mi>p</mi><mi>t</mi><mi>s</mi><mo stretchy="false">⟩</mo></mstyle><mtext>&nbsp;from&nbsp;WL</mtext></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"></mspace><mi mathvariant="normal">Δ</mi><mo>=</mo><mi>p</mi><mi>t</mi><mi>s</mi><mo>−</mo><mi>p</mi><mi>t</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"></mspace><mstyle mathcolor="red"><mtext>Propagate</mtext></mstyle><mo stretchy="false">(</mo><mi>n</mi><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;\bf{while}\text{ WL is not empty }\bf{do} \\&amp;\quad\text{remove $\langle n,pts\rangle$ from WL} \\&amp;\quad\Delta=pts-pt(n) \\&amp;\quad\text{\color{red}{Propagate}}(n,\Delta) \\\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord"><span class="mord mathbf">while</span></span><span class="mord text"><span class="mord">&nbsp;WL&nbsp;is&nbsp;not&nbsp;empty&nbsp;</span></span><span class="mord"><span class="mord"><span class="mord mathbf">do</span></span></span></span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord">remove&nbsp;</span><span class="mopen">⟨</span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">pt</span><span class="mord mathnormal">s</span><span class="mclose">⟩</span><span class="mord">&nbsp;from&nbsp;WL</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord">Δ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">pt</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">pt</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord" style="color:red;"><span class="mord" style="color:red;">Propagate</span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">Δ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>WL: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo stretchy="false">⟨</mo><mi>c</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mstyle mathcolor="red"><mrow><mo stretchy="false">⟨</mo><mi>a</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo></mrow><mo stretchy="false">]</mo></mstyle></mrow><annotation encoding="application/x-tex">[\langle c,\{o_3\}\rangle,\color{red}{\langle a,\{o_1\}\rangle}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[⟨</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="color:red;"><span class="mopen" style="color:red;">⟨</span><span class="mord mathnormal" style="color:red;">a</span><span class="mpunct" style="color:red;">,</span><span class="mspace" style="color:red;margin-right:0.1667em;"></span><span class="mopen" style="color:red;">{</span><span class="mord" style="color:red;"><span class="mord mathnormal" style="color:red;">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose" style="color:red;">}⟩</span></span><span class="mclose" style="color:red;">]</span></span></span></span></p><p>PFG:</p><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  graph RLb("b {&lt;font color=red&gt;o1&lt;/font&gt;}")--&gt;a("a {}")c("c {}")--&gt;d("d {}")  </pre></div><ol start="4"><li>接着处理 WL 中的元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⟨</mo><mi>c</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\langle c,\{o_3\}\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span></span></span></span></li></ol><p>WL: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo stretchy="false">⟨</mo><mi>a</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mstyle mathcolor="red"><mrow><mo stretchy="false">⟨</mo><mi>d</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo></mrow><mo stretchy="false">]</mo></mstyle></mrow><annotation encoding="application/x-tex">[\langle a,\{o_1\}\rangle,\color{red}{\langle d,\{o_3\}\rangle}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[⟨</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="color:red;"><span class="mopen" style="color:red;">⟨</span><span class="mord mathnormal" style="color:red;">d</span><span class="mpunct" style="color:red;">,</span><span class="mspace" style="color:red;margin-right:0.1667em;"></span><span class="mopen" style="color:red;">{</span><span class="mord" style="color:red;"><span class="mord mathnormal" style="color:red;">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose" style="color:red;">}⟩</span></span><span class="mclose" style="color:red;">]</span></span></span></span></p><p>PFG:</p><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  graph RLb("b {o1}")--&gt;a("a {}")c("c {&lt;font color=red&gt;o3&lt;/font&gt;}")--&gt;d("d {}")  </pre></div><ol start="5"><li>由于 4 中处理的指针 c 存在内存操作语句（line4, line6），所以需要更新 c 的 instance field 相关的指向关系</li></ol><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mrow><mi mathvariant="bold">i</mi><mi mathvariant="bold">f</mi></mrow><mtext>&nbsp;n&nbsp;represents&nbsp;a&nbsp;variable&nbsp;x&nbsp;</mtext><mrow><mi mathvariant="bold">t</mi><mi mathvariant="bold">h</mi><mi mathvariant="bold">e</mi><mi mathvariant="bold">n</mi></mrow></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"></mspace><mrow><mi mathvariant="bold">f</mi><mi mathvariant="bold">o</mi><mi mathvariant="bold">r</mi><mi mathvariant="bold">e</mi><mi mathvariant="bold">a</mi><mi mathvariant="bold">c</mi><mi mathvariant="bold">h</mi></mrow><mtext>  </mtext><msub><mi>o</mi><mi>i</mi></msub><mo>∈</mo><mi mathvariant="normal">Δ</mi><mtext>  </mtext><mrow><mi mathvariant="bold">d</mi><mi mathvariant="bold">o</mi></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"></mspace><mspace width="1em"></mspace><mrow><mi mathvariant="bold">f</mi><mi mathvariant="bold">o</mi><mi mathvariant="bold">r</mi><mi mathvariant="bold">e</mi><mi mathvariant="bold">a</mi><mi mathvariant="bold">c</mi><mi mathvariant="bold">h</mi></mrow><mtext>  </mtext><mstyle mathcolor="blue"><mi>x</mi><mi mathvariant="normal">.</mi><mi>f</mi><mo>=</mo><mi>y</mi></mstyle><mo>∈</mo><mi>S</mi><mtext>  </mtext><mrow><mi mathvariant="bold">d</mi><mi mathvariant="bold">o</mi></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"></mspace><mspace width="1em"></mspace><mspace width="1em"></mspace><mstyle mathcolor="red"><mtext>AddEdge</mtext></mstyle><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><msub><mi>o</mi><mi>i</mi></msub><mi mathvariant="normal">.</mi><mi>f</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"></mspace><mspace width="1em"></mspace><mrow><mi mathvariant="bold">f</mi><mi mathvariant="bold">o</mi><mi mathvariant="bold">r</mi><mi mathvariant="bold">e</mi><mi mathvariant="bold">a</mi><mi mathvariant="bold">c</mi><mi mathvariant="bold">h</mi></mrow><mtext>  </mtext><mstyle mathcolor="blue"><mi>y</mi><mo>=</mo><mi>x</mi><mi mathvariant="normal">.</mi><mi>f</mi></mstyle><mo>∈</mo><mi>S</mi><mtext>  </mtext><mrow><mi mathvariant="bold">d</mi><mi mathvariant="bold">o</mi></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"></mspace><mspace width="1em"></mspace><mspace width="1em"></mspace><mstyle mathcolor="red"><mtext>AddEdge</mtext></mstyle><mo stretchy="false">(</mo><msub><mi>o</mi><mi>i</mi></msub><mi mathvariant="normal">.</mi><mi>f</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;\bf{if}\text{ n represents a variable x }\bf{then} \\&amp;\quad{\bf{foreach}}\;o_i\in\Delta\;{\bf{do}} \\&amp;\quad\quad{\bf{foreach}}\;\textcolor{blue}{x.f=y}\in S\;{\bf{do}} \\&amp;\quad\quad\quad\text{\color{red}{AddEdge}}(y,o_i.f) \\&amp;\quad\quad{\bf{foreach}}\;\textcolor{blue}{y=x.f}\in S\;{\bf{do}} \\&amp;\quad\quad\quad\text{\color{red}{AddEdge}}(o_i.f,y) \\\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9em;vertical-align:-4.25em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.75em;"><span style="top:-6.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.25em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.75em;"><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.10903em;">if</span></span><span class="mord text"><span class="mord">&nbsp;n&nbsp;represents&nbsp;a&nbsp;variable&nbsp;x&nbsp;</span></span><span class="mord"><span class="mord"><span class="mord mathbf">then</span></span></span></span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">foreach</span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">Δ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">do</span></span></span></span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">foreach</span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="color:blue;">x</span><span class="mord" style="color:blue;">.</span><span class="mord mathnormal" style="margin-right:0.10764em;color:blue;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel" style="color:blue;">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;color:blue;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">do</span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord" style="color:red;"><span class="mord" style="color:red;">AddEdge</span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">foreach</span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;color:blue;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel" style="color:blue;">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="color:blue;">x</span><span class="mord" style="color:blue;">.</span><span class="mord mathnormal" style="margin-right:0.10764em;color:blue;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">do</span></span></span></span></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord text"><span class="mord" style="color:red;"><span class="mord" style="color:red;">AddEdge</span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.25em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>WL: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo stretchy="false">⟨</mo><mi>a</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mo stretchy="false">⟨</mo><mi>d</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[\langle a,\{o_1\}\rangle,\langle d,\{o_3\}\rangle]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[⟨</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩]</span></span></span></span></p><p>PFG:</p><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  graph RLb("b {o1}")--&gt;a("a {}")c("c {o3}")--&gt;d("d {}")a--&gt;e("o3.f {}")d--&gt;e  </pre></div><ol start="6"><li>处理 WL 中的元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⟨</mo><mi>a</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\langle a,\{o_1\}\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span></span></span></span></li></ol><p>WL: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo stretchy="false">⟨</mo><mi>d</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mstyle mathcolor="red"><mrow><mo stretchy="false">⟨</mo><msub><mi>o</mi><mn>3</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo></mrow><mo stretchy="false">]</mo></mstyle></mrow><annotation encoding="application/x-tex">[\langle d,\{o_3\}\rangle,\color{red}{\langle o_3.f,\{o_1\}\rangle}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[⟨</span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="color:red;"><span class="mopen" style="color:red;">⟨</span><span class="mord" style="color:red;"><span class="mord mathnormal" style="color:red;">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord" style="color:red;">.</span><span class="mord mathnormal" style="margin-right:0.10764em;color:red;">f</span><span class="mpunct" style="color:red;">,</span><span class="mspace" style="color:red;margin-right:0.1667em;"></span><span class="mopen" style="color:red;">{</span><span class="mord" style="color:red;"><span class="mord mathnormal" style="color:red;">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose" style="color:red;">}⟩</span></span><span class="mclose" style="color:red;">]</span></span></span></span></p><p>PFG:</p><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  graph RLb("b {o1}")--&gt;a("a {&lt;font color=red&gt;o1&lt;/font&gt;}")c("c {o3}")--&gt;d("d {}")a--&gt;e("o3.f {}")d--&gt;e  </pre></div><ol start="7"><li>处理 WL 中的元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⟨</mo><mi>d</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\langle d,\{o_3\}\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span></span></span></span>，由于指针 d 存在内存操作语句，因此需要更新 d 的 instance field 相关的指向关系</li></ol><p>WL: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo stretchy="false">⟨</mo><msub><mi>o</mi><mn>3</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mstyle mathcolor="red"><mrow><mo stretchy="false">⟨</mo><msub><mi>o</mi><mn>3</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo></mrow><mo stretchy="false">]</mo></mstyle></mrow><annotation encoding="application/x-tex">[\langle o_3.f,\{o_1\}\rangle,\color{red}{\langle o_3.f,\{o_3\}\rangle}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[⟨</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="color:red;"><span class="mopen" style="color:red;">⟨</span><span class="mord" style="color:red;"><span class="mord mathnormal" style="color:red;">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord" style="color:red;">.</span><span class="mord mathnormal" style="margin-right:0.10764em;color:red;">f</span><span class="mpunct" style="color:red;">,</span><span class="mspace" style="color:red;margin-right:0.1667em;"></span><span class="mopen" style="color:red;">{</span><span class="mord" style="color:red;"><span class="mord mathnormal" style="color:red;">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose" style="color:red;">}⟩</span></span><span class="mclose" style="color:red;">]</span></span></span></span></p><p>PFG:</p><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  graph RLb("b {o1}")--&gt;a("a {o1}")c("c {o3}")--&gt;d("d {&lt;font color=red&gt;o3&lt;/font&gt;}")a--&gt;e("o3.f {}")d--&gt;ee--&gt;f("e {}")  </pre></div><ol start="8"><li>处理 WL 中的元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⟨</mo><msub><mi>o</mi><mn>3</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\langle o_3.f,\{o_1\}\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span></span></span></span></li></ol><p>WL: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo stretchy="false">⟨</mo><msub><mi>o</mi><mn>3</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mstyle mathcolor="red"><mrow><mo stretchy="false">⟨</mo><mi>e</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo></mrow><mo stretchy="false">]</mo></mstyle></mrow><annotation encoding="application/x-tex">[\langle o_3.f,\{o_3\}\rangle,\color{red}{\langle e,\{o_1\}\rangle}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[⟨</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="color:red;"><span class="mopen" style="color:red;">⟨</span><span class="mord mathnormal" style="color:red;">e</span><span class="mpunct" style="color:red;">,</span><span class="mspace" style="color:red;margin-right:0.1667em;"></span><span class="mopen" style="color:red;">{</span><span class="mord" style="color:red;"><span class="mord mathnormal" style="color:red;">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose" style="color:red;">}⟩</span></span><span class="mclose" style="color:red;">]</span></span></span></span></p><p>PFG:</p><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  graph RLb("b {o1}")--&gt;a("a {o1}")c("c {o3}")--&gt;d("d {o3}")a--&gt;e("o3.f {&lt;font color=red&gt;o1&lt;/font&gt;}")d--&gt;ee--&gt;f("e {}")  </pre></div><ol start="9"><li>处理 WL 中的元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⟨</mo><msub><mi>o</mi><mn>3</mn></msub><mi mathvariant="normal">.</mi><mi>f</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\langle o_3.f,\{o_3\}\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span></span></span></span></li></ol><p>WL: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo stretchy="false">⟨</mo><mi>e</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mstyle mathcolor="red"><mrow><mo stretchy="false">⟨</mo><mi>e</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo></mrow><mo stretchy="false">]</mo></mstyle></mrow><annotation encoding="application/x-tex">[\langle e,\{o_1\}\rangle,\color{red}{\langle e,\{o_3\}\rangle}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[⟨</span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="color:red;"><span class="mopen" style="color:red;">⟨</span><span class="mord mathnormal" style="color:red;">e</span><span class="mpunct" style="color:red;">,</span><span class="mspace" style="color:red;margin-right:0.1667em;"></span><span class="mopen" style="color:red;">{</span><span class="mord" style="color:red;"><span class="mord mathnormal" style="color:red;">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose" style="color:red;">}⟩</span></span><span class="mclose" style="color:red;">]</span></span></span></span></p><p>PFG:</p><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  graph RLb("b {o1}")--&gt;a("a {o1}")c("c {o3}")--&gt;d("d {o3}")a--&gt;e("o3.f {o1, &lt;font color=red&gt;o3&lt;/font&gt;}")d--&gt;ee--&gt;f("e {}")  </pre></div><ol start="10"><li>最后处理 WL 中的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⟨</mo><mi>e</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mo stretchy="false">⟨</mo><mi>e</mi><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>o</mi><mn>3</mn></msub><mo stretchy="false">}</mo><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\langle e,\{o_1\}\rangle,\langle e,\{o_3\}\rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}⟩</span></span></span></span> 得到最终的 PFG</li></ol><p>WL: []</p><p>PFG:</p><div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  graph RLb("b {o1}")--&gt;a("a {o1}")c("c {o3}")--&gt;d("d {o3}")a--&gt;e("o3.f {o1, o3}")d--&gt;ee--&gt;f("e {&lt;font color=red&gt;o1, o3&lt;/font&gt;}")  </pre></div><h2 id="Pointer-Analysis-with-Method-Calls">Pointer Analysis with Method Calls</h2><p>过程间的指针分析需要 call graph，先前的 CHA 是不精确的，而利用 Pointer Analysis 的结果构建 call graph 更加的精确。因为 call graph 的构建过程和指针分析的过程是同步进行的，因此这种构建 call graph 的方式又叫做 on-the-fly call graph construction。</p><h3 id="Rule-Call-2">Rule: Call</h3> <img src="Rule-Call.png" alt="Rule-Call" style="zoom:33%;"><p>Q：为什么不添加一条 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>→</mo><msub><mi>m</mi><mrow><mi>t</mi><mi>h</mi><mi>i</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x\rightarrow m_{this}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">hi</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的 PFG 边？</p><p>A：对于下面的例子，我们考虑有这条边和没有这条边的情况：</p><p>with <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>→</mo><msub><mi>m</mi><mrow><mi>t</mi><mi>h</mi><mi>i</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x\rightarrow m_{this}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">hi</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p> <img src="with-x-this.png" alt="with-x-this" style="zoom:30%;"><p>without <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>→</mo><msub><mi>m</mi><mrow><mi>t</mi><mi>h</mi><mi>i</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x\rightarrow m_{this}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">hi</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p> <img src="without-x-this.png" alt="without-x-this" style="zoom:30%;"><h3 id="Interprocedural-Pointer-Analysis">Interprocedural Pointer Analysis</h3> <img src="Interprocedural-Pointer-Analysis.png" alt="Interprocedural-Pointer-Analysis" style="zoom:30%;"><h3 id="Algorithm-2">Algorithm</h3> <img src="Algorithm-call.png" alt="Algorithm-call" style="zoom:33%;"><p>AddReachable</p> <img src="AddReachable.png" alt="AddReachable" style="zoom:30%;"><p>ProcessCall</p> <img src="ProcessCall.png" alt="ProcessCall" style="zoom:35%;"><h3 id="Example-2">Example</h3><p>利用上述算法对如下代码进行 Interprocedural Pointer Analysis，构建  Call Graph 和 PFG。</p><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> {</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        <span class="type">A</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        <span class="type">A</span> <span class="variable">c</span> <span class="operator">=</span> b.foo(a);</span><br><span class="line">    }</span><br><span class="line">    A <span class="title function_">foo</span><span class="params">(A x)</span> { … }  </span><br><span class="line">}</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">A</span> {</span><br><span class="line">    A <span class="title function_">foo</span><span class="params">(A y)</span> {</span><br><span class="line">        <span class="type">A</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>分析结果：</p> <img src="result-IPA.png" alt="result-IPA" style="zoom:33%;">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Pointer-Analysis-Rules&quot;&gt;Pointer Analysis: Rules&lt;/h2&gt;
&lt;p&gt;首先介绍需要用到的定义：&lt;/p&gt;
&lt;p&gt;Variables: &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml
      
    
    </summary>
    
    
      <category term="Program Analysis" scheme="https://car0ta.github.io/categories/Program-Analysis/"/>
    
    
      <category term="Static Program Analysis" scheme="https://car0ta.github.io/tags/Static-Program-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Static Program Analysis (Pointer Analysis)</title>
    <link href="https://car0ta.github.io/2022/05/16/Static-Program-Analysis-Pointer-Analysis/"/>
    <id>https://car0ta.github.io/2022/05/16/Static-Program-Analysis-Pointer-Analysis/</id>
    <published>2022-05-16T08:07:24.000Z</published>
    <updated>2022-05-16T16:48:50.250Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Motivation-4">Motivation</h2> <img src="CHA.png" alt="CHA" style="zoom:30%;"><p>CHA 只关注类的继承结构，对于上述代码 CHA 得到3个 call targets，其中有两个是误报（false positives），从而常量传播分析的结果是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mtext>NAC</mtext></mrow><annotation encoding="application/x-tex">x=\textrm{NAC}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord textrm">NAC</span></span></span></span></span>；</p> <img src="Pointer-Analysis.png" alt="Pointer-Analysis" style="zoom:30%;"><p>而指针分析（Pointer Analysis）基于指向关系（point-to relation），我们能够知道 n 实际指向的就是 new One() 得到的对象，从而常量传播分析的结果就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。</p><p>对比 CHA 和 Pointer Analysis 可以发现指针分析的结果更加精确！</p><h2 id="Introduction-to-Pointer-Analysis">Introduction to Pointer Analysis</h2><ul><li>指针分析计算一个指针实际指向的内存地址；</li><li>对于面向对象语言（object-oriented program）如 Java，指针分析计算一个指针（variable or field）实际指向的对象；</li><li>指针分析可以视为一个 may analysis，因此是 over-approximation。</li></ul><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p> <img src="Pointer-Analysis-Example.png" alt="Pointer-Analysis-Example" style="zoom:30%;"><p>指针分析和别名分析（Alias Analysis）相似但有区别：</p><ul><li><p>指针分析：分析一个指针实际指向的对象</p></li><li><p>别名分析：分析两个或者多个指针是否指向同一个对象</p> <img src="Alias-Analysis-Example.png" alt="Alias-Analysis-Example" style="zoom:30%;"></li></ul><p>别名信息能够通过指向关系进行推导得出。</p><p>指针分析的应用：</p><ul><li>得到基础信息，如 call graph，aliases</li><li>编译器优化</li><li>Bug 检测，如空指针检测</li><li>安全分析，如信息流分析</li></ul><h2 id="Key-Factors-of-Pointer-Analysis">Key Factors of Pointer Analysis</h2><p>影响指针分析的四个要素：</p><table><thead><tr><th>Factor</th><th>Problem</th><th>Choice</th></tr></thead><tbody><tr><td>Heap abstraction</td><td>How to model heap memory?</td><td>- Allocation-site<br>- Storeless</td></tr><tr><td>Context sensitivity</td><td>How to model calling contexts?</td><td>- Context-sensitive<br>- Context-insensitive</td></tr><tr><td>Flow sensitivity</td><td>How to model control flow?</td><td>- Flow-sensitive<br>- Flow-insensitive</td></tr><tr><td>Analysis scope</td><td>Which parts of program should be analysed?</td><td>- Whole-program<br>- Demand-driven</td></tr></tbody></table><h3 id="Heap-Abstraction">Heap Abstraction</h3><p>在动态执行中，由于存在递归和循环，堆上的对象数量可能是无限的；为了确保指针分析能够终止，堆抽象技术将动态运行时无限数量的对象抽象为静态分析中有限数量的对象。</p> <img src="Heap-Abstraction.png" alt="Heap-Abstraction" style="zoom:30%;"><p>堆抽象技术主要有两大流派：Store-based model 和 Storeless model</p> <img src="Heap-abstraction-categories.png" alt="Heap-abstraction-categories" style="zoom:40%;"><p>这里介绍最为常用的堆抽象技术 Allocation-Site Abstraction：</p><ul><li>根据 objects 的创建点（allocation site）对 objects 进行建模</li><li>为每个创建点创建一个 abstract object，它将代表动态运行时实际创建的所有对象</li></ul><img src="allocation-site-abstraction.png" alt="allocation-site-abstraction" style="zoom:30%;"><h3 id="Context-Sensitivity">Context Sensitivity</h3><p>在指针分析过程中针对调用上下文（calling contexts）的建模分为两种：</p><ul><li><p>Context-sensitive</p><p>区分一个方法不同的调用上下文，针对每个上下文分析一次。</p> <img src="context-sensitive.png" alt="context-sensitive" style="zoom:33%;"></li><li><p>Context-insensitive</p><p>合并一个方法的所有调用上下文，对每个方法只分析一次，可能会损失精度。</p> <img src="context-insensitive.png" alt="context-insensitive" style="zoom:33%;"></li></ul><h3 id="Flow-Sensitivity">Flow Sensitivity</h3><p>指针分析中控制流处理分为两种：</p><ul><li><p>Flow-sensitive</p><p>考虑程序中语句的执行顺序，对每一个程序点维护一个指向关系的 map。</p></li><li><p>Flow-insensitive</p><p>忽略程序中语句的执行顺序，对整个程序只维护一个指向关系的 map。</p></li></ul> <img src="Flow-sensitivity.png" alt="Flow-sensitivity" style="zoom:33%;"><p>如上图，流敏感（蓝色）对每个程序点都有一个指向关系的 map，而流不敏感（橘色）只保存全局一个指向关系的 map，因此有可能误报。</p><p>之前课程的数据流分析都是流敏感的，而在 Java 这类 OOP 语言的指针分析中，Flow-sensitive 未必就比 Flow-insensitive 要更好，因此接下来主要介绍 Flow-sensitive 的指针分析（更常用）。</p><h3 id="Analysis-Scope">Analysis Scope</h3><p>指针分析可以分析全程序的所有指针信息，也可以分析部分代码的指针信息：</p><ul><li><p>Whole-program</p><p>分析程序中所有指针的指向关系，分析结果可供所有应用使用。</p></li><li><p>Demand-driven</p><ul><li>根据需求只分析程序中部分指针（special site of interest）的指向关系，分析结果只能满足特定的应用。</li><li>需要先找到 special site of interest，然后进行分析，因此时间复杂度可能更高。</li></ul></li></ul> <img src="Analyze-scope.png" alt="Analyze-scope" style="zoom:33%;"><h2 id="Concerned-Statements">Concerned Statements</h2><p>现代语言中有许多种类的语句（statement）：</p><ul><li>if-else</li><li>switch-case</li><li>for/while/do-while</li><li>break/continue</li><li>…</li></ul><p>但上述语句都不会影响指针的指向，因此在指针分析中通常会忽略，而只是关注那些影响指针指向的语句（pointer-affecting statements）。</p><h3 id="Pointers-in-Java">Pointers in Java</h3><ul><li>Local variable: x</li><li>Static field (global variable): C.f<ul><li>可视为 Local variable 处理</li></ul></li><li>Instance field: x.f</li><li>Array element: array[i]<ul><li>静态分析无法计算数组每个下标具体的指向关系（如数组下标为变量时），通常做法是将其建模为 single field，记作 arr，它指向所有存储在数组中的值。</li><li>可视为 Instance field 处理</li></ul></li></ul> <img src="pointer-in-java.png" alt="pointer-in-java" style="zoom:33%;"><h3 id="Pointer-Affecting-Statements">Pointer-Affecting Statements</h3><ul><li>New: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>n</mi><mi>e</mi><mi>w</mi><mtext>  </mtext><mi>T</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x=new\;T()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span></li><li>Assign: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x=y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></li><li>Store: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi mathvariant="normal">.</mi><mi>f</mi><mo>=</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x.f=y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></li><li>Load: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>x</mi><mi mathvariant="normal">.</mi><mi>f</mi></mrow><annotation encoding="application/x-tex">y=x.f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></li><li>Call: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>=</mo><mi>x</mi><mi mathvariant="normal">.</mi><mi>k</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mo>…</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r=x.k(a,\ldots)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mclose">)</span></span></span></span></li></ul><p>对于复杂的内存操作语句（Store/Load）通常会引入临时变量将其转换为三地址码进行分析。</p> <img src="convert-to-3AC.png" alt="convert-to-3AC" style="zoom:33%;"><p>对于方法调用（Call）语句，存在三种调用类型：</p><ul><li>Static call: C.foo()</li><li>Special call: super.foo(), x.&lt;init&gt;(), this.privateFoo()</li><li>Virtual call: x.foo()</li></ul><p>其中最复杂的是 virtual call，因为存在多态所以可能会有多个被调方法，而 static call 和 special call 只会有一个确定的被调方法。因此接下来主要关注 virtual call。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Motivation-4&quot;&gt;Motivation&lt;/h2&gt;
 &lt;img src=&quot;CHA.png&quot; alt=&quot;CHA&quot; style=&quot;zoom:30%;&quot;&gt;
&lt;p&gt;CHA 只关注类的继承结构，对于上述代码 CHA 得到3个 call targets，其中有两个是误
      
    
    </summary>
    
    
      <category term="Program Analysis" scheme="https://car0ta.github.io/categories/Program-Analysis/"/>
    
    
      <category term="Static Program Analysis" scheme="https://car0ta.github.io/tags/Static-Program-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Static Program Analysis (Interprocedural Analysis)</title>
    <link href="https://car0ta.github.io/2022/05/11/Static-Program-Analysis-Interprocedural-Analysis/"/>
    <id>https://car0ta.github.io/2022/05/11/Static-Program-Analysis-Interprocedural-Analysis/</id>
    <published>2022-05-11T09:15:14.000Z</published>
    <updated>2022-05-18T14:54:18.151Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Motivation-2">Motivation</h2><p>之前学习的各类分析问题都是过程内分析（Intraprocedural Analysis），不涉及到过程间的方法调用。在过程间分析中如果遇到方法调用通常是做最保守的假设，因此会损失精度（大量误报）。</p><p>考虑下图中的常量传播分析，采用过程内分析得到的是 x=NAC, y=NAC, n=NAC，而实际上 x=42, y=43, n=10。</p> <img src="Motivation.png" alt="Motivation" style="zoom:30%;"><p>为了提高精度，我们需要引入过程间分析（Interprocedural Analysis）：通过过程间控制流的边（Interprocedural Control-Flow edges, i.e., call and return edges）传递数据流信息。</p><p>为了实现过程间分析，我们需要构建调用图（call graph）。</p><h2 id="Call-Graph-Construction-CHA">Call Graph Construction (CHA)</h2><h3 id="Call-Graph">Call Graph</h3><p>调用图（call graph）代表程序中方法之间的调用关系。换句话说，call graph 是程序中调用边（call edge）的集合，调用边从调用点（call-site）出发到被调函数（callee）。</p> <img src="call-graph-example.png" alt="call-graph-example" style="zoom:30%;"><p>call graph 的应用：</p><ul><li>过程间分析的基础</li><li>程序优化、理解、调试、测试等</li></ul><p>调用图构造算法：</p><ul><li>Class hierarchy analysis (CHA)</li><li>Rapid type analysis (RTA)</li><li>Variable type analysis (VTA)</li><li>Pointer analysis (k-CFA)</li></ul><p>从上往下分析越来越精确，但效率越来越低。</p><h3 id="Method-Calls-in-Java">Method Calls in Java</h3><table><thead><tr><th></th><th>static call</th><th>special call</th><th>virtual call</th></tr></thead><tbody><tr><td>指令</td><td>invokestatic</td><td>invokespecial</td><td>invokeinterface<br>invokevirtual</td></tr><tr><td>是否需要实例化对象</td><td>N</td><td>Y</td><td>Y</td></tr><tr><td>被调方法</td><td>静态方法</td><td>构造函数<br>私有实例方法<br>父类实例方法</td><td>其他实例方法</td></tr><tr><td>被调方法个数</td><td>1</td><td>1</td><td>&gt;=1 (多态)</td></tr><tr><td>被调方法确定时机</td><td>编译时</td><td>编译时</td><td>运行时</td></tr></tbody></table><p>构造调用图的关键在于如何处理 virtual call？</p><h3 id="Method-Dispatch-of-Virtual-Calls">Method Dispatch of Virtual Calls</h3><p>在运行时，一个虚调用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>o</mi><mn>1</mn></msup><mi mathvariant="normal">.</mi><mi>f</mi><mi>o</mi><mi>o</mi><mo stretchy="false">(</mo><mo>…</mo><mtext> </mtext><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">o^1.foo(\dots)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">oo</span><span class="mopen">(</span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 根据两点来确定具体调用哪个方法：</p><ol><li>调用者实例对象类型（即 o 的类型），记为 c</li><li>调用点的函数签名，记为 m</li></ol><p>方法签名能够唯一标识一个方法，它包括类名、方法名和方法描述符，方法描述符又包括参数类型和返回值类型</p> <img src="method-signature.png" alt="method-signature" style="zoom:30%;"><p>Java 中 Dispatch 机制决定运行时具体调用哪个方法，我们定义函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>i</mi><mi>s</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Dispatch(c, m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>D</mi><mi>i</mi><mi>s</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>m</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if&nbsp;c&nbsp;contains&nbsp;non-abstract&nbsp;method&nbsp;</mtext><mstyle scriptlevel="0" displaystyle="false"><msup><mi>m</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle><mtext>&nbsp;that</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>has&nbsp;the&nbsp;same&nbsp;name&nbsp;and&nbsp;descriptor&nbsp;as&nbsp;m</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>D</mi><mi>i</mi><mi>s</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">(</mo><msup><mi>c</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mrow></mstyle></mtd></mtr></mtable></mrow><mspace linebreak="newline"></mspace><mrow><mtext>where&nbsp;</mtext><mstyle scriptlevel="0" displaystyle="false"><msup><mi>c</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle><mtext>&nbsp;is&nbsp;superclass&nbsp;of&nbsp;</mtext><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mrow></mrow><annotation encoding="application/x-tex">Dispatch(c,m)=\begin{cases}m'&amp;\text{if c contains non-abstract method $m'$ that}\\&amp;\text{has the same name and descriptor as m} \\Dispatch(c',m) &amp; otherwise\end{cases}\\\text{where $c'$ is superclass of $c$}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if&nbsp;c&nbsp;contains&nbsp;non-abstract&nbsp;method&nbsp;</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">&nbsp;that</span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">has&nbsp;the&nbsp;same&nbsp;name&nbsp;and&nbsp;descriptor&nbsp;as&nbsp;m</span></span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">se</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord">where&nbsp;</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">&nbsp;is&nbsp;superclass&nbsp;of&nbsp;</span><span class="mord mathnormal">c</span></span></span></span></span></span></p><p>如果在类 c 当中存在一个和 m 的方法名和描述符都相同的非抽象方法 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>m</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">m'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，那么调用该方法，否则递归父类查找。</p><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p> <img src="Dispatch-example.png" alt="Dispatch-example" style="zoom:30%;"><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>D</mi><mi>i</mi><mi>s</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">(</mo><mi>B</mi><mo separator="true">,</mo><mi>A</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>o</mi><mi>o</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>A</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>o</mi><mi>o</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>D</mi><mi>i</mi><mi>s</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>c</mi><mi>h</mi><mo stretchy="false">(</mo><mi>C</mi><mo separator="true">,</mo><mi>A</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>o</mi><mi>o</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>C</mi><mi mathvariant="normal">.</mi><mi>f</mi><mi>o</mi><mi>o</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Dispatch(B, A.foo())=A.foo()\\Dispatch(C, A.foo())=C.foo()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">oo</span><span class="mopen">(</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">oo</span><span class="mopen">(</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">oo</span><span class="mopen">(</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">oo</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span></span></p><h3 id="Class-Hierarchy-Analysis-CHA">Class Hierarchy Analysis (CHA)</h3><p>类继承分析（CHA）通过查找类的继承结构来确定具体的被调方法：</p><ul><li><p>需要整个程序中类的继承信息（继承结构）</p></li><li><p>根据调用点的接收变量（receiver variable）的声明类型来解析 virtual call（下面代码中的 a 就是接收变量）</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>A</mi><mtext>  </mtext><mi>a</mi><mo>=</mo><mo>…</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mstyle mathcolor="red"><mi>a</mi></mstyle><mi mathvariant="normal">.</mi><mi>f</mi><mi>o</mi><mi>o</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;A\;a=\ldots; \\&amp;\textcolor{red}{a}.foo();\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">;</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="color:red;">a</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">oo</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">;</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>假设接收变量 a 可以指向 A 类及 A 的所有子类的对象</p></li></ul><h3 id="Call-Resolution-of-CHA">Call Resolution of CHA</h3><p>我们定义函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>e</mi><mi>s</mi><mi>o</mi><mi>l</mi><mi>v</mi><mi>e</mi><mo stretchy="false">(</mo><mi>c</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Resolve(cs)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">eso</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal">cs</span><span class="mclose">)</span></span></span></span> 来分析调用点 cs 处可能的目标方法，具体算法如下：</p> <img src="Resolve-algorithm.png" alt="Resolve-algorithm" style="zoom:30%;"><ul><li><p>如果 cs 是 static call，直接将该方法签名加入集合 T</p>  <img src="static-call.png" alt="static-call" style="zoom:30%;"></li><li><p>如果 cs 是 special call，取方法 m 的类 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>c</mi><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">c^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span> 并调用 Dispatch 函数，将结果加入集合 T</p><ul><li><p>构造函数（Constructor）</p>  <img src="special-call-constructor.png" alt="special-call-constructor" style="zoom:30%;"></li><li><p>私有实例方法（private instance method）</p></li><li><p>父类实例方法（Superclass instance method）</p>  <img src="special-call-superclass.png" alt="special-call-superclass" style="zoom:30%;"></li></ul></li><li><p>如果 cs 是 virtual call，取 cs 处接收变量的声明类型 c，遍历 c 及 c 的所有子类并调用 Dispatch 函数，将结果加入集合 T</p> <img src="virutal-call.png" alt="virutal-call" style="zoom:33%;"></li></ul><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p> <img src="CHA-example.png" alt="CHA-example" style="zoom:30%;"><p>CHA 只考虑调用点处接收变量的声明类型去分析目标方法，即使实际 new 了一个 B 类，依然会产生两个误报 C.foo() 和 D.foo()</p><p>CHA 的特征：</p><ul><li><p>Advantage: fast</p><p>仅考虑 call-site 处接收变量的声明类型及其类的继承结构，而忽略了数据流和控制流信息。</p></li><li><p>Disadvantage: imprecise</p><p>容易产生大量误报</p></li></ul><p>CHA 的应用：IDE（如 Intellij IDEA）</p> <img src="CHA-in-IDE.png" alt="CHA-in-IDE" style="zoom:30%;"><h3 id="Call-Graph-Construction">Call Graph Construction</h3><p>通过 CHA 构建整个程序的 call graph：</p><ul><li>从入口方法开始（main method）</li><li>对于每一个可达方法 m，通过 CHA 算法分析一个调用点的目标方法</li><li>重复以上步骤直到没有可达的新方法</li></ul><p>具体算法：</p> <img src="call-graph-algorithm.png" alt="call-graph-algorithm" style="zoom:30%;"><ul><li>WL 即 WorkList，记录需要处理的 methods</li><li>CG 即 call graph，是 call edges 的集合</li><li>RM 即 Reachable Method，记录已经处理的 methods</li></ul><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p> <img src="call-graph-construction.png" alt="call-graph-construction" style="zoom:30%;"><h2 id="Interprocedural-Control-Flow-Graph">Interprocedural Control-Flow Graph</h2><ul><li><p>CFG 表示单个 method 控制流关系</p></li><li><p>ICFG 表示整个程序的控制流关系（借助 ICFG 我们可以实现过程间分析）</p></li><li><p>一个程序的 ICFG 包括程序中所有方法的 CFG，以及两种额外边：</p><ul><li><p>Call edges：从调用点（call-sites）出发到被调函数（callees）的 entry 节点</p></li><li><p>return edges：从被调函数的返回语句（return statements）到调用点的下一条语句（return sites）</p>  <img src="call&amp;return-site.png" alt="call&amp;return-site" style="zoom:30%;"></li></ul></li></ul><p>我们可以理解为 ICFG = CFGs + call &amp; return edges，而如何在 CFG 的基础上添加 call edges 和 return edges 就需要用到上文中构建的 call graph。</p><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p> <img src="ICFG-example.png" alt="ICFG-example" style="zoom:30%;"><h2 id="Interprocedural-Data-Flow-Analysis">Interprocedural Data-Flow Analysis</h2><p>过程间数据流分析即在 ICFG 的基础上对程序进行数据流分析，与过程内数据流分析对比如下：</p><table><thead><tr><th></th><th><font color="green">Intra</font>procedural</th><th><font color="green">Inter</font>procedural</th></tr></thead><tbody><tr><td>Program representation</td><td>CFG</td><td>ICFG = CFGs + <font color="red">call &amp; return edges</font></td></tr><tr><td>Transfer functions</td><td>Node transfer</td><td>Node transfer + <font color="red">edge transfer</font></td></tr></tbody></table><p>Edge transfer 包括：</p><ul><li><p>call edge transfer：从 call node 到 callee 的 entry node 传递数据流（传参数）</p></li><li><p>return edge transfer：从return node 到 return site 传递数据流（传返回值）</p></li></ul><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>：Interprocedural Constant Propagation（过程间常量传播分析）</p><ul><li><p>Call edge transfer: pass argument values</p></li><li><p>Return edge transfer: pass return values</p></li><li><p>Node transfer: 和 Intraprocedural Constant Propagation 相似，<strong>但对于每一个 call node，需要 kill 掉 LHS(Left Hand Side) variable</strong></p>  <img src="Node-transfer.png" alt="Node-transfer" style="zoom:40%;"></li></ul><p>分析结果：</p> <img src="Interprocedural-Constant-Propagation.png" alt="Interprocedural-Constant-Propagation" style="zoom:30%;"><p>Q：为什么要保留从 call site 到 return site 的边（call-to-return edge）？</p><p>A：call-to-return edge 能够在方法内传递本地数据流，如果没有这条边则需要当前方法内的上下文变量传递到被调函数，这是非常低效的！</p> <img src="call-to-return-edge.png" alt="call-to-return-edge" style="zoom:33%;"><p>假如是 Intraprocedural Constant Propagation（过程内常量传播分析），其分析结果为：</p> <img src="Intraprocedural-Constant-Propagation.png" alt="Intraprocedural-Constant-Propagation" style="zoom:30%;"><p>显然过程间分析要比过程内分析更加精确！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Motivation-2&quot;&gt;Motivation&lt;/h2&gt;
&lt;p&gt;之前学习的各类分析问题都是过程内分析（Intraprocedural Analysis），不涉及到过程间的方法调用。在过程间分析中如果遇到方法调用通常是做最保守的假设，因此会损失精度（大量误报）。&lt;
      
    
    </summary>
    
    
      <category term="Program Analysis" scheme="https://car0ta.github.io/categories/Program-Analysis/"/>
    
    
      <category term="Static Program Analysis" scheme="https://car0ta.github.io/tags/Static-Program-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Static Program Analysis (Data Flow Analysis-Foundations)</title>
    <link href="https://car0ta.github.io/2022/05/06/Static-Program-Analysis-Data-Flow-Analysis-Foundations/"/>
    <id>https://car0ta.github.io/2022/05/06/Static-Program-Analysis-Data-Flow-Analysis-Foundations/</id>
    <published>2022-05-06T07:15:23.000Z</published>
    <updated>2022-05-14T15:26:43.872Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Iterative-Algorithm">Iterative Algorithm</h2><ul><li><p>对于一个含有 k 个节点的 CFG（program），迭代算法会在每次迭代时更新每个节点 n 的 OUT[n]。</p></li><li><p>假设数据流分析的值域为 V，那么我们可以定义一个 k 元组：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><msub><mi>n</mi><mn>1</mn></msub><mo stretchy="false">]</mo><mo separator="true">,</mo><mtext> </mtext><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><msub><mi>n</mi><mn>2</mn></msub><mo stretchy="false">]</mo><mo separator="true">,</mo><mtext> </mtext><mo>…</mo><mo separator="true">,</mo><mtext> </mtext><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><msub><mi>n</mi><mi>k</mi></msub><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo>∈</mo><mo stretchy="false">(</mo><msub><mi>V</mi><mn>1</mn></msub><mo>×</mo><msub><mi>V</mi><mn>2</mn></msub><mo>×</mo><mo>…</mo><mo>×</mo><msub><mi>V</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msup><mi>V</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">(OUT[{n}_{1}],\, OUT[{n}_{2}],\, \ldots,\, OUT[{n}_{k}])\in({V}_{1}\times{V}_{2}\times\ldots\times{V}_{k})={V}^{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">])</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8991em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>每个 k 元组代表每次迭代后的值。</p></li><li><p>每次迭代通过 transfer functions 和 control-flow handling 来更新 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>V</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">{V}^{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span>，这个过程可以抽象为一个函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>:</mo><msup><mi>V</mi><mi>k</mi></msup><mo>→</mo><msup><mi>V</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">F: {V}^{k}\rightarrow{V}^{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span>。</p></li><li><p>当迭代算法输出的 k 元组和上一次相同时，迭代结束，算法停止；即当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X=F(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span> 时，X是函数 F 的一个不动点，我们说此时迭代算法达到不动点，算法停止。<br><img src="iterative-algorithm.png" alt="iterative-algorithm" style="zoom:30%;"></p></li></ul><p>迭代算法为数据流分析提供一个 solution，此时会有以下几个问题：</p><ul><li>算法是否总会到达不动点，或者说是否总有 solution？</li><li>只有一个不动点（solution）吗？这个 solution 是最好的（最精确）吗？</li><li>什么时候算法会到达不动点？</li></ul><h2 id="Partial-Order">Partial Order</h2><p>我们定义偏序集（poset）为一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mtext> </mtext><mo>⊑</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(P,\, \sqsubseteq)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span></span></span></span> 对，其中 P 为一个偏序集合，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊑</mo></mrow><annotation encoding="application/x-tex">\sqsubseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">⊑</span></span></span></span> 为 P 上的偏序关系。它满足以下性质：</p><p>（1）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>x</mi><mo>∈</mo><mi>P</mi><mo separator="true">,</mo><mtext> </mtext><mi>x</mi><mo>⊑</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\forall x\in P,\,x\sqsubseteq x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> （Reflexivity，自反性）</p><p>（2）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>y</mi><mo>∈</mo><mi>P</mi><mo separator="true">,</mo><mtext> </mtext><mi>x</mi><mo>⊑</mo><mi>y</mi><mtext> </mtext><mo>∧</mo><mtext> </mtext><mi>y</mi><mo>⊑</mo><mi>x</mi><mo>⇒</mo><mi>x</mi><mo>=</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">\forall x,\,y\in P,\,x\sqsubseteq y\,\wedge\,y\sqsubseteq x\Rightarrow x=y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">∀</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.75em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> （Antisymmetry，反对称性）</p><p>（3）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>y</mi><mo separator="true">,</mo><mtext> </mtext><mi>z</mi><mo>∈</mo><mi>P</mi><mo separator="true">,</mo><mtext> </mtext><mi>x</mi><mo>⊑</mo><mi>y</mi><mtext> </mtext><mo>∧</mo><mtext> </mtext><mi>y</mi><mo>⊑</mo><mi>z</mi><mo>⇒</mo><mi>x</mi><mo>⊑</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">\forall x,\,y,\,z\in P,\,x\sqsubseteq y\,\wedge\,y\sqsubseteq z\Rightarrow x\sqsubseteq z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">∀</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.75em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span> （Transitivity，传递性）</p><p>偏序（partial）关系不保证集合 P 中的任意两个元素都可以进行比较，全序关系能保证任意两个元素都可以比较。例如下图中的 substring 集合满足偏序关系，但是 pin 和 sin 字符串并不满足子串关系。</p><img src="substring-partial.png" alt="substring-partial" style="zoom:30%;"><h2 id="Upper-and-Lower-Bounds">Upper and Lower Bounds</h2><p>给定一个偏序集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mtext> </mtext><mo>⊑</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(P,\, \sqsubseteq)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span></span></span></span> 和它的一个子集 S，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>⊆</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">S\subseteq P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>：</p><p>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∃</mi><mi>u</mi><mo>∈</mo><mi>P</mi><mo separator="true">,</mo><mtext> </mtext><mi mathvariant="normal">∀</mi><mi>x</mi><mo>∈</mo><mi>S</mi><mo separator="true">,</mo><mtext> </mtext><mi>x</mi><mo>⊑</mo><mi>u</mi></mrow><annotation encoding="application/x-tex">\exists u\in P,\,\forall x\in S,\,x\sqsubseteq u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord">∃</span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∀</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span>，那么 u 是 S 的一个上界（upper bound）；</p><p>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∃</mi><mi>l</mi><mo>∈</mo><mi>P</mi><mo separator="true">,</mo><mtext> </mtext><mi mathvariant="normal">∀</mi><mi>x</mi><mo>∈</mo><mi>S</mi><mo separator="true">,</mo><mtext> </mtext><mi>l</mi><mo>⊑</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\exists l\in P,\,\forall x\in S,\,l\sqsubseteq x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord">∃</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∀</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>，那么 l 是 S 的一个下界（lower bound）。</p><img src="upper-and-lower-bounds.png" alt="upper-and-lower-bounds" style="zoom:30%;"><p>将偏序集 S 的最小上界（least upper bound, lub or join）记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊔</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">\sqcup S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">⊔</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>，它对于偏序集 S 中的每个上界 u 都有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊔</mo><mi>S</mi><mo>⊑</mo><mi>u</mi></mrow><annotation encoding="application/x-tex">\sqcup S \sqsubseteq u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord">⊔</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span>；</p><p>将偏序集 S 的最大下界（greater lower bound, glb or meet）记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊓</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">\sqcap S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">⊓</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>，它对于偏序集 S 中的每个下界 l 都有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo>⊑</mo><mo>⊓</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">l\sqsubseteq \sqcap S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">⊓</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>。</p><img src="lub-glb.png" alt="lub-glb" style="zoom:30%;"><p>特别地，如果偏序集 S 只有两个元素 a 和 b（S={a, b}），那么：</p><p>最小上界 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊔</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">\sqcup S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">⊔</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 可以记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>⊔</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a\sqcup b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>（the join of a and b）；</p><p>最大下界 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊓</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">\sqcap S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">⊓</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 可以记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>⊓</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a\sqcap b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊓</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>（the meet of a and b）。</p><p>一些性质：</p><ul><li>不是每个偏序集都有 lub 或者 glb</li><li>如果一个偏序集有 lub 或者 glb，那么它一定是唯一的</li></ul><h2 id="Lattice-Semilattice-Complete-and-Product-Lattice">Lattice, Semilattice, Complete and Product Lattice</h2><h3 id="Lattice-格">Lattice (格)</h3><blockquote><p>Given a poset <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mtext> </mtext><mo>⊑</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(P,\,\sqsubseteq)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>a</mi><mo separator="true">,</mo><mtext> </mtext><mi>b</mi><mo>∈</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">\forall a,\,b\in P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">∀</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>, if <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>⊔</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a\sqcup b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>⊓</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a\sqcap b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊓</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> exist, then <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mtext> </mtext><mo>⊑</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(P,\,\sqsubseteq)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span></span></span></span> is called a lattice.</p></blockquote><p>如果一个偏序集中的每两个元素都有最小上界和最大下界，那么这个偏序集是一个格。</p><h3 id="Semilattice-半格">Semilattice (半格)</h3><blockquote><p>Given a poset <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mtext> </mtext><mo>⊑</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(P,\,\sqsubseteq)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>a</mi><mo separator="true">,</mo><mtext> </mtext><mi>b</mi><mo>∈</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">\forall a,\,b\in P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">∀</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>,<br>if only <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>⊔</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a\sqcup b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> exists, then <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mtext> </mtext><mo>⊑</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(P,\,\sqsubseteq)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span></span></span></span> is called a join  semilattice,<br>if only <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>⊓</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a\sqcap b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊓</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> exists, then <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mtext> </mtext><mo>⊑</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(P,\,\sqsubseteq)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span></span></span></span> is called a meet  semilattice.</p></blockquote><h3 id="Complete-Lattice-全格">Complete Lattice (全格)</h3><blockquote><p>Given a poset <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mtext> </mtext><mo>⊑</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(P,\,\sqsubseteq)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span></span></span></span>, for arbitrary subset S of P, if <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊔</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">\sqcup S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">⊔</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊓</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">\sqcap S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">⊓</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> exist, then <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mtext> </mtext><mo>⊑</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(P,\,\sqsubseteq)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span></span></span></span> is called a complete lattice.</p></blockquote><p>如果一个偏序集的所有子集都有最小上界和最大下界，那么这个偏序集是一个全格。</p><p>每一个全格 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mtext> </mtext><mo>⊑</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(P,\,\sqsubseteq)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span></span></span></span> 都有一个最大元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">⊤</mi><mo>=</mo><mo>⊔</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">\top =\sqcup P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">⊤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">⊔</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>（称为 top）和一个最小元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">⊥</mi><mo>=</mo><mo>⊓</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">\bot =\sqcap P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">⊥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">⊓</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>（称为 bottom）。</p><p>如果一个格是有穷的（元素有限的，finite lattice），那么它一定是全格；但 complete lattice 不一定是 finite lattice。</p><p>数据流分析更加关注 complete lattice！</p><h3 id="Product-Lattice-格积">Product Lattice (格积)</h3><blockquote><p>Given lattices <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>P</mi><mn>1</mn></msub><mo separator="true">,</mo><mtext> </mtext><msub><mo lspace="0em" rspace="0em">⊑</mo><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>L</mi><mn>2</mn></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>P</mi><mn>2</mn></msub><mo separator="true">,</mo><mtext> </mtext><msub><mo lspace="0em" rspace="0em">⊑</mo><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mo>…</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>L</mi><mi>n</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>P</mi><mi>n</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mo lspace="0em" rspace="0em">⊑</mo><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">{L}_{1}=({P}_{1},\,{\sqsubseteq}_{1}),\,{L}_{2}=({P}_{2},\,{\sqsubseteq}_{2}),\,\dots,\,{L}_{n}=({P}_{n},\,{\sqsubseteq}_{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mrel">⊑</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mrel">⊑</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mrel">⊑</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>, if for all i, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mo lspace="0em" rspace="0em">⊑</mo><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">({P}_{i},\,{\sqsubseteq}_{i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mrel">⊑</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> has <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo>⊔</mo><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\sqcup_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mbin">⊔</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> (leaster upper bound) and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo>⊓</mo><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\sqcap_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mbin">⊓</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> (greatest lower bound), then we can have a <strong>product lattice</strong> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>L</mi><mi>n</mi></msup><mo>=</mo><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mo>⊑</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L^n=(P, \sqsubseteq)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span></span></span></span> that is defined by:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo>=</mo><msub><mi>P</mi><mn>1</mn></msub><mo>×</mo><mo>…</mo><mo>×</mo><msub><mi>P</mi><mi>n</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><mtext> </mtext><mo>…</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>⊑</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><mtext> </mtext><mo>…</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>y</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>⇔</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>⊑</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>∧</mo><mo>…</mo><mo>∧</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo>⊑</mo><msub><mi>y</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><mtext> </mtext><mo>…</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>⊔</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><mtext> </mtext><mo>…</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>y</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><msub><mo>⊔</mo><mn>1</mn></msub><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><mtext> </mtext><mo>…</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>x</mi><mi>n</mi></msub><msub><mo>⊔</mo><mi>n</mi></msub><msub><mi>y</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><mtext> </mtext><mo>…</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>⊓</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><mtext> </mtext><mo>…</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>y</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><msub><mo>⊓</mo><mn>1</mn></msub><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><mtext> </mtext><mo>…</mo><mo separator="true">,</mo><mtext> </mtext><msub><mi>x</mi><mi>n</mi></msub><msub><mo>⊓</mo><mi>n</mi></msub><msub><mi>y</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}&amp;P=P_1\times\ldots\times P_n\\&amp;(x_1,\,\ldots,\,x_n)\sqsubseteq(y_1,\,\ldots,\,y_n)\Leftrightarrow(x_1\sqsubseteq y_1)\wedge\ldots\wedge(x_n\sqsubseteq y_n)\\&amp;(x_1,\,\ldots,\,x_n)\sqcup(y_1,\,\ldots,\,y_n)=(x_1\sqcup_1 y_1,\,\ldots,\,x_n\sqcup_n y_n)\\&amp;(x_1,\,\ldots,\,x_n)\sqcap(y_1,\,\ldots,\,y_n)=(x_1\sqcap_1 y_1,\,\ldots,\,x_n\sqcap_n y_n)\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6em;vertical-align:-2.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-0.75em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mbin">⊔</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mbin">⊔</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊓</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mbin">⊓</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mbin">⊓</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></blockquote><ul><li><p>product lattice 也是一个 lattice</p></li><li><p>如果一个 product lattice L 是全格的积，那么 L 也是全格</p></li></ul><h2 id="Data-Flow-Analysis-Framework-via-Lattice">Data Flow Analysis Framework via Lattice</h2><p>一个数据流分析框架 (D, L, F) 由以下元素组成：</p><ul><li>D: a <strong>direction</strong> of data flow，forward or backward</li><li>L: a <strong>lattice</strong> including domain of the values V and a meet <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊓</mo></mrow><annotation encoding="application/x-tex">\sqcap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">⊓</span></span></span></span> or join <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>q</mi><mi>c</mi><mi>u</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">sqcup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">c</span><span class="mord mathnormal">u</span><span class="mord mathnormal">p</span></span></span></span> operator</li><li>F: a family of transfer <strong>functions</strong> from V to V</li></ul><p>数据流分析可以视为在 lattice 的值上迭代地应用 转换函数和 meet/join 操作符。</p><h2 id="Monotonicity-and-Fixed-Point-Theorem">Monotonicity and Fixed Point Theorem</h2><h3 id="Monotonicity-单调性">Monotonicity (单调性)</h3><blockquote><p>A function <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo>:</mo><mtext> </mtext><mi>L</mi><mo>→</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">f:\,L\to L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span> (L is a lattice) is monotonic if <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>y</mi><mo>∈</mo><mi>L</mi><mo separator="true">,</mo><mtext> </mtext><mi>x</mi><mo>⊑</mo><mi>y</mi><mo>⇒</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>⊑</mo><mi>f</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\forall x,\,y\in L,\,x\sqsubseteq y \Rightarrow f(x)\sqsubseteq f(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">∀</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></p></blockquote><h3 id="Fixed-Point-Theorem-不动点定理">Fixed Point Theorem (不动点定理)</h3><blockquote><p>Given a complete lattice <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>L</mi><mo separator="true">,</mo><mtext> </mtext><mo>⊑</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(L,\,\sqsubseteq)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span></span></span></span>, if<br>  (1) <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo>:</mo><mtext> </mtext><mi>L</mi><mo>→</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">f:\,L\to L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span> is monotonic and (2) L is finite, then<br>the <font color="red">least fixed point</font> of f can be found by iterating<br>  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi mathvariant="normal">⊥</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mi>f</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi mathvariant="normal">⊥</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><msup><mi>f</mi><mi>k</mi></msup><mo stretchy="false">(</mo><mi mathvariant="normal">⊥</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(\bot),\,f(f(\bot)),\,f^k(\bot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">⊥</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">⊥</span><span class="mclose">))</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⊥</span><span class="mclose">)</span></span></span></span> until a fixed point reached<br>the <font color="blue">greatest fixed point</font> of f can be found by iterating<br>  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi mathvariant="normal">⊤</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mi>f</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi mathvariant="normal">⊤</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><msup><mi>f</mi><mi>k</mi></msup><mo stretchy="false">(</mo><mi mathvariant="normal">⊤</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(\top),\,f(f(\top)),\,f^k(\top)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">⊤</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">⊤</span><span class="mclose">))</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">⊤</span><span class="mclose">)</span></span></span></span> until a fixed point reached</p></blockquote><p>证明略</p><h2 id="Relate-Iterative-Algorithm-to-Fixed-Point-Theorem">Relate Iterative Algorithm to Fixed Point Theorem</h2><img src="Relate-to.png" alt="Relate-to" style="zoom:30%;"><p>证明 function F is monotonic 省略</p><p>什么时候迭代算法到达不动点？</p><blockquote><p>The height of a lattice <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span></span></span></span> is the length of the longest path from Top to Bottom in the lattice.</p></blockquote><p>lattice 的高度定义为从 Top 到 Bottom 的最长路径的长度，假设 lattice 的高度为h，CFG 的节点数为 k，假设每次迭代只能让一个节点在 lattice 增长一个高度，那么最坏情况下迭代次数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mi>h</mi><mo>∗</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">i=h*k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>。</p><h2 id="May-Must-Analysis-A-Lattice-View">May/Must Analysis, A Lattice View</h2><img src="May-must-analysis.png" alt="May-must-analysis" style="zoom:30%;"><h2 id="MOP-and-Distributivity">MOP and Distributivity</h2><h3 id="Meet-Over-All-Paths-Solution-MOP">Meet-Over-All-Paths Solution (MOP)</h3><img src="MOP.png" alt="MOP" style="zoom:30%;"><p>之前的数据流分析算法（Iterative Algorithm）是流敏感的，而 MOP 是路径敏感的。</p><h3 id="font-color-blue-Ours-font-Iterative-Algorithm-vs-font-color-red-MOP-font"><font color="blue">Ours</font> (Iterative Algorithm) vs. <font color="red">MOP</font></h3><img src="Ours-vs-MOP.png" alt="Ours-vs-MOP" style="zoom:30%;"><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mstyle mathcolor="blue"><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><msub><mi>S</mi><mn>4</mn></msub><mo stretchy="false">]</mo></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><msub><mi>S</mi><mn>3</mn></msub><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>f</mi><msub><mi>S</mi><mn>3</mn></msub></msub><mo stretchy="false">(</mo><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><msub><mi>S</mi><mn>3</mn></msub><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>f</mi><msub><mi>S</mi><mn>3</mn></msub></msub><mo stretchy="false">(</mo><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><msub><mi>S</mi><mn>1</mn></msub><mo stretchy="false">]</mo><mtext> </mtext><mo>⊔</mo><mtext> </mtext><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><msub><mi>S</mi><mn>2</mn></msub><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>f</mi><msub><mi>S</mi><mn>3</mn></msub></msub><mo stretchy="false">(</mo><msub><mi>f</mi><msub><mi>S</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><msub><mi>S</mi><mn>1</mn></msub><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mtext> </mtext><mo>⊔</mo><mtext> </mtext><msub><mi>f</mi><msub><mi>S</mi><mn>2</mn></msub></msub><mo stretchy="false">(</mo><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><msub><mi>S</mi><mn>2</mn></msub><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>f</mi><msub><mi>S</mi><mn>3</mn></msub></msub><mo stretchy="false">(</mo><msub><mi>f</mi><msub><mi>S</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>y</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mtext> </mtext><mo>⊔</mo><mtext> </mtext><msub><mi>f</mi><msub><mi>S</mi><mn>2</mn></msub></msub><mo stretchy="false">(</mo><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>y</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mstyle mathcolor="red"><mi>M</mi><mi>O</mi><mi>P</mi><mo stretchy="false">[</mo><msub><mi>S</mi><mn>4</mn></msub><mo stretchy="false">]</mo></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>f</mi><msub><mi>S</mi><mn>3</mn></msub></msub><mo stretchy="false">(</mo><msub><mi>f</mi><msub><mi>S</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>y</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mtext> </mtext><mo>⊔</mo><mtext> </mtext><msub><mi>f</mi><msub><mi>S</mi><mn>3</mn></msub></msub><mo stretchy="false">(</mo><msub><mi>f</mi><msub><mi>S</mi><mn>2</mn></msub></msub><mo stretchy="false">(</mo><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>y</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mspace width="2em"></mspace><mo>⇒</mo><mspace width="2em"></mspace><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mstyle mathcolor="blue"><mi>O</mi><mi>u</mi><mi>r</mi><mi>s</mi></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo>⊔</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mstyle mathcolor="red"><mi>M</mi><mi>O</mi><mi>P</mi></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>⊔</mo><mi>F</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\begin{aligned}\textcolor{blue}{IN[S_4]}&amp;=OUT[S_3] \\&amp;=f_{S_3}(IN[S_3]) \\&amp;=f_{S_3}(OUT[S_1]\,\sqcup\,OUT[S_2]) \\&amp;=f_{S_3}(f_{S_1}(IN[S_1])\,\sqcup\,f_{S_2}(IN[S_2])) \\&amp;=f_{S_3}(f_{S_1}(OUT[Entry])\,\sqcup\,f_{S_2}(OUT[Entry]))\\\textcolor{red}{MOP[S_4]}&amp;=f_{S_3}(f_{S_1}(OUT[Entry]))\,\sqcup\,f_{S_3}(f_{S_2}(OUT[Entry])) \\\end{aligned}\qquad \Rightarrow \qquad\begin{aligned}\textcolor{blue}{Ours}&amp;=F(x\sqcup y) \\\textcolor{red}{MOP}&amp;=F(x)\sqcup F(y) \\\end{aligned}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9.3em;vertical-align:-4.4em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.9em;"><span style="top:-6.9em;"><span class="pstrut" style="height:6.75em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.75em;"><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;color:blue;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;color:blue;">N</span><span class="mopen" style="color:blue;">[</span><span class="mord" style="color:blue;"><span class="mord mathnormal" style="margin-right:0.05764em;color:blue;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:blue;"><span class="mord mtight" style="color:blue;">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose" style="color:blue;">]</span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:red;">MOP</span><span class="mopen" style="color:red;">[</span><span class="mord" style="color:red;"><span class="mord mathnormal" style="margin-right:0.05764em;color:red;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose" style="color:red;">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.25em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.75em;"><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">])</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">])</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">])</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]))</span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">ry</span><span class="mclose">])</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">ry</span><span class="mclose">]))</span></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">ry</span><span class="mclose">]))</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">ry</span><span class="mclose">]))</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.25em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:2em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:2em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;color:blue;">O</span><span class="mord mathnormal" style="color:blue;">u</span><span class="mord mathnormal" style="color:blue;">rs</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:red;">MOP</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.4em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>根据最小上界 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>q</mi><mi>c</mi><mi>u</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">sqcup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">c</span><span class="mord mathnormal">u</span><span class="mord mathnormal">p</span></span></span></span> 的定义，我们有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>⊑</mo><mi>x</mi><mo>⊔</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x\sqsubseteq x\sqcup y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>⊑</mo><mi>x</mi><mo>⊔</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">y\sqsubseteq x\sqcup y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>；</p><p>因为转换函数 F 是单调的，我们有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>⊑</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo>⊔</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x)\sqsubseteq F(x\sqcup y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo>⊑</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo>⊔</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(y)\sqsubseteq F(x\sqcup y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>；</p><p>这意味着 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo>⊔</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x\sqcup y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 的一个上界；</p><p>因为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>⊔</mo><mi>F</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x)\sqcup F(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 的最小上界，我们有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>⊔</mo><mi>F</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo>⊑</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo>⊔</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x)\sqcup F(y)\sqsubseteq F(x\sqcup y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>；</p><p>因此 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="red"><mi>M</mi><mi>O</mi><mi>P</mi></mstyle><mo>⊑</mo><mstyle mathcolor="blue"><mi>O</mi><mi>u</mi><mi>r</mi><mi>s</mi></mstyle></mrow><annotation encoding="application/x-tex">\textcolor{red}{MOP}\sqsubseteq \textcolor{blue}{Ours}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;color:red;">MOP</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;color:blue;">O</span><span class="mord mathnormal" style="color:blue;">u</span><span class="mord mathnormal" style="color:blue;">rs</span></span></span></span>，即 MOP 是更加精确的。</p><p>但是，当 F 是 distributive （F 满足分配率）时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo>⊔</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>⊔</mo><mi>F</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(x\sqcup y)=F(x)\sqcup F(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，因此 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="red"><mi>M</mi><mi>O</mi><mi>P</mi></mstyle><mo>=</mo><mstyle mathcolor="blue"><mi>O</mi><mi>u</mi><mi>r</mi><mi>s</mi></mstyle></mrow><annotation encoding="application/x-tex">\textcolor{red}{MOP}=\textcolor{blue}{Ours}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;color:red;">MOP</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;color:blue;">O</span><span class="mord mathnormal" style="color:blue;">u</span><span class="mord mathnormal" style="color:blue;">rs</span></span></span></span>，此时 Iterative Algorithm 和 MOP 一样精确。</p><p>BitVector 或 Gen/Kill (set union/intersection for join/meet) 问题都是满足分配率的。</p><h2 id="Constant-Propagation">Constant Propagation</h2><blockquote><p>Given a variable x at program point p, determine whether x is guaranteed to hold a constant value at p.</p></blockquote><p>对于在程序点 p 的一个变量 x，判断 x 的值在 p 点是否为一个常量（恒定值）。</p><p>CFG 中每个节点的 OUT 包含一个 (x, v) 集合，x 是变量，v 是变量 x 在该点的值。</p><p>上文中提到的数据流分析框架 (D, L, F)：</p><ol><li><p>Direaction</p><p>显然对于常量传播分析（Constant Propagation Analysis），data flow 是 <font color="red">forward</font>。</p></li><li><p>Lattice</p><ul><li><p>Domian of the values V</p><img src="CPA-domain.png" alt="CPA-domain" style="zoom:30%;"><p>常量传播分析是一种 must analysis，其最小上界为 undefined，因为在程序开始之前我们并不知道每个程序点上变量的具体值，因此视为未定义的；最大下界是 NAC（Not A Constant），而中间就是各种常量。</p></li><li><p>Meet Operator <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊓</mo></mrow><annotation encoding="application/x-tex">\sqcap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">⊓</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd class="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">A</mi><mi mathvariant="normal">C</mi></mrow><mo>⊓</mo><mi>v</mi><mo>=</mo><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">A</mi><mi mathvariant="normal">C</mi></mrow></mrow></mstyle></mtd><mtd class="mtr-glue"></mtd><mtd class="mml-eqn-num"></mtd></mtr><mtr><mtd class="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mi mathvariant="normal">U</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">D</mi><mi mathvariant="normal">E</mi><mi mathvariant="normal">F</mi></mrow><mo>⊓</mo><mi>v</mi><mo>=</mo><mi>v</mi></mrow></mstyle></mtd><mtd class="mtr-glue"></mtd><mtd class="mml-eqn-num"></mtd></mtr><mtr><mtd class="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>c</mi><mo>⊓</mo><mi>v</mi><mo>=</mo><mtext> </mtext><mo stretchy="false">?</mo></mrow></mstyle></mtd><mtd class="mtr-glue"></mtd><mtd class="mml-eqn-num"></mtd></mtr><mtr><mtd class="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>c</mi><mo>⊓</mo><mi>c</mi><mo>=</mo><mi>c</mi></mrow></mstyle></mtd><mtd class="mtr-glue"></mtd><mtd class="mml-eqn-num"></mtd></mtr><mtr><mtd class="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>c</mi><mn>1</mn></msub><mo>⊓</mo><msub><mi>c</mi><mn>2</mn></msub><mo>=</mo><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">A</mi><mi mathvariant="normal">C</mi></mrow></mrow></mstyle></mtd><mtd class="mtr-glue"></mtd><mtd class="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{align}&amp;\mathrm{NAC}\sqcap v=\mathrm{NAC} \\&amp;\mathrm{UNDEF}\sqcap v=v \\&amp;c\sqcap v =\,? \\&amp;c\sqcap c=c \\&amp;c_1\sqcap c_2=\mathrm{NAC} \\\end{align}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.5em;vertical-align:-3.5em;"></span><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4em;"><span style="top:-6em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span><span style="top:0em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.5em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4em;"><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathrm">NAC</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊓</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathrm">NAC</span></span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathrm">UNDEF</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊓</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊓</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mclose">?</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊓</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">c</span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊓</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathrm">NAC</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.5em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4em;"><span style="top:-6em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-4.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-3em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span><span style="top:0em;"><span class="pstrut" style="height:2.84em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.5em;"><span></span></span></span></span></span></span></span></span></p><p>公式(2) 表示常量传播分析通常不关注未初始化的变量（Uninitialized variables），即允许漏报。</p><p>在每个程序汇聚点（path confluence, PC），我们需要对所有进入的数据流值使用 meet 操作。</p></li></ul></li><li><p>Transfer Functions</p><blockquote><p>Given a statement <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>:</mo><mi>x</mi><mo>=</mo><mo>…</mo></mrow><annotation encoding="application/x-tex">s: x = \ldots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.123em;"></span><span class="minner">…</span></span></span></span>, we define its transfer function F as</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo>:</mo><mtext> </mtext><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>s</mi><mo stretchy="false">]</mo><mo>=</mo><mi>g</mi><mi>e</mi><mi>n</mi><mo>∪</mo><mo stretchy="false">(</mo><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><mi>s</mi><mo stretchy="false">]</mo><mo>−</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi mathvariant="normal">_</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F:\,OUT[s]=gen\cup (IN[s]-\{(x,\,\_)\})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal">s</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.75em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">[</span><span class="mord mathnormal">s</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mopen">{(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mclose">)})</span></span></span></span></span></p><p>(We use val(x) to denote the lattice value that variable x holds)</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mo>:</mo><mi>x</mi><mo>=</mo><mi>c</mi><mo separator="true">;</mo><mtext> </mtext><mstyle mathcolor="green"><mtext>//&nbsp;c&nbsp;is&nbsp;a&nbsp;constant</mtext></mstyle></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>g</mi><mi>e</mi><mi>n</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>c</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mo>:</mo><mi>x</mi><mo>=</mo><mi>y</mi><mo separator="true">;</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>g</mi><mi>e</mi><mi>n</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>v</mi><mi>a</mi><mi>l</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mo>:</mo><mi>x</mi><mo>=</mo><mi>y</mi><mtext>  </mtext><mi>o</mi><mi>p</mi><mtext>  </mtext><mi>z</mi><mo separator="true">;</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>g</mi><mi>e</mi><mi>n</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>f</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mtext> </mtext><mi>z</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mtext>  </mtext><mi>o</mi><mi>p</mi><mtext>  </mtext><mi>v</mi><mi>a</mi><mi>l</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="green"><mrow><mtext>//&nbsp;if&nbsp;</mtext><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi><mi>a</mi><mi>l</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mstyle><mtext>&nbsp;and&nbsp;</mtext><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi><mi>a</mi><mi>l</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mstyle><mtext>&nbsp;are&nbsp;constants</mtext></mrow></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">A</mi><mi mathvariant="normal">C</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="green"><mrow><mtext>//&nbsp;if&nbsp;</mtext><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi><mi>a</mi><mi>l</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mstyle><mtext>&nbsp;or&nbsp;</mtext><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi><mi>a</mi><mi>l</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mstyle><mtext>&nbsp;is&nbsp;NAC</mtext></mrow></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">U</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">D</mi><mi mathvariant="normal">E</mi><mi mathvariant="normal">F</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathcolor="green"><mtext>//&nbsp;otherewize</mtext></mstyle></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}s: x = c;\,\text{\color{green}{// c is a constant}} &amp;gen=\{(x,\,c)\} \\s: x = y; &amp;gen=\{(x,\,val(y))\} \\s: x = y\;op\;z; &amp;gen=\{(x,\,f(y,\,z))\} \\\\f(y,z)=\begin{cases}val(y)\;op\;val(z) &amp;\text{\color{green}{// if $val(y)$ and $val(z)$ are constants}} \\\mathrm{NAC} &amp;\text{\color{green}{// if $val(y)$ or $val(z)$ is NAC}} \\\mathrm{UNDEF} &amp;\text{\color{green}{// otherewize}}\end{cases}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9.12em;vertical-align:-4.31em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.81em;"><span style="top:-8.38em;"><span class="pstrut" style="height:4.41em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">c</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord" style="color:green;"><span class="mord" style="color:green;">//&nbsp;c&nbsp;is&nbsp;a&nbsp;constant</span></span></span></span></span><span style="top:-7.18em;"><span class="pstrut" style="height:4.41em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">;</span></span></span><span style="top:-5.98em;"><span class="pstrut" style="height:4.41em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mpunct">;</span></span></span><span style="top:-4.78em;"><span class="pstrut" style="height:4.41em;"></span><span class="mord"></span></span><span style="top:-2.01em;"><span class="pstrut" style="height:4.41em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">NAC</span></span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">UNDEF</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord" style="color:green;"><span class="mord" style="color:green;">//&nbsp;if&nbsp;</span><span class="mord mathnormal" style="margin-right:0.03588em;color:green;">v</span><span class="mord mathnormal" style="color:green;">a</span><span class="mord mathnormal" style="margin-right:0.01968em;color:green;">l</span><span class="mopen" style="color:green;">(</span><span class="mord mathnormal" style="margin-right:0.03588em;color:green;">y</span><span class="mclose" style="color:green;">)</span><span class="mord" style="color:green;">&nbsp;and&nbsp;</span><span class="mord mathnormal" style="margin-right:0.03588em;color:green;">v</span><span class="mord mathnormal" style="color:green;">a</span><span class="mord mathnormal" style="margin-right:0.01968em;color:green;">l</span><span class="mopen" style="color:green;">(</span><span class="mord mathnormal" style="margin-right:0.04398em;color:green;">z</span><span class="mclose" style="color:green;">)</span><span class="mord" style="color:green;">&nbsp;are&nbsp;constants</span></span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord" style="color:green;"><span class="mord" style="color:green;">//&nbsp;if&nbsp;</span><span class="mord mathnormal" style="margin-right:0.03588em;color:green;">v</span><span class="mord mathnormal" style="color:green;">a</span><span class="mord mathnormal" style="margin-right:0.01968em;color:green;">l</span><span class="mopen" style="color:green;">(</span><span class="mord mathnormal" style="margin-right:0.03588em;color:green;">y</span><span class="mclose" style="color:green;">)</span><span class="mord" style="color:green;">&nbsp;or&nbsp;</span><span class="mord mathnormal" style="margin-right:0.03588em;color:green;">v</span><span class="mord mathnormal" style="color:green;">a</span><span class="mord mathnormal" style="margin-right:0.01968em;color:green;">l</span><span class="mopen" style="color:green;">(</span><span class="mord mathnormal" style="margin-right:0.04398em;color:green;">z</span><span class="mclose" style="color:green;">)</span><span class="mord" style="color:green;">&nbsp;is&nbsp;NAC</span></span></span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord" style="color:green;"><span class="mord" style="color:green;">//&nbsp;otherewize</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.31em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:4.81em;"><span style="top:-6.97em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">c</span><span class="mclose">)}</span></span></span><span style="top:-5.77em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">))}</span></span></span><span style="top:-4.57em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">))}</span></span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>(if s is not an assignment statement, F is the identity function)</p></blockquote></li></ol><p>常量传播分析是不可分配的（Nondistributivity）</p><img src="CPA-example.png" alt="CPA-example" style="zoom:30%;"><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>X</mi><mo>⊓</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">A</mi><mi mathvariant="normal">C</mi></mrow><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">A</mi><mi mathvariant="normal">C</mi></mrow><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">A</mi><mi mathvariant="normal">C</mi></mrow><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mi>F</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>⊓</mo><mi>F</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">A</mi><mi mathvariant="normal">C</mi></mrow><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mrow><mi mathvariant="normal">N</mi><mi mathvariant="normal">A</mi><mi mathvariant="normal">C</mi></mrow><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><mn>10</mn><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mspace linebreak="newline"></mspace><mi>F</mi><mo stretchy="false">(</mo><mi>X</mi><mo>⊓</mo><mi>Y</mi><mo stretchy="false">)</mo><mo mathvariant="normal">≠</mo><mi>F</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>⊓</mo><mi>F</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>F</mi><mo stretchy="false">(</mo><mi>X</mi><mo>⊓</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>⊑</mo><mi>F</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>⊓</mo><mi>F</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(X\sqcap Y)=\{(a,\mathrm{NAC}),\,(b,\mathrm{NAC}),\,(c,\mathrm{NAC})\} \\F(X)\sqcap F(Y)=\{(a,\mathrm{NAC}),\,(b,\mathrm{NAC}),\,(c,10)\} \\F(X\sqcap Y)\neq F(X)\sqcap F(Y) \\F(X\sqcap Y)\sqsubseteq F(X)\sqcap F(Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊓</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">NAC</span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">NAC</span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">NAC</span></span><span class="mclose">)}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊓</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">NAC</span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">NAC</span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">10</span><span class="mclose">)}</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊓</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊓</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊓</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊑</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊓</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span></span></p><p>常量传播分析具有单调性。</p><h2 id="Worklist-Algorithm">Worklist Algorithm</h2><p>Worklist Algorithm 是 Iterative Algorithm 的优化，Iterative Algorithm 存在冗余计算，Worklist Algorithm 只计算变化的 node。</p><img src="Worklist-Algorithm.png" alt="Worklist-Algorithm" style="zoom:30%;">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Iterative-Algorithm&quot;&gt;Iterative Algorithm&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对于一个含有 k 个节点的 CFG（program），迭代算法会在每次迭代时更新每个节点 n 的 OUT[n]。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;
      
    
    </summary>
    
    
      <category term="Program Analysis" scheme="https://car0ta.github.io/categories/Program-Analysis/"/>
    
    
      <category term="Static Program Analysis" scheme="https://car0ta.github.io/tags/Static-Program-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Static Program Analysis (Data Flow Analysis-Applications)</title>
    <link href="https://car0ta.github.io/2022/04/25/Static-Program-Analysis-Data-Flow-Analysis-Applications/"/>
    <id>https://car0ta.github.io/2022/04/25/Static-Program-Analysis-Data-Flow-Analysis-Applications/</id>
    <published>2022-04-25T12:13:47.000Z</published>
    <updated>2022-05-18T14:51:09.561Z</updated>
    
    <content type="html"><![CDATA[<h2 id="数据流分析简介">数据流分析简介</h2><p>两类分析：</p><ul><li><p>may analysis (over-approximation)<br>程序分析的结果可能是正确的（大部分静态分析都是 may analysis）</p></li><li><p>must analysis (under-approximation)<br>程序分析的结果一定是正确的</p></li></ul><p>may analysis 和 must analysis 在特定的场景下都是为了 safety analysis (safe-approximation)</p><h2 id="预备知识">预备知识</h2><h3 id="输入输出状态">输入输出状态</h3><ul><li><p>每一条 IR 的都会将一个输入状态（Input State）转换为输出状态（Output State）</p></li><li><p>输入状态/输出状态和语句前/后的程序点（program point）相关联</p></li></ul><img src="Input-and-Output-States.png" alt="Input-and-Output-States" style="zoom:30%;"><p>在数据流分析中，我们将每一个程序点和一个数据流值进行关联，这个数据流值代表当前程序点所有可能的程序状态的抽象表示。</p><img src="program-ststes.png" alt="program-ststes" style="zoom:30%;"><p>数据流分析是在一系列 safe-approximation 规则约束下，解出每一条 statement/BB 的 IN 和 OUT。</p><ul><li>IN 和 OUT 指每一条语句的输入和输出</li><li>约束（constraint）基于语义（transfer functions）和控制流</li></ul><h3 id="转换函数的约束">转换函数的约束</h3><p>前向分析和后向分析</p><img src="transfer-function-constraint.png" alt="transfer-function-constraint" style="zoom:30%;"><h3 id="控制流的约束">控制流的约束</h3><img src="control-flow-constraint.png" alt="control-flow-constraint" style="zoom:30%;"><h2 id="定义可达性分析-Reaching-Definition-Analysis">定义可达性分析 (Reaching Definition Analysis)</h2><p>本节不涉及的两个概念：</p><ul><li>Method Calls<br>函数调用涉及到过程间分析（Inter-procedural Analysis），本节只针对过程内分析（Intra-procedural Analysis）</li><li>Aliases<br>两个变量实际指向同一块内存地址，将在指针分析（Pointer Analysis）中介绍</li></ul><h3 id="定义可达性-Reaching-Definitions">定义可达性 (Reaching Definitions)</h3><blockquote><p>A <strong>definition d</strong> at program point p reaches a point q if there is a path from p to q such that d is not “killed” along that path.</p></blockquote><img src="Reaching-Definitions.png" alt="Reaching-Definitions" style="zoom:30%;"><ul><li>变量 v 的定义（definition）是一条赋值语句</li><li>在程序点 p 处的变量 v 的定义能够到达程序点 q 当且仅当存在一条从 p 到 q 的路径且路径上没有出现变量 v 的新定义</li><li>Reaching Definitions 可以用来检测可能的未定义变量，例如变量 v 在使用之前未定义（undefined reached v）</li></ul><h3 id="定义可达性分析算法">定义可达性分析算法</h3><ol><li><p>Data Flow Values/Facts</p><ul><li>程序中所有变量的定义</li><li>可以用 bit vectors 表示，有多少个赋值语句就有多少位；0表示定义不可达，1表示定义可达。</li></ul><img src="Data-Flow-Values.png" alt="Data-Flow-Values" style="zoom:30%;"></li><li><p>定义 Transfer Function<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>:</mo><mi>v</mi><mo>=</mo><mi>x</mi><mi>o</mi><mi>p</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">D: v = x op y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，这条语句生成（generate）了变量 v 的一个定义 D，并删除（kill）了程序中该条语句之前的所有关于变量 v 的定义，即剩余还没到达的定义不受影响。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>=</mo><msub><mrow><mi>g</mi><mi>e</mi><mi>n</mi></mrow><mi>B</mi></msub><mo>∪</mo><mo stretchy="false">(</mo><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>−</mo><msub><mrow><mi>k</mi><mi>i</mi><mi>l</mi><mi>l</mi></mrow><mi>B</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">OUT[B]={gen}_{B}\cup(IN[B]-{kill}_{B})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7997em;vertical-align:-0.2441em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2342em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ki</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><img src="Transfer-Function-sample.png" alt="Transfer-Function-sample" style="zoom:30%;"></li><li><p>定义 Control-Flow Handling<br>IN[B] 是所有 B 的所有前驱结点的 OUT 的并集</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>=</mo><msub><mo lspace="0em" rspace="0em">⋃</mo><mrow><mi>P</mi><mtext> </mtext><mi>a</mi><mtext> </mtext><mi>p</mi><mi>r</mi><mi>e</mi><mi>d</mi><mi>e</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>o</mi><mi>r</mi><mtext> </mtext><mi>o</mi><mi>f</mi><mtext> </mtext><mi>B</mi></mrow></msub><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>P</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">IN[B]={\bigcup }_{P\, a\, predecessor\, of\, B}OUT[P]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7858em;vertical-align:-0.7358em;"></span><span class="mord"><span class="mord"><span class="mop op-symbol large-op" style="position:relative;top:0em;">⋃</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.1136em;"><span style="top:-2.1003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">a</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">ecessor</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7358em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">]</span></span></span></span></span></p><img src="Control-Flow-Handling-sample.png" alt="Control-Flow-Handling-sample" style="zoom:30%;"></li><li><p>算法设计（经典的迭代算法）</p><ul><li>将 Entry 和 BB (basic block) 的 OUT 都设置为空</li></ul><img src="Algorithm-of-RDA.png" alt="Algorithm-of-RDA" style="zoom:30%;"></li></ol><p>分析结果</p><img src="RDA-result.png" alt="RDA-result" style="zoom:30%;"><p>算法最终为什么会结束（到达不动点，Pixed point）</p><ul><li>gen 和 kill 是不会变的</li><li>当一些变化流入 IN[S] 时，这些变化要么被 kill 掉，要么 survivor 加入到 OUT[S] 中</li><li>新加入 OUT[S] 中变化要么来自于 gen，要么来自于 survivor，这些将不再改变</li><li>因此 OUT[S] 是不会缩小的（e.g., 0-&gt;1 or 1-&gt;1）</li><li>因为这些变化是有限的（最多程序中的所有定义的变量都能到达），因此当 OUT[S] 不再发生变化时迭代完成，算法终止。</li></ul><img src="RDA-stop-reason.png" alt="RDA-stop-reason" style="zoom:30%;"><h2 id="活跃变量分析-Live-Variables-Analysis">活跃变量分析 (Live Variables Analysis)</h2><h3 id="活跃变量-Live-Variables">活跃变量 (Live Variables)</h3><blockquote><p>Live variables analysis tells whether the value of <strong>variable v</strong> at program point p could be used along some path in CFG starting at p. If so, v is live at p; otherwise, v is dead at p.</p></blockquote><img src="Live-Variable.png" alt="Live-Variable" style="zoom:30%;"><ul><li>活跃变量分析用来确定程序点 p 处的变量 v 的值是否在从 p 出发的某条路径上使用，如果使用到了 v，则称 v 在 p 点活跃的。</li><li>变量 v 在 p 点活跃当且仅当存在一条从 p 开始的路径上使用了变量 v，且在使用前没有被重新定义。</li></ul><h3 id="活跃变量分析算法">活跃变量分析算法</h3><ol><li><p>Data Flow Values/Facts<br>程序中的所有变量可以表示为一个位向量（bit vectors），0表示变量 dead，1表示变量 live。<br><img src="variable-bit-vectors.png" alt="variable-bit-vectors" style="zoom:30%;"></p></li><li><p>定义 Transfer Function 和 Control-Flow Handling<br><img src="LVA-function.png" alt="LVA-function" style="zoom:30%;"></p><ul><li>后向分析（backward analysis）</li><li>如果在一个基本块中，变量 v 先 redefine 后 use，那么最初 define 的变量 v 相当于没有被 use。</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>=</mo><msub><mrow><mi>u</mi><mi>s</mi><mi>e</mi></mrow><mi>B</mi></msub><mo>∪</mo><mo stretchy="false">(</mo><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>−</mo><msub><mrow><mi>d</mi><mi>e</mi><mi>f</mi></mrow><mi>B</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>=</mo><msub><mo lspace="0em" rspace="0em">⋃</mo><mrow><mi>S</mi><mtext> </mtext><mi>a</mi><mtext> </mtext><mi>s</mi><mi>u</mi><mi>c</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>o</mi><mi>r</mi><mtext> </mtext><mi>o</mi><mi>f</mi><mtext> </mtext><mi>B</mi></mrow></msub><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><mi>S</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">IN[B]={use}_{B}\cup(OUT[B]-{def}_{B})\\OUT[B]={\bigcup}_{S\, a\, successor\, of\, B}IN[S]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="mord mathnormal">se</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2342em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7858em;vertical-align:-0.7358em;"></span><span class="mord"><span class="mord"><span class="mop op-symbol large-op" style="position:relative;top:0em;">⋃</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.1136em;"><span style="top:-2.1003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">a</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">ccessor</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7358em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">]</span></span></span></span></span></p></li><li><p>算法设计<br><img src="Algorithm-of-LVA.png" alt="Algorithm-of-LVA" style="zoom:30%;"></p></li></ol><p>分析结果</p><img src="LVA-result.png" alt="LVA-result" style="zoom:30%;"><h2 id="可用表达式分析-Available-Expressions-Analysis">可用表达式分析 (Available Expressions Analysis)</h2><h3 id="可用表达式-Available-Expressions">可用表达式 (Available Expressions)</h3><blockquote><p>An expression x op y is available at program point p if (1) all paths from the entry to p <strong>must</strong> pass througth the evaluation of x op y,  and (2) after the last evaluation of x op y, there is no redefinition of x or y.</p></blockquote><ul><li>可用表达式可以用于全局公共子表达式的计算。也就是说，如果一个表达式在上次计算的值在这次仍然可用，我们就可以直接用上次计算的结果而不需要重新计算。</li></ul><h3 id="可用表达式分析算法">可用表达式分析算法</h3><ol><li><p>Data Flow Values/Facts</p><p>程序中的所有表达式可以用一个位向量表示。<br><img src="Expression-bit-vectors.png" alt="Expression-bit-vectors" style="zoom:30%;"></p></li><li><p>定义 Transfer Function 和 Control Flow Handling<br><img src="AEA-function.png" alt="AEA-function" style="zoom:30%;"></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>=</mo><msub><mrow><mi>g</mi><mi>e</mi><mi>n</mi></mrow><mi>B</mi></msub><mo>∪</mo><mo stretchy="false">(</mo><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>−</mo><msub><mrow><mi>k</mi><mi>i</mi><mi>l</mi><mi>l</mi></mrow><mi>B</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>=</mo><msub><mo lspace="0em" rspace="0em">⋂</mo><mrow><mi>P</mi><mtext> </mtext><mi>a</mi><mtext> </mtext><mi>p</mi><mi>r</mi><mi>e</mi><mi>d</mi><mi>e</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>o</mi><mi>r</mi><mtext> </mtext><mi>o</mi><mi>f</mi><mtext> </mtext><mi>B</mi></mrow></msub><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>P</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">OUT[B]={gen}_{B}\cup (IN[B]-{kill}_{B})\\IN[B]={\bigcap}_{P\, a\, predecessor\, of\, B}OUT[P]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7997em;vertical-align:-0.2441em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2342em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ki</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7858em;vertical-align:-0.7358em;"></span><span class="mord"><span class="mord"><span class="mop op-symbol large-op" style="position:relative;top:0em;">⋂</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.1136em;"><span style="top:-2.1003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">a</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">ecessor</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7358em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">]</span></span></span></span></span></p></li><li><p>算法设计</p><img src="Algorithm-of-AEA.png" alt="Algorithm-of-AEA" style="zoom:30%;"></li></ol><p>分析结果</p><img src="AEA-result.png" alt="AEA-result" style="zoom:30%;"><h2 id="总结">总结</h2><table><thead><tr><th></th><th>Reaching Definitions</th><th>Live Variables</th><th>Available Expressions</th></tr></thead><tbody><tr><td>Domain</td><td>Set of Definitions</td><td>Set of Variables</td><td>Set of Expressions</td></tr><tr><td>Direction</td><td>Forward</td><td>Backward</td><td>Forward</td></tr><tr><td>May/Must</td><td>May</td><td>May</td><td>Must</td></tr><tr><td>Boundary</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>e</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>y</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">OUT[entry]=\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">ry</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><mi>e</mi><mi>x</mi><mi>i</mi><mi>t</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">IN[exit]=\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">[</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>e</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>y</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">OUT[entry]=\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">ry</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span></span></span></span></td></tr><tr><td>Initialization</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">OUT[B]=\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">IN[B]=\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>=</mo><mo>∪</mo></mrow><annotation encoding="application/x-tex">OUT[B]=\cup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∪</span></span></span></span></td></tr><tr><td>Transfer function</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>=</mo><msub><mrow><mi>g</mi><mi>e</mi><mi>n</mi></mrow><mi>B</mi></msub><mo>∪</mo><mo stretchy="false">(</mo><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>−</mo><msub><mrow><mi>k</mi><mi>i</mi><mi>l</mi><mi>l</mi></mrow><mi>B</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">OUT[B]={gen}_{B}\cup(IN[B]-{kill}_{B})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7997em;vertical-align:-0.2441em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2342em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ki</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>=</mo><msub><mrow><mi>u</mi><mi>s</mi><mi>e</mi></mrow><mi>B</mi></msub><mo>∪</mo><mo stretchy="false">(</mo><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>−</mo><msub><mrow><mi>d</mi><mi>e</mi><mi>f</mi></mrow><mi>B</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">IN[B]={use}_{B}\cup(OUT[B]-{def}_{B})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="mord mathnormal">se</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2342em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>U</mi><mi>T</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>=</mo><msub><mrow><mi>g</mi><mi>e</mi><mi>n</mi></mrow><mi>B</mi></msub><mo>∪</mo><mo stretchy="false">(</mo><mi>I</mi><mi>N</mi><mo stretchy="false">[</mo><mi>B</mi><mo stretchy="false">]</mo><mo>−</mo><msub><mrow><mi>k</mi><mi>i</mi><mi>l</mi><mi>l</mi></mrow><mi>B</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">OUT[B]={gen}_{B}\cup (IN[B]-{kill}_{B})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7997em;vertical-align:-0.2441em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2342em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">ki</span><span class="mord mathnormal" style="margin-right:0.01968em;">ll</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td></tr><tr><td>Meet</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∪</mo></mrow><annotation encoding="application/x-tex">\cup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∪</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∪</mo></mrow><annotation encoding="application/x-tex">\cup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∪</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5556em;"></span><span class="mord">∩</span></span></span></span></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;数据流分析简介&quot;&gt;数据流分析简介&lt;/h2&gt;
&lt;p&gt;两类分析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;may analysis (over-approximation)&lt;br&gt;
程序分析的结果可能是正确的（大部分静态分析都是 may analysis）&lt;/p&gt;
&lt;/li
      
    
    </summary>
    
    
      <category term="Program Analysis" scheme="https://car0ta.github.io/categories/Program-Analysis/"/>
    
    
      <category term="Static Program Analysis" scheme="https://car0ta.github.io/tags/Static-Program-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Static Program Analysis (Intermediate Representation)</title>
    <link href="https://car0ta.github.io/2022/04/22/Static-Program-Analysis-Intermediate-Representation/"/>
    <id>https://car0ta.github.io/2022/04/22/Static-Program-Analysis-Intermediate-Representation/</id>
    <published>2022-04-22T06:31:20.000Z</published>
    <updated>2023-03-07T13:32:23.120Z</updated>
    
    <content type="html"><![CDATA[<h2 id="编译器和静态分析器">编译器和静态分析器</h2><img src="Compiler.png" alt="Compiler" style="zoom:30%;"><p>编译器（Compiler）将源代码（Source code）转换为机器代码（Machine code），步骤如下：</p><ul><li>词法分析器（Scanner）：结合正则表达式（Regular Expression），通过词法分析（Lexical Analysis）将源代码转换成 Tokens</li><li>语法分析器（Parser）：结合上下文无关文法（Context-Free Grammar），通过语法分析（Syntax Analysis）将 Tokens 解析为抽象语法树（Abstract Syntax Tree, AST）</li><li>语义分析器（Type checker）：结合属性文法（Attribute Grammar），通过语义分析（Semantic Analysis）将 AST 解析为 Decorated AST</li><li>翻译器（Translator）：将 Decorated AST 翻译成三地址码这样的中间表示（IR）</li><li>代码生成器（Code Generator）：将 IR 转换成机器码</li></ul><p>静态分析器则是基于 IR 做静态分析（如代码优化）。</p><h2 id="AST-vs-IR">AST vs. IR</h2><img src="ASTvsIR.png" alt="ASTvsIR" style="zoom:30%;"><p>AST</p><ul><li>high-level 且贴近语法结构</li><li>通常是依赖于语言的</li><li>适合快速的类型检查进行语义分析</li><li>缺少控制流信息</li></ul><p>IR</p><ul><li>low-level 且贴近机器码</li><li>通常是独立于语言的（语言无关性）</li><li>IR 形式简洁且统一</li><li>包含控制流信息</li></ul><p>因此，IR 通常作为静态分析的基础。</p><h2 id="三地址码">三地址码</h2><p>三地址码（Three-Address Code, 3AC）是一种常用的 IR，三地址码中每一条指令的右侧最多只能有一个操作符，因此通常需要引入中间变量。</p><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">t = a + b + 3</span><br><span class="line">==&gt;</span><br><span class="line">t1 = a + b</span><br><span class="line">t2 = t1 + 3</span><br></pre></td></tr></tbody></table></figure><p>每一个三地址码最多只有3个地址，地址可以是：</p><ul><li>变量名（Name）：a, b</li><li>常量值（Constant）：3</li><li>编译器生成的临时变量（Compiler-generated temporary）：t1, t2</li></ul><p>常见的三地址码的形式：</p><img src="3AC-Forms.png" alt="3AC-Forms" style="zoom:30%;"><h2 id="Soot">Soot</h2><p>Soot 是 Java 中最流行的静态分析框架，Soot 中的一种常用 IR 是 jimple，它是一种类型化的、三地址的、基于语句的中间表示（typed, 3-addresses, statement based IR），用于简化 Java 字节码以便于分析。</p><p>jimple 中共有4中函数调用：</p><ul><li>specialinvoke: call constructor, call superclass methods,  call private methods</li><li>virtualinvoke: instance method calls (virtual dispatch)</li><li>interfaceinvoke: cannot optimization, checking interface implementation</li><li>staticinvoke: call static methods</li></ul><p>Java7 引入了 dynamicinvoke</p><p>method signature（方法签名）：class name: return type method name(parameter1 type, parameter2 type, …)</p><p>init vs. clinit</p><ul><li>init 是类的默认构造函数</li><li>clinit 是类的静态初始化函数</li></ul><h2 id="SSA">SSA*</h2><p>在 SSA（Static Single Assignment，静态单赋值） 中每一个变量赋值都会用不同的名称。</p><ul><li>每个变量定义用一个新的名称</li><li>后续使用中选择最新的变量</li><li>每一个变量只有一个定义</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">3AC       |  SSA</span><br><span class="line">p = a + b    p1 = a + b</span><br><span class="line">q = p - c    q1 = p1 - c</span><br><span class="line">p = q * d    p2 = q1 * d</span><br><span class="line">q = p + q    q2 = p2 + q1</span><br></pre></td></tr></tbody></table></figure><p>当变量在程序控制流的汇聚点使用时，会存在多个变量的问题。</p><img src="SSA-phi-function.png" alt="SSA-phi-function" style="zoom:30%;"><p>这时会引入一个特殊的合并操作符 φ，φ(x0, x1) 会根据控制流的真实路径确定选择哪一个变量。</p><p>SSA 的优势：</p><ul><li>控制流信息间接地集成到了唯一的变量名中<br>SSA 能够帮助到一些简化分析，如控制流不敏感分析（速度快但精度差）</li><li>变量的定义和使用是显式的<br>在一些请求式的任务中，数据的存储和传输会更加高效<br>有些优化基于 SSA 效果更好（如条件常量传播，全局变量编号等问题）</li></ul><p>SSA 的缺点：</p><ul><li>SSA 会引入太多的变量和 φ function</li><li>在转换为机器码时会引入低效率的问题（如大量的复制操作）</li></ul><img src="SSA-inefficiency-problem.png" alt="SSA-inefficiency-problem" style="zoom:50%;"><h2 id="Basic-Blocks-BB">Basic Blocks (BB)</h2><p>基本块是满足以下性质的最大的连续三地址码指令集合：</p><ul><li>只存在一个入口，即块中的第一条指令</li><li>只存在一个出口，即块中的最后一条指令</li></ul><p>如何构建基本块：</p><ul><li><p>输入：程序 P 的三地址码序列</p></li><li><p>输出：程序 P 的基本块</p></li><li><p>方法：</p><ol><li><p>确定程序 P 中的 leaders</p><ul><li>程序 P 的第一条指令是一个 leader</li><li>任何跳转的目标指令是一个 leader</li><li>任何跳转指令的下一跳指令是一个 leader</li></ul></li><li><p>构建程序 P 的基本块</p><ul><li>一个基本块包含一个 leader 及其后续的指令，直到下一个 leader</li></ul></li></ol></li></ul><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><img src="Build-BB.png" alt="Build-BB" style="zoom:30%;"><h2 id="Control-Flow-Graph-CFG">Control Flow Graph (CFG)</h2><p>CFG 中的节点是基本块，CFG 的构建流程：</p><ul><li>从基本块 A 到基本块 B 添加一条边<ul><li>A 的结尾有一条指向 B 的跳转指令</li><li>A 的结尾紧接着 B 的开头且A的结尾不是一条无条件跳转的指令</li></ul></li></ul><img src="CFG-edge.png" alt="CFG-edge" style="zoom:30%;"><ul><li>将跳转指令的标号转换为基本块的标号</li></ul><img src="replace-label.png" alt="replace-label" style="zoom:30%;"><p>若 A -&gt; B，则称 A 是 B 的前驱（predecessor），B 是 A 的后继（successor）</p><p>构建好基本块后，需要额外添加两个节点 —— 入口（Entry）和出口（Exit）</p><ul><li>这两个指令不对应任何 IR</li><li>入口有一条边指向包含第一条 IR 指令的基本块</li><li>如果一个基本块中包含 IR 中的最后一条指令，那么存在从这个基本块到出口的一条边</li></ul><img src="CFG.png" alt="CFG" style="zoom:30%;">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;编译器和静态分析器&quot;&gt;编译器和静态分析器&lt;/h2&gt;
&lt;img src=&quot;Compiler.png&quot; alt=&quot;Compiler&quot; style=&quot;zoom:30%;&quot;&gt;
&lt;p&gt;编译器（Compiler）将源代码（Source code）转换为机器代码（Machine
      
    
    </summary>
    
    
      <category term="Program Analysis" scheme="https://car0ta.github.io/categories/Program-Analysis/"/>
    
    
      <category term="Static Program Analysis" scheme="https://car0ta.github.io/tags/Static-Program-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Static Program Analysis (Introduction)</title>
    <link href="https://car0ta.github.io/2022/04/22/Static-Program-Analysis-Introduction/"/>
    <id>https://car0ta.github.io/2022/04/22/Static-Program-Analysis-Introduction/</id>
    <published>2022-04-22T03:22:07.000Z</published>
    <updated>2022-05-10T16:16:17.798Z</updated>
    
    <content type="html"><![CDATA[<p>学习资料：</p><p>南大软件分析课程视频</p><p><a href="https://space.bilibili.com/2919428/video">https://space.bilibili.com/2919428/video</a></p><p>南大软件分析课件</p><p><a href="https://pascal-group.bitbucket.io/courses/program-analysis-2020f/">https://pascal-group.bitbucket.io/courses/program-analysis-2020f/</a></p><p>静态程序分析公开教程</p><p><a href="https://spa-book.pblo.gq/">https://spa-book.pblo.gq/</a></p><p>静态程序分析课程笔记</p><p><a href="https://anemone.top/categories/Program-Language/">https://anemone.top/categories/Program-Language/</a></p><h2 id="程序语言的知识体系">程序语言的知识体系</h2><img src="PL.png" alt="PL" style="zoom:30%;"><p>过去十年语言的核心（language core）变化很少，但是程序变得越来越复杂。</p><p>编程语言类型：</p><p>命令式编程语言：Java, C, C++，程序按照指令一条一条地执行</p><p>函数式编程语言：Haskell，把逻辑包装成函数执行</p><p>逻辑式编程语言（声明式语言）：Prolog，通过逻辑与或非进行计算得到最终结果</p><h2 id="静态分析的作用">静态分析的作用</h2><ul><li>程序可靠性（Program Reliability）<br>空指针引用，内存泄漏等</li><li>程度安全性（Program Security）<br>隐私信息泄露，注入攻击等</li><li>编译优化（Compile Optimization）<br>Dead code elimination（程序无法执行到的一些代码）, code motion（如循环中重复初始化的变量可以移动到循环外）</li><li>程序理解（Program Understanding）<br>IDE 调用关系，变量类型指示</li></ul><h2 id="什么是静态分析">什么是静态分析</h2><p>静态分析是指在程序运行前通过对程序进行分析以得到程序的行为并推断出该程序是否具有某些属性。</p><ul><li>程序 P 是否存在隐私信息泄露？</li><li>程序 P 是否有空指针？</li><li>所有的 cast（类型转换）操作都是安全的吗？</li><li>v1 和 v2 所指向的是同一块内存地址吗？（加锁）</li><li>assert 语句是否会 fail？</li><li>程序 P 中是否存在死代码？如何优化？</li></ul><h2 id="莱斯定理（Rice’s-Theorem）">莱斯定理（Rice’s Theorem）</h2><blockquote><p>Any non-trial property of the behavior of program in a r.e. language is undecidable.</p></blockquote><ul><li>r.e. language（recursive enumerable language，递归可枚举语言） = Turing-recognizable language（图灵可识别语言）。一个语言是递归可枚举的语言，当且仅当存在一个图灵机，该图灵机仅接收该语言中的字符串（也就是说对于不在该语言中的字符串，该图灵机可以拒绝或者永不停机）。现有的大部分语言如 Java、C 等都是递归可枚举语言。</li><li>非平凡性质（non-trial）：一种属性满足部分递归可枚举语言，而在另一部分中不满足。对应的，平凡性质是指一种属性对所有的递归可枚举语言都满足或者都不满足。简单理解为上节中静态分析关注的一些问题都是非平凡性质。</li><li>不可判定的（undecidable）：不可判定是指某个问题无法得到准确的 Yes or No 的答案。</li></ul><p>莱斯定理指出，递归可枚举语言的所有非平凡性质都是不可判定的。</p><p>在静态分析领域中，莱斯定理可理解为不存在一个完美的（Perfect）静态分析（既 sound 又 complete 的静态分析）能够准确判断一个程序 P 是否存在一些 non-trial 的属性（如是否存在内存泄漏）。但是可以存在一个 Useful 的静态分析。</p><p><a href="https://blog.linyinfeng.com/posts/rices-theorem/">https://blog.linyinfeng.com/posts/rices-theorem/</a></p><h2 id="Sound-Complete">Sound &amp; Complete</h2><img src="sound&amp;complete.png" alt="sound&amp;complete" style="zoom:30%;"><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 假设程序 P 存在真实的 10 个内存泄漏，Complete 检测到其中的 6 个，而 Sound 检测到 16个（包含真实的 10个）。</p><table><thead><tr><th style="text-align:left">Complete</th><th style="text-align:left">Under-approximate（欠拟合）</th><th style="text-align:left">false negative（存在漏报）</th></tr></thead><tbody><tr><td style="text-align:left"><strong>Sound</strong></td><td style="text-align:left"><strong>Over-approximate（过拟合）</strong></td><td style="text-align:left"><strong>false positive（存在误报）</strong></td></tr></tbody></table><h2 id="Useful-static-analysis">Useful static analysis</h2><p>Compromise soundness -&gt; completeness（false negatives，存在漏报）</p><p>Compromise completeness -&gt; soundness（false positives，存在误报）</p><p>程序分析中绝大部分选择 <strong>soundness</strong> 的分析（Sound but not fully-precise static analysis），即接受误报；Soundness 对于编译优化、程序验证等一类问题是非常重要的。</p><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Safe Cast</p><img src="soundness.png" alt="soundness" style="zoom:30%;"><p>静态分析是在确保 soundness 的前提下，在精度（precision）和速度（speed）之间做一个平衡。</p><p><span class="github-emoji"><span>🌰</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f330.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> if-else</p><img src="static-analysis.png" alt="static-analysis" style="zoom:30%;"><p>静态分析的技术要点：</p><ul><li>Abstraction</li><li>Over-approximation<ul><li>Transfer functions</li><li>Control flows</li></ul></li></ul><h2 id="静态分析示例">静态分析示例</h2><p>分析程序 P 中所有变量的符号（﹢, ﹣, 0）</p><h3 id="Abstraction">Abstraction</h3><img src="Abstraction.png" alt="Abstraction" style="zoom:30%;"><p>Unknown：未知，既可能整也可能负也可能为 0</p><p>undefined：错误</p><h3 id="Over-approximation-Transfer-Functions">Over-approximation: Transfer Functions</h3><p>在静态分析中，Transfer functions 定义了每条程序语句在抽象值上进行计算的规则。</p><p>Transfer functions 根据程序分析的目标和程序中每条语句的语义进行构建。</p><img src="Transfer-functions.png" alt="Transfer-functions" style="zoom:30%;"><h3 id="Over-approximation-Control-Flows">Over-approximation: Control Flows</h3><img src="Control-flows.png" alt="Control-flows" style="zoom:30%;"><p>在实践中我们不可能枚举出所有的路径，因此程序分支的汇聚点需要进行 merge。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;学习资料：&lt;/p&gt;
&lt;p&gt;南大软件分析课程视频&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://space.bilibili.com/2919428/video&quot;&gt;https://space.bilibili.com/2919428/video&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;南大软
      
    
    </summary>
    
    
      <category term="Program Analysis" scheme="https://car0ta.github.io/categories/Program-Analysis/"/>
    
    
      <category term="Static Program Analysis" scheme="https://car0ta.github.io/tags/Static-Program-Analysis/"/>
    
  </entry>
  
  <entry>
    <title>Vul Pattern 1</title>
    <link href="https://car0ta.github.io/2022/04/13/Vul-Pattern-1/"/>
    <id>https://car0ta.github.io/2022/04/13/Vul-Pattern-1/</id>
    <published>2022-04-13T07:37:13.000Z</published>
    <updated>2022-06-12T14:29:59.951Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CVE-2020-0001">CVE-2020-0001</h2><h3 id="漏洞原理">漏洞原理</h3><p>在 frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java 的 getProcessRecordLocked 方法中，系统会在进程启动前判断同一用户是否已经启动相同包名的进程，如果启动进程的 uid 为 SYSTEM_UID（1000），则不会首先通过 <code>mProcessNames.get(processName, uid)</code> 方法同时根据包名和 uid 寻找进程，而是先调用 <code>mProcessNames.getMap().get(processName)</code> 方法通过进程名寻找相应的进程，再通过 <code>if (UserHandle.isApp(procUid) || !UserHandle.isSameUser(procUid, uid))</code> 判断找到的进程是否是属于当前用户。</p><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> ProcessRecord <span class="title function_">getProcessRecordLocked</span><span class="params">(String processName, <span class="type">int</span> uid, <span class="type">boolean</span> keepIfLarge)</span> {</span><br><span class="line">    <span class="keyword">if</span> (uid == SYSTEM_UID) {</span><br><span class="line">        <span class="comment">// The system gets to run in any process.  If there are multiple</span></span><br><span class="line">        <span class="comment">// processes with the same uid, just pick the first (this</span></span><br><span class="line">        <span class="comment">// should never happen).</span></span><br><span class="line">        SparseArray&lt;ProcessRecord&gt; procs = mProcessNames.getMap().get(processName);</span><br><span class="line">        <span class="keyword">if</span> (procs == <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">procCount</span> <span class="operator">=</span> procs.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; procCount; i++) {</span><br><span class="line">            <span class="keyword">final</span> <span class="type">int</span> <span class="variable">procUid</span> <span class="operator">=</span> procs.keyAt(i);</span><br><span class="line">            <span class="keyword">if</span> (UserHandle.isApp(procUid) || !UserHandle.isSameUser(procUid, uid)) {</span><br><span class="line">                <span class="comment">// Don't use an app process or different user process for system component.</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> procs.valueAt(i);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="type">ProcessRecord</span> <span class="variable">proc</span> <span class="operator">=</span> mProcessNames.get(processName, uid);</span><br></pre></td></tr></tbody></table></figure><p><code>UserHandle.isApp(procUid)</code> 会判断当前找到的进程所属用户是否为 regular app 级别（10000-19999）。如果在用户 App 中启动一个系统应用包名的服务（如 Settings），isApp 会返回 true，则会执行 continue 跳过当前进程，即认为该进程不是 SYSTEM_UID 启动。但是参考注释，如果用户 App 中启动一个具有系统应用包名的隔离服务，则 uid &gt; 90000，isApp 返回 false，即认为该进程是 SYSTEM_UID 启动。</p><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Whether a UID belongs to a regular app. *Note* "Not a regular app" does not mean</span></span><br><span class="line"><span class="comment"> * "it's system", because of isolated UIDs. Use {<span class="doctag">@link</span> #isCore} for that.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@hide</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isApp</span><span class="params">(<span class="type">int</span> uid)</span> {</span><br><span class="line">    <span class="keyword">if</span> (uid &gt; <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">appId</span> <span class="operator">=</span> getAppId(uid);</span><br><span class="line">        <span class="keyword">return</span> appId &gt;= Process.FIRST_APPLICATION_UID &amp;&amp; appId &lt;= Process.LAST_APPLICATION_UID;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="漏洞模式">漏洞模式</h3><ol><li>寻找进程有两种方式，一种直接通过 <code>mProcessNames.get(processName, uid)</code> 方法同时根据包名和 uid 查找进程；另一种是先通过 <code>mProcessNames.getMap().get(processName)</code> 方法根据包名找到进程组，再判断是否属于当前用户。这种一步分两步的操作可以重点关注两步操作的过程中是否存在绕过。</li><li>当看到判断某类 id 是否在一定范围内时，可以思考是否存在特殊情况使该类 id 不在此范围内。</li></ol><h3 id="参考-3">参考</h3><p><a href="https://www.60ru.com/3842.html">https://www.60ru.com/3842.html</a></p><p><a href="https://github.com/Zachinio/CVE-2020-0001">https://github.com/Zachinio/CVE-2020-0001</a></p><p><a href="https://android.googlesource.com/platform/frameworks/base/+/f5911687e9b9b9a9c26e1cb58f31c941fb199195">https://android.googlesource.com/platform/frameworks/base/+/f5911687e9b9b9a9c26e1cb58f31c941fb199195</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CVE-2020-0001&quot;&gt;CVE-2020-0001&lt;/h2&gt;
&lt;h3 id=&quot;漏洞原理&quot;&gt;漏洞原理&lt;/h3&gt;
&lt;p&gt;在 frameworks/base/services/core/java/com/android/server/am/ActivityMana
      
    
    </summary>
    
    
      <category term="Android Vuls" scheme="https://car0ta.github.io/categories/Android-Vuls/"/>
    
    
      <category term="Android" scheme="https://car0ta.github.io/tags/Android/"/>
    
      <category term="Vuls" scheme="https://car0ta.github.io/tags/Vuls/"/>
    
  </entry>
  
</feed>
